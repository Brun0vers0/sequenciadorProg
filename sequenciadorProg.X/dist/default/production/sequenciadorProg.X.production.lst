

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Nov 21 16:52:05 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_clearLCD
  1180                           	FNCALL	_main,_currentKey
  1181                           	FNCALL	_main,_delFIFO
  1182                           	FNCALL	_main,_displayFIFO
  1183                           	FNCALL	_main,_getFIFO
  1184                           	FNCALL	_main,_initKeyboard
  1185                           	FNCALL	_main,_initLCD
  1186                           	FNCALL	_main,_initSerialIO
  1187                           	FNCALL	_main,_keyboardScan
  1188                           	FNCALL	_main,_previousKey
  1189                           	FNCALL	_main,_putFIFO
  1190                           	FNCALL	_main,_resetFIFO
  1191                           	FNCALL	_main,_screen_car
  1192                           	FNCALL	_main,_screen_menu
  1193                           	FNCALL	_main,_serialIOscan
  1194                           	FNCALL	_main,_writeLCD
  1195                           	FNCALL	_serialIOscan,_serialIObyteShift
  1196                           	FNCALL	_serialIOscan,_serialIOload
  1197                           	FNCALL	_screen_menu,_writeLCD
  1198                           	FNCALL	_screen_car,_clearLCD
  1199                           	FNCALL	_screen_car,_writeLCD
  1200                           	FNCALL	_writeLCD,_gotoxy
  1201                           	FNCALL	_writeLCD,_putLCD
  1202                           	FNCALL	_gotoxy,_cmdLCD
  1203                           	FNCALL	_clearLCD,_cmdLCD
  1204                           	FNCALL	_resetFIFO,_delFIFO
  1205                           	FNCALL	_initLCD,_cmdLCD
  1206                           	FNROOT	_main
  1207                           	global	checktecla@F1329
  1208                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1209                           global __pidataBANK0
  1210                           __pidataBANK0:
  1211  00B7                     	file	"lcd.c"
  1212                           	line	110
  1213                           
  1214                           ;initializer for checktecla@F1329
  1215                           	retlw	020h
  1216  00B7  3420               	retlw	020h
  1217  00B8  3420               	retlw	020h
  1218  00B9  3420               	retlw	020h
  1219  00BA  3420               	retlw	020h
  1220  00BB  3420               	retlw	020h
  1221  00BC  3420               	retlw	05Bh
  1222  00BD  345B               	retlw	020h
  1223  00BE  3420               	retlw	020h
  1224  00BF  3420               	retlw	05Dh
  1225  00C0  345D               	retlw	020h
  1226  00C1  3420               	retlw	020h
  1227  00C2  3420               	retlw	020h
  1228  00C3  3420               	retlw	020h
  1229  00C4  3420               	retlw	020h
  1230  00C5  3420               	retlw	020h
  1231  00C6  3420               	retlw	low(0)
  1232  00C7  3400               	global	_keyboardMatrix
  1233                           psect	strings,class=STRING,delta=2,noexec
  1234                           global __pstrings
  1235                           __pstrings:
  1236  0003                     stringtab:
  1237  0003                     	global    __stringtab
  1238                           __stringtab:
  1239  0003                     ;	String table - string pointers are 1 byte each
  1240                           	btfsc	(btemp+1),7
  1241  0003  1BFF               	ljmp	stringcode
  1242  0004  280D               	bcf	status,7
  1243  0005  1383               	btfsc	(btemp+1),0
  1244  0006  187F               	bsf	status,7
  1245  0007  1783               	movf	indf,w
  1246  0008  0800               	incf fsr
  1247  0009  0A84               skipnz
  1248  000A  1903               incf btemp+1
  1249  000B  0AFF               	return
  1250  000C  0008               stringcode:stringdir:
  1251  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
  1252  000D  3000               movwf pclath
  1253  000E  008A               movf fsr,w
  1254  000F  0804               incf fsr
  1255  0010  0A84               	addwf pc
  1256  0011  0782               	global __stringbase
  1257                           __stringbase:
  1258  0012                     	retlw	0
  1259  0012  3400               psect	strings
  1260                           	global    __end_of__stringtab
  1261                           __end_of__stringtab:
  1262  0013                     	file	"keyboard.c"
  1263                           	line	39
  1264                           _keyboardMatrix:
  1265  0013                     	retlw	031h
  1266  0013  3431               	retlw	032h
  1267  0014  3432               	retlw	033h
  1268  0015  3433               	retlw	041h
  1269  0016  3441               	retlw	034h
  1270  0017  3434               	retlw	035h
  1271  0018  3435               	retlw	036h
  1272  0019  3436               	retlw	042h
  1273  001A  3442               	retlw	037h
  1274  001B  3437               	retlw	038h
  1275  001C  3438               	retlw	039h
  1276  001D  3439               	retlw	043h
  1277  001E  3443               	retlw	02Ah
  1278  001F  342A               	retlw	030h
  1279  0020  3430               	retlw	023h
  1280  0021  3423               	retlw	044h
  1281  0022  3444               	global __end_of_keyboardMatrix
  1282                           __end_of_keyboardMatrix:
  1283  0023                     psect	strings
  1284                           	file	"lcd.c"
  1285                           	line	17
  1286                           _indicePassos:
  1287  0023                     	retlw	low(0)
  1288  0023  3400               	retlw	03h
  1289  0024  3403               	retlw	07h
  1290  0025  3407               	retlw	0Bh
  1291  0026  340B               	retlw	0Eh
  1292  0027  340E               	global __end_of_indicePassos
  1293                           __end_of_indicePassos:
  1294  0028                     	global	_indPassosSize
  1295                           psect	strings
  1296                           	file	"lcd.c"
  1297                           	line	16
  1298                           _indPassosSize:
  1299  0028                     	retlw	05h
  1300  0028  3405               	global __end_of_indPassosSize
  1301                           __end_of_indPassosSize:
  1302  0029                     	global	_keyboardMatrix
  1303                           	global	_indPassosSize
  1304                           	global	_fifoHead
  1305                           	global	_lenSerialIO
  1306                           	global	_ptrSerialOut
  1307                           	global	_ptrSerialIn
  1308                           	global	_currKey
  1309                           	global	_prevKey
  1310                           	global	_fifoTail
  1311                           	global	_fifo
  1312                           	global	_SERIALIO
  1313                           _SERIALIO	set	5
  1314  0005                     	global	_PORTAbits
  1315                           _PORTAbits	set	0x5
  1316  0005                     	global	_LCD
  1317                           _LCD	set	8
  1318  0008                     	global	_PORTB
  1319                           _PORTB	set	0x6
  1320  0006                     	global	_KEYBOARDbits
  1321                           _KEYBOARDbits	set	0x6
  1322  0006                     	global	_TRISAbits
  1323                           _TRISAbits	set	0x85
  1324  0085                     	global	_TRISD
  1325                           _TRISD	set	0x88
  1326  0088                     	global	_OPTION_REGbits
  1327                           _OPTION_REGbits	set	0x81
  1328  0081                     	global	_WPUB
  1329                           _WPUB	set	0x95
  1330  0095                     	global	_TRISB
  1331                           _TRISB	set	0x86
  1332  0086                     	global	_ANSELbits
  1333                           _ANSELbits	set	0x188
  1334  0188                     	global	_ANSELH
  1335                           _ANSELH	set	0x189
  1336  0189                     	
  1337                           STR_3:	
  1338  0029                     	retlw	73	;'I'
  1339  0029  3449               	retlw	78	;'N'
  1340  002A  344E               	retlw	83	;'S'
  1341  002B  3453               	retlw	73	;'I'
  1342  002C  3449               	retlw	82	;'R'
  1343  002D  3452               	retlw	65	;'A'
  1344  002E  3441               	retlw	32	;' '
  1345  002F  3420               	retlw	65	;'A'
  1346  0030  3441               	retlw	32	;' '
  1347  0031  3420               	retlw	83	;'S'
  1348  0032  3453               	retlw	69	;'E'
  1349  0033  3445               	retlw	81	;'Q'
  1350  0034  3451               	retlw	85	;'U'
  1351  0035  3455               	retlw	69	;'E'
  1352  0036  3445               	retlw	78	;'N'
  1353  0037  344E               	retlw	46	;'.'
  1354  0038  342E               	retlw	0
  1355  0039  3400               psect	strings
  1356                           	
  1357                           STR_1:	
  1358  003A                     	retlw	83	;'S'
  1359  003A  3453               	retlw	69	;'E'
  1360  003B  3445               	retlw	81	;'Q'
  1361  003C  3451               	retlw	85	;'U'
  1362  003D  3455               	retlw	69	;'E'
  1363  003E  3445               	retlw	78	;'N'
  1364  003F  344E               	retlw	67	;'C'
  1365  0040  3443               	retlw	73	;'I'
  1366  0041  3449               	retlw	65	;'A'
  1367  0042  3441               	retlw	68	;'D'
  1368  0043  3444               	retlw	79	;'O'
  1369  0044  344F               	retlw	82	;'R'
  1370  0045  3452               	retlw	0
  1371  0046  3400               psect	strings
  1372                           	
  1373                           STR_2:	
  1374  0047                     	retlw	80	;'P'
  1375  0047  3450               	retlw	82	;'R'
  1376  0048  3452               	retlw	79	;'O'
  1377  0049  344F               	retlw	71	;'G'
  1378  004A  3447               	retlw	82	;'R'
  1379  004B  3452               	retlw	65	;'A'
  1380  004C  3441               	retlw	77	;'M'
  1381  004D  344D               	retlw	65	;'A'
  1382  004E  3441               	retlw	86	;'V'
  1383  004F  3456               	retlw	69	;'E'
  1384  0050  3445               	retlw	76	;'L'
  1385  0051  344C               	retlw	0
  1386  0052  3400               psect	strings
  1387                           ; #config settings
  1388                           global __CFG_FOSC$INTRC_NOCLKOUT
  1389                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1390  0000                     global __CFG_WDTE$OFF
  1391                           __CFG_WDTE$OFF equ 0x0
  1392  0000                     global __CFG_MCLRE$OFF
  1393                           __CFG_MCLRE$OFF equ 0x0
  1394  0000                     global __CFG_LVP$OFF
  1395                           __CFG_LVP$OFF equ 0x0
  1396  0000                     	file	"C:\Users\18175218\AppData\Local\Temp\s22o."
  1397                           	line	#
  1398                           psect cinit,class=CODE,delta=2
  1399                           global start_initialization
  1400                           start_initialization:
  1401  07E5                     
  1402                           global __initialization
  1403                           __initialization:
  1404  07E5                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1405                           global __pbssCOMMON
  1406                           __pbssCOMMON:
  1407  007D                     _fifoHead:
  1408  007D                            ds      1
  1409  007D                     
  1410                           psect	bssBANK0,class=BANK0,space=1,noexec
  1411                           global __pbssBANK0
  1412                           __pbssBANK0:
  1413  0020                     _lenSerialIO:
  1414  0020                            ds      1
  1415  0020                     
  1416                           _ptrSerialOut:
  1417  0021                            ds      1
  1418  0021                     
  1419                           _ptrSerialIn:
  1420  0022                            ds      1
  1421  0022                     
  1422                           _currKey:
  1423  0023                            ds      1
  1424  0023                     
  1425                           _prevKey:
  1426  0024                            ds      1
  1427  0024                     
  1428                           _fifoTail:
  1429  0025                            ds      1
  1430  0025                     
  1431                           _fifo:
  1432  0026                            ds      16
  1433  0026                     
  1434                           psect	dataBANK0,class=BANK0,space=1,noexec
  1435                           global __pdataBANK0
  1436                           __pdataBANK0:
  1437  0036                     	file	"lcd.c"
  1438                           	line	110
  1439                           checktecla@F1329:
  1440  0036                            ds      17
  1441  0036                     
  1442                           	file	"C:\Users\18175218\AppData\Local\Temp\s22o."
  1443                           	line	#
  1444                           global btemp
  1445                           psect inittext,class=CODE,delta=2
  1446                           global init_fetch0,btemp
  1447                           ;	Called with low address in FSR and high address in W
  1448                           init_fetch0:
  1449  00DB                     	movf btemp,w
  1450  00DB  087E               	movwf pclath
  1451  00DC  008A               	movf btemp+1,w
  1452  00DD  087F               	movwf pc
  1453  00DE  0082               global init_ram0
  1454                           ;Called with:
  1455                           ;	high address of idata address in btemp 
  1456                           ;	low address of idata address in btemp+1 
  1457                           ;	low address of data in FSR
  1458                           ;	high address + 1 of data in btemp-1
  1459                           init_ram0:
  1460  00DF                     	fcall init_fetch0
  1461  00DF  120A  118A  20DB  120A  118A  	movwf indf,f
  1462  00E4  0080               	incf fsr,f
  1463  00E5  0A84               	movf fsr,w
  1464  00E6  0804               	xorwf btemp-1,w
  1465  00E7  067D               	btfsc status,2
  1466  00E8  1903               	retlw 0
  1467  00E9  3400               	incf btemp+1,f
  1468  00EA  0AFF               	btfsc status,2
  1469  00EB  1903               	incf btemp,f
  1470  00EC  0AFE               	goto init_ram0
  1471  00ED  28DF               ; Initialize objects allocated to BANK0
  1472                           psect cinit,class=CODE,delta=2,merge=1
  1473                           global init_ram0, __pidataBANK0
  1474                           	bcf	status, 7	;select IRP bank0
  1475  07E5  1383               	movlw low(__pdataBANK0+17)
  1476  07E6  3047               	movwf btemp-1,f
  1477  07E7  00FD               	movlw high(__pidataBANK0)
  1478  07E8  3000               	movwf btemp,f
  1479  07E9  00FE               	movlw low(__pidataBANK0)
  1480  07EA  30B7               	movwf btemp+1,f
  1481  07EB  00FF               	movlw low(__pdataBANK0)
  1482  07EC  3036               	movwf fsr,f
  1483  07ED  0084               	fcall init_ram0
  1484  07EE  120A  118A  20DF  120A  118A  	line	#
  1485                           psect clrtext,class=CODE,delta=2
  1486                           global clear_ram0
  1487                           ;	Called with FSR containing the base address, and
  1488                           ;	W with the last address+1
  1489                           clear_ram0:
  1490  008A                     	clrwdt			;clear the watchdog before getting into this loop
  1491  008A  0064               clrloop0:
  1492  008B                     	clrf	indf		;clear RAM location pointed to by FSR
  1493  008B  0180               	incf	fsr,f		;increment pointer
  1494  008C  0A84               	xorwf	fsr,w		;XOR with final address
  1495  008D  0604               	btfsc	status,2	;have we reached the end yet?
  1496  008E  1903               	retlw	0		;all done for this memory range, return
  1497  008F  3400               	xorwf	fsr,w		;XOR again to restore value
  1498  0090  0604               	goto	clrloop0		;do the next byte
  1499  0091  288B               
  1500                           ; Clear objects allocated to BANK0
  1501                           psect cinit,class=CODE,delta=2,merge=1
  1502                           	movlw	low(__pbssBANK0)
  1503  07F3  3020               	movwf	fsr
  1504  07F4  0084               	movlw	low((__pbssBANK0)+016h)
  1505  07F5  3036               	fcall	clear_ram0
  1506  07F6  120A  118A  208A  120A  118A  ; Clear objects allocated to COMMON
  1507                           psect cinit,class=CODE,delta=2,merge=1
  1508                           	clrf	((__pbssCOMMON)+0)&07Fh
  1509  07FB  01FD               psect cinit,class=CODE,delta=2,merge=1
  1510                           global end_of_initialization,__end_of__initialization
  1511                           
  1512                           ;End of C runtime variable initialization code
  1513                           
  1514                           end_of_initialization:
  1515  07FC                     __end_of__initialization:
  1516  07FC                     clrf status
  1517  07FC  0183               ljmp _main	;jump to C main() function
  1518  07FD  120A  118A  2B9A   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1519                           global __pcstackCOMMON
  1520                           __pcstackCOMMON:
  1521  0070                     ?_displayFIFO:	; 1 bytes @ 0x0
  1522  0070                     ??_displayFIFO:	; 1 bytes @ 0x0
  1523  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1524  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1525  0070                     ?_initSerialIO:	; 1 bytes @ 0x0
  1526  0070                     ?_serialIOscan:	; 1 bytes @ 0x0
  1527  0070                     ?_putFIFO:	; 1 bytes @ 0x0
  1528  0070                     ??_putFIFO:	; 1 bytes @ 0x0
  1529  0070                     ?_getFIFO:	; 1 bytes @ 0x0
  1530  0070                     ??_getFIFO:	; 1 bytes @ 0x0
  1531  0070                     ?_delFIFO:	; 1 bytes @ 0x0
  1532  0070                     ??_delFIFO:	; 1 bytes @ 0x0
  1533  0070                     ?_resetFIFO:	; 1 bytes @ 0x0
  1534  0070                     ?_previousKey:	; 1 bytes @ 0x0
  1535  0070                     ??_previousKey:	; 1 bytes @ 0x0
  1536  0070                     ?_currentKey:	; 1 bytes @ 0x0
  1537  0070                     ??_currentKey:	; 1 bytes @ 0x0
  1538  0070                     ?_keyboardScan:	; 1 bytes @ 0x0
  1539  0070                     ??_keyboardScan:	; 1 bytes @ 0x0
  1540  0070                     ?_initKeyboard:	; 1 bytes @ 0x0
  1541  0070                     ??_initKeyboard:	; 1 bytes @ 0x0
  1542  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1543  0070                     ?_putLCD:	; 1 bytes @ 0x0
  1544  0070                     ??_putLCD:	; 1 bytes @ 0x0
  1545  0070                     ?_clearLCD:	; 1 bytes @ 0x0
  1546  0070                     ?_screen_car:	; 1 bytes @ 0x0
  1547  0070                     ?_screen_menu:	; 1 bytes @ 0x0
  1548  0070                     ?_main:	; 1 bytes @ 0x0
  1549  0070                     ?_serialIOload:	; 1 bytes @ 0x0
  1550  0070                     ??_serialIOload:	; 1 bytes @ 0x0
  1551  0070                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  1552  0070                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  1553  0070                     	global	initSerialIO@ptrOut
  1554                           initSerialIO@ptrOut:	; 1 bytes @ 0x0
  1555  0070                     	ds	1
  1556  0070                     	global	putFIFO@c
  1557                           putFIFO@c:	; 1 bytes @ 0x1
  1558  0071                     	global	getFIFO@aux
  1559                           getFIFO@aux:	; 1 bytes @ 0x1
  1560  0071                     	global	delFIFO@n
  1561                           delFIFO@n:	; 1 bytes @ 0x1
  1562  0071                     	global	serialIObyteShift@dataIn
  1563                           serialIObyteShift@dataIn:	; 1 bytes @ 0x1
  1564  0071                     	global	initSerialIO@length
  1565                           initSerialIO@length:	; 1 bytes @ 0x1
  1566  0071                     	ds	1
  1567  0071                     ??_initSerialIO:	; 1 bytes @ 0x2
  1568  0072                     	global	delFIFO@ret
  1569                           delFIFO@ret:	; 1 bytes @ 0x2
  1570  0072                     	global	cmdLCD@cmd
  1571                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1572  0072                     	global	putLCD@c
  1573                           putLCD@c:	; 1 bytes @ 0x2
  1574  0072                     	global	serialIObyteShift@dataOut
  1575                           serialIObyteShift@dataOut:	; 1 bytes @ 0x2
  1576  0072                     	ds	1
  1577  0072                     ??_resetFIFO:	; 1 bytes @ 0x3
  1578  0073                     	global	cmdLCD@nibble
  1579                           cmdLCD@nibble:	; 1 bytes @ 0x3
  1580  0073                     	global	putLCD@nibble
  1581                           putLCD@nibble:	; 1 bytes @ 0x3
  1582  0073                     	global	serialIObyteShift@dataBit
  1583                           serialIObyteShift@dataBit:	; 1 bytes @ 0x3
  1584  0073                     	global	initSerialIO@ptrIn
  1585                           initSerialIO@ptrIn:	; 1 bytes @ 0x3
  1586  0073                     	ds	1
  1587  0073                     ??_serialIOscan:	; 1 bytes @ 0x4
  1588  0074                     ??_initLCD:	; 1 bytes @ 0x4
  1589  0074                     ?_gotoxy:	; 1 bytes @ 0x4
  1590  0074                     ??_clearLCD:	; 1 bytes @ 0x4
  1591  0074                     	global	gotoxy@y
  1592                           gotoxy@y:	; 1 bytes @ 0x4
  1593  0074                     	ds	1
  1594  0074                     ??_gotoxy:	; 1 bytes @ 0x5
  1595  0075                     	ds	2
  1596  0075                     	global	gotoxy@x
  1597                           gotoxy@x:	; 1 bytes @ 0x7
  1598  0077                     	global	serialIOscan@j
  1599                           serialIOscan@j:	; 1 bytes @ 0x7
  1600  0077                     	ds	1
  1601  0077                     ?_writeLCD:	; 1 bytes @ 0x8
  1602  0078                     	global	keyboardScan@aux
  1603                           keyboardScan@aux:	; 1 bytes @ 0x8
  1604  0078                     	global	writeLCD@y
  1605                           writeLCD@y:	; 1 bytes @ 0x8
  1606  0078                     	global	serialIOscan@i
  1607                           serialIOscan@i:	; 1 bytes @ 0x8
  1608  0078                     	ds	1
  1609  0078                     	global	keyboardScan@i
  1610                           keyboardScan@i:	; 1 bytes @ 0x9
  1611  0079                     	global	writeLCD@ptr
  1612                           writeLCD@ptr:	; 2 bytes @ 0x9
  1613  0079                     	ds	1
  1614  0079                     	global	keyboardScan@j
  1615                           keyboardScan@j:	; 1 bytes @ 0xA
  1616  007A                     	ds	1
  1617  007A                     ??_writeLCD:	; 1 bytes @ 0xB
  1618  007B                     	ds	1
  1619  007B                     	global	writeLCD@x
  1620                           writeLCD@x:	; 1 bytes @ 0xC
  1621  007C                     	ds	1
  1622  007C                     ??_screen_menu:	; 1 bytes @ 0xD
  1623  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1624                           global __pcstackBANK0
  1625                           __pcstackBANK0:
  1626  0047                     ??_screen_car:	; 1 bytes @ 0x0
  1627  0047                     	ds	3
  1628  0047                     ??_main:	; 1 bytes @ 0x3
  1629  004A                     	ds	3
  1630  004A                     	global	main@a
  1631                           main@a:	; 1 bytes @ 0x6
  1632  004D                     	ds	1
  1633  004D                     	global	main@b
  1634                           main@b:	; 1 bytes @ 0x7
  1635  004E                     	ds	1
  1636  004E                     	global	main@c
  1637                           main@c:	; 1 bytes @ 0x8
  1638  004F                     	ds	1
  1639  004F                     	global	main@d
  1640                           main@d:	; 1 bytes @ 0x9
  1641  0050                     	ds	1
  1642  0050                     	global	main@atuador
  1643                           main@atuador:	; 1 bytes @ 0xA
  1644  0051                     	ds	1
  1645  0051                     	global	main@sensor
  1646                           main@sensor:	; 1 bytes @ 0xB
  1647  0052                     	ds	1
  1648  0052                     	global	main@tecla
  1649                           main@tecla:	; 1 bytes @ 0xC
  1650  0053                     	ds	1
  1651  0053                     	global	main@estado
  1652                           main@estado:	; 2 bytes @ 0xD
  1653  0054                     	ds	2
  1654  0054                     	global	main@rest
  1655                           main@rest:	; 1 bytes @ 0xF
  1656  0056                     	ds	1
  1657  0056                     ;!
  1658                           ;!Data Sizes:
  1659                           ;!    Strings     42
  1660                           ;!    Constant    22
  1661                           ;!    Data        17
  1662                           ;!    BSS         23
  1663                           ;!    Persistent  0
  1664                           ;!    Stack       0
  1665                           ;!
  1666                           ;!Auto Spaces:
  1667                           ;!    Space          Size  Autos    Used
  1668                           ;!    COMMON           14     13      14
  1669                           ;!    BANK0            80     16      55
  1670                           ;!    BANK1            80      0       0
  1671                           ;!    BANK3            96      0       0
  1672                           ;!    BANK2            96      0       0
  1673                           
  1674                           ;!
  1675                           ;!Pointer List with Targets:
  1676                           ;!
  1677                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
  1678                           ;!		 -> main@atuador(BANK0[1]), 
  1679                           ;!
  1680                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
  1681                           ;!		 -> main@sensor(BANK0[1]), 
  1682                           ;!
  1683                           ;!    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
  1684                           ;!		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 
  1685                           ;!
  1686                           ;!    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
  1687                           ;!		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 
  1688                           ;!
  1689                           ;!    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
  1690                           ;!		 -> STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), checktecla@linha2(BANK0[17]),
                                  
  1691                           ;!		 -> fifo(BANK0[16]), 
  1692                           ;!
  1693                           ;!    sp__displayFIFO	PTR void  size(1) Largest target is 16
  1694                           ;!		 -> fifo(BANK0[16]), 
  1695                           ;!
  1696                           
  1697                           
  1698                           ;!
  1699                           ;!Critical Paths under _main in COMMON
  1700                           ;!
  1701                           ;!    _main->_writeLCD
  1702                           ;!    _serialIOscan->_serialIObyteShift
  1703                           ;!    _screen_menu->_writeLCD
  1704                           ;!    _screen_car->_writeLCD
  1705                           ;!    _writeLCD->_gotoxy
  1706                           ;!    _gotoxy->_cmdLCD
  1707                           ;!    _clearLCD->_cmdLCD
  1708                           ;!    _resetFIFO->_delFIFO
  1709                           ;!    _initLCD->_cmdLCD
  1710                           ;!
  1711                           ;!Critical Paths under _main in BANK0
  1712                           ;!
  1713                           ;!    _main->_screen_car
  1714                           ;!
  1715                           ;!Critical Paths under _main in BANK1
  1716                           ;!
  1717                           ;!    None.
  1718                           ;!
  1719                           ;!Critical Paths under _main in BANK3
  1720                           ;!
  1721                           ;!    None.
  1722                           ;!
  1723                           ;!Critical Paths under _main in BANK2
  1724                           ;!
  1725                           ;!    None.
  1726                           
  1727 ;;
  1728 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1729 ;;
  1730                           
  1731                           ;!
  1732                           ;!Call Graph Tables:
  1733                           ;!
  1734                           ;! ---------------------------------------------------------------------------------
  1735                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1736                           ;! ---------------------------------------------------------------------------------
  1737                           ;! (0) _main                                                13    13      0    5986
  1738                           ;!                                              3 BANK0     13    13      0
  1739                           ;!                           _clearLCD
  1740                           ;!                         _currentKey
  1741                           ;!                            _delFIFO
  1742                           ;!                        _displayFIFO
  1743                           ;!                            _getFIFO
  1744                           ;!                       _initKeyboard
  1745                           ;!                            _initLCD
  1746                           ;!                       _initSerialIO
  1747                           ;!                       _keyboardScan
  1748                           ;!                        _previousKey
  1749                           ;!                            _putFIFO
  1750                           ;!                          _resetFIFO
  1751                           ;!                         _screen_car
  1752                           ;!                        _screen_menu
  1753                           ;!                       _serialIOscan
  1754                           ;!                           _writeLCD
  1755                           ;! ---------------------------------------------------------------------------------
  1756                           ;! (1) _serialIOscan                                         5     5      0     205
  1757                           ;!                                              4 COMMON     5     5      0
  1758                           ;!                  _serialIObyteShift
  1759                           ;!                       _serialIOload
  1760                           ;! ---------------------------------------------------------------------------------
  1761                           ;! (2) _serialIOload                                         0     0      0       0
  1762                           ;! ---------------------------------------------------------------------------------
  1763                           ;! (2) _serialIObyteShift                                    4     4      0     114
  1764                           ;!                                              0 COMMON     4     4      0
  1765                           ;! ---------------------------------------------------------------------------------
  1766                           ;! (1) _screen_menu                                          0     0      0    1213
  1767                           ;!                           _writeLCD
  1768                           ;! ---------------------------------------------------------------------------------
  1769                           ;! (1) _screen_car                                           3     3      0    1390
  1770                           ;!                                              0 BANK0      3     3      0
  1771                           ;!                           _clearLCD
  1772                           ;!                           _writeLCD
  1773                           ;! ---------------------------------------------------------------------------------
  1774                           ;! (1) _writeLCD                                             5     2      3    1213
  1775                           ;!                                              8 COMMON     5     2      3
  1776                           ;!                        _displayFIFO (ARG)
  1777                           ;!                             _gotoxy
  1778                           ;!                             _putLCD
  1779                           ;! ---------------------------------------------------------------------------------
  1780                           ;! (2) _putLCD                                               4     4      0      67
  1781                           ;!                                              0 COMMON     4     4      0
  1782                           ;! ---------------------------------------------------------------------------------
  1783                           ;! (2) _gotoxy                                               4     3      1     297
  1784                           ;!                                              4 COMMON     4     3      1
  1785                           ;!                             _cmdLCD
  1786                           ;! ---------------------------------------------------------------------------------
  1787                           ;! (2) _clearLCD                                             0     0      0     177
  1788                           ;!                             _cmdLCD
  1789                           ;! ---------------------------------------------------------------------------------
  1790                           ;! (1) _resetFIFO                                            0     0      0      46
  1791                           ;!                            _delFIFO
  1792                           ;! ---------------------------------------------------------------------------------
  1793                           ;! (2) _delFIFO                                              3     3      0      46
  1794                           ;!                                              0 COMMON     3     3      0
  1795                           ;! ---------------------------------------------------------------------------------
  1796                           ;! (1) _putFIFO                                              2     2      0      22
  1797                           ;!                                              0 COMMON     2     2      0
  1798                           ;! ---------------------------------------------------------------------------------
  1799                           ;! (1) _previousKey                                          0     0      0       0
  1800                           ;! ---------------------------------------------------------------------------------
  1801                           ;! (2) _keyboardScan                                        11    11      0     210
  1802                           ;!                                              0 COMMON    11    11      0
  1803                           ;! ---------------------------------------------------------------------------------
  1804                           ;! (1) _initSerialIO                                         4     2      2     251
  1805                           ;!                                              0 COMMON     4     2      2
  1806                           ;! ---------------------------------------------------------------------------------
  1807                           ;! (1) _initLCD                                              2     2      0     177
  1808                           ;!                                              4 COMMON     2     2      0
  1809                           ;!                             _cmdLCD
  1810                           ;! ---------------------------------------------------------------------------------
  1811                           ;! (3) _cmdLCD                                               4     4      0     177
  1812                           ;!                                              0 COMMON     4     4      0
  1813                           ;! ---------------------------------------------------------------------------------
  1814                           ;! (1) _initKeyboard                                         0     0      0       0
  1815                           ;! ---------------------------------------------------------------------------------
  1816                           ;! (1) _getFIFO                                              2     2      0      24
  1817                           ;!                                              0 COMMON     2     2      0
  1818                           ;! ---------------------------------------------------------------------------------
  1819                           ;! (1) _displayFIFO                                          0     0      0       0
  1820                           ;! ---------------------------------------------------------------------------------
  1821                           ;! (1) _currentKey                                           0     0      0       0
  1822                           ;! ---------------------------------------------------------------------------------
  1823                           ;! Estimated maximum stack depth 3
  1824                           ;! ---------------------------------------------------------------------------------
  1825                           ;!
  1826                           ;! Call Graph Graphs:
  1827                           ;!
  1828                           ;! _main (ROOT)
  1829                           ;!   _clearLCD
  1830                           ;!     _cmdLCD
  1831                           ;!   _currentKey
  1832                           ;!   _delFIFO
  1833                           ;!   _displayFIFO
  1834                           ;!   _getFIFO
  1835                           ;!   _initKeyboard
  1836                           ;!   _initLCD
  1837                           ;!     _cmdLCD
  1838                           ;!   _initSerialIO
  1839                           ;!   _keyboardScan
  1840                           ;!   _previousKey
  1841                           ;!   _putFIFO
  1842                           ;!   _resetFIFO
  1843                           ;!     _delFIFO
  1844                           ;!   _screen_car
  1845                           ;!     _clearLCD
  1846                           ;!       _cmdLCD
  1847                           ;!     _writeLCD
  1848                           ;!       _displayFIFO (ARG)
  1849                           ;!       _gotoxy (ARG)
  1850                           ;!         _cmdLCD
  1851                           ;!       _putLCD (ARG)
  1852                           ;!   _screen_menu
  1853                           ;!     _writeLCD
  1854                           ;!       _displayFIFO (ARG)
  1855                           ;!       _gotoxy (ARG)
  1856                           ;!         _cmdLCD
  1857                           ;!       _putLCD (ARG)
  1858                           ;!   _serialIOscan
  1859                           ;!     _serialIObyteShift
  1860                           ;!     _serialIOload
  1861                           ;!   _writeLCD
  1862                           ;!     _displayFIFO (ARG)
  1863                           ;!     _gotoxy (ARG)
  1864                           ;!       _cmdLCD
  1865                           ;!     _putLCD (ARG)
  1866                           ;!
  1867                           
  1868                           ;! Address spaces:
  1869                           
  1870                           ;!Name               Size   Autos  Total    Cost      Usage
  1871                           ;!BANK3               60      0       0       9        0.0%
  1872                           ;!BITBANK3            60      0       0       8        0.0%
  1873                           ;!SFR3                 0      0       0       4        0.0%
  1874                           ;!BITSFR3              0      0       0       4        0.0%
  1875                           ;!BANK2               60      0       0      11        0.0%
  1876                           ;!BITBANK2            60      0       0      10        0.0%
  1877                           ;!SFR2                 0      0       0       5        0.0%
  1878                           ;!BITSFR2              0      0       0       5        0.0%
  1879                           ;!BANK1               50      0       0       7        0.0%
  1880                           ;!BITBANK1            50      0       0       6        0.0%
  1881                           ;!SFR1                 0      0       0       2        0.0%
  1882                           ;!BITSFR1              0      0       0       2        0.0%
  1883                           ;!BANK0               50     10      37       5       68.8%
  1884                           ;!BITBANK0            50      0       0       4        0.0%
  1885                           ;!SFR0                 0      0       0       1        0.0%
  1886                           ;!BITSFR0              0      0       0       1        0.0%
  1887                           ;!COMMON               E      D       E       1      100.0%
  1888                           ;!BITCOMMON            E      0       0       0        0.0%
  1889                           ;!CODE                 0      0       0       0        0.0%
  1890                           ;!DATA                 0      0      45      12        0.0%
  1891                           ;!ABS                  0      0      45       3        0.0%
  1892                           ;!NULL                 0      0       0       0        0.0%
  1893                           ;!STACK                0      0       0       2        0.0%
  1894                           ;!EEDATA             100      0       0       0        0.0%
  1895                           
  1896                           	global	_main
  1897                           
  1898 ;; *************** function _main *****************
  1899 ;; Defined at:
  1900 ;;		line 48 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  estado          2   13[BANK0 ] int 
  1905 ;;  rest            1   15[BANK0 ] unsigned char 
  1906 ;;  tecla           1   12[BANK0 ] unsigned char 
  1907 ;;  sensor          1   11[BANK0 ] struct .
  1908 ;;  atuador         1   10[BANK0 ] struct .
  1909 ;;  d               1    9[BANK0 ] unsigned char 
  1910 ;;  c               1    8[BANK0 ] unsigned char 
  1911 ;;  b               1    7[BANK0 ] unsigned char 
  1912 ;;  a               1    6[BANK0 ] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : B00/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         0      10       0       0       0
  1924 ;;      Temps:          0       3       0       0       0
  1925 ;;      Totals:         0      13       0       0       0
  1926 ;;Total ram usage:       13 bytes
  1927 ;; Hardware stack levels required when called:    4
  1928 ;; This function calls:
  1929 ;;		_clearLCD
  1930 ;;		_currentKey
  1931 ;;		_delFIFO
  1932 ;;		_displayFIFO
  1933 ;;		_getFIFO
  1934 ;;		_initKeyboard
  1935 ;;		_initLCD
  1936 ;;		_initSerialIO
  1937 ;;		_keyboardScan
  1938 ;;		_previousKey
  1939 ;;		_putFIFO
  1940 ;;		_resetFIFO
  1941 ;;		_screen_car
  1942 ;;		_screen_menu
  1943 ;;		_serialIOscan
  1944 ;;		_writeLCD
  1945 ;; This function is called by:
  1946 ;;		Startup code after reset
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1950                           	file	"main.c"
  1951                           	line	48
  1952                           global __pmaintext
  1953                           __pmaintext:	;psect for function _main
  1954  039A                     psect	maintext
  1955                           	file	"main.c"
  1956                           	line	48
  1957                           	global	__size_of_main
  1958                           	__size_of_main	equ	__end_of_main-_main
  1959  044B                     	
  1960                           _main:	
  1961  039A                     ;incstack = 0
  1962                           	opt	stack 4
  1963                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1964                           	line	50
  1965                           	
  1966                           l1853:	
  1967  039A                     ;main.c: 50:     unsigned char tecla = 0;
  1968                           	bcf	status, 5	;RP0=0, select bank0
  1969  039A  1283               	bcf	status, 6	;RP1=0, select bank0
  1970  039B  1303               	clrf	(main@tecla)
  1971  039C  01D3               	line	51
  1972                           ;main.c: 51:     unsigned char a,b,c,d = 0;
  1973                           	clrf	(main@d)
  1974  039D  01D0               	line	52
  1975                           ;main.c: 52:     unsigned char rest = 0;
  1976                           	clrf	(main@rest)
  1977  039E  01D6               	line	55
  1978                           ;main.c: 53:     SENSORESbits_t sensor;;main.c: 54:     ATUADORESbits_t atuador;;main.c:
                                  55:     int estado = 0;
  1979                           	clrf	(main@estado)
  1980  039F  01D4               	clrf	(main@estado+1)
  1981  03A0  01D5               	line	56
  1982                           	
  1983                           l1855:	
  1984  03A1                     ;main.c: 56:     initLCD();
  1985                           	fcall	_initLCD
  1986  03A1  120A  118A  227D  120A  118A  	line	57
  1987                           	
  1988                           l1857:	
  1989  03A6                     ;main.c: 57:     screen_car();
  1990                           	fcall	_screen_car
  1991  03A6  120A  118A  2206  120A  118A  	line	58
  1992                           	
  1993                           l1859:	
  1994  03AB                     ;main.c: 58:     initKeyboard();
  1995                           	fcall	_initKeyboard
  1996  03AB  120A  118A  20C8  120A  118A  	line	59
  1997                           	
  1998                           l1861:	
  1999  03B0                     ;main.c: 59:     initSerialIO( &sensor, &atuador, 1 );
  2000                           	movlw	(low(main@atuador|((0x0)<<8)))&0ffh
  2001  03B0  3051               	bcf	status, 5	;RP0=0, select bank0
  2002  03B1  1283               	bcf	status, 6	;RP1=0, select bank0
  2003  03B2  1303               	movwf	(??_main+0)+0
  2004  03B3  00CA               	movf	(??_main+0)+0,w
  2005  03B4  084A               	movwf	(initSerialIO@ptrOut)
  2006  03B5  00F0               	clrf	(initSerialIO@length)
  2007  03B6  01F1               	incf	(initSerialIO@length),f
  2008  03B7  0AF1               	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  2009  03B8  3052               	fcall	_initSerialIO
  2010  03B9  120A  118A  219E  120A  118A  	line	60
  2011                           	
  2012                           l1863:	
  2013  03BE                     ;main.c: 60:     atuador.ABCD = 0x00;
  2014                           	bcf	status, 5	;RP0=0, select bank0
  2015  03BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2016  03BF  1303               	clrf	(main@atuador)
  2017  03C0  01D1               	goto	l1865
  2018  03C1  2BC2               	line	72
  2019                           ;main.c: 72:     while( 1 )
  2020                           	
  2021                           l172:	
  2022  03C2                     	line	78
  2023                           	
  2024                           l1865:	
  2025  03C2                     ;main.c: 73:     {;main.c: 78:         keyboardScan();
  2026                           	fcall	_keyboardScan
  2027  03C2  120A  118A  231B  120A  118A  	line	79
  2028                           	
  2029                           l1867:	
  2030  03C7                     ;main.c: 79:         screen_menu ();
  2031                           	fcall	_screen_menu
  2032  03C7  120A  118A  209D  120A  118A  	line	80
  2033                           ;main.c: 80:         switch( estado )
  2034                           	goto	l2009
  2035  03CC  2E15               	line	82
  2036                           ;main.c: 81:         {;main.c: 82:             case 0:
  2037                           	
  2038                           l174:	
  2039  03CD                     	line	83
  2040                           ;main.c: 83:                     break;
  2041                           	goto	l2011
  2042  03CD  2E8F               	line	84
  2043                           ;main.c: 84:             case 10:
  2044                           	
  2045                           l176:	
  2046  03CE                     	line	85
  2047                           	
  2048                           l1869:	
  2049  03CE                     ;main.c: 85:                     rest = getFIFO();
  2050                           	fcall	_getFIFO
  2051  03CE  120A  118A  2106  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2052  03D3  1283               	bcf	status, 6	;RP1=0, select bank0
  2053  03D4  1303               	movwf	(??_main+0)+0
  2054  03D5  00CA               	movf	(??_main+0)+0,w
  2055  03D6  084A               	movwf	(main@rest)
  2056  03D7  00D6               	line	86
  2057                           	
  2058                           l1871:	
  2059  03D8                     ;main.c: 86:                     if( rest == 'A' )
  2060                           		movlw	65
  2061  03D8  3041               	xorwf	((main@rest)),w
  2062  03D9  0656               	btfss	status,2
  2063  03DA  1D03               	goto	u901
  2064  03DB  2BDD               	goto	u900
  2065  03DC  2BDE               u901:
  2066  03DD                     	goto	l1875
  2067  03DD  2BE3               u900:
  2068  03DE                     	line	87
  2069                           	
  2070                           l1873:	
  2071  03DE                     ;main.c: 87:                         estado = 100;
  2072                           	movlw	064h
  2073  03DE  3064               	movwf	(main@estado)
  2074  03DF  00D4               	movlw	0
  2075  03E0  3000               	movwf	((main@estado))+1
  2076  03E1  00D5               	goto	l2011
  2077  03E2  2E8F               	line	88
  2078                           ;main.c: 88:                     else if( rest == 'B' )
  2079                           	
  2080                           l177:	
  2081  03E3                     	
  2082                           l1875:	
  2083  03E3                     		movlw	66
  2084  03E3  3042               	xorwf	((main@rest)),w
  2085  03E4  0656               	btfss	status,2
  2086  03E5  1D03               	goto	u911
  2087  03E6  2BE8               	goto	u910
  2088  03E7  2BE9               u911:
  2089  03E8                     	goto	l1879
  2090  03E8  2BEE               u910:
  2091  03E9                     	line	89
  2092                           	
  2093                           l1877:	
  2094  03E9                     ;main.c: 89:                         estado = 110;
  2095                           	movlw	06Eh
  2096  03E9  306E               	movwf	(main@estado)
  2097  03EA  00D4               	movlw	0
  2098  03EB  3000               	movwf	((main@estado))+1
  2099  03EC  00D5               	goto	l2011
  2100  03ED  2E8F               	line	90
  2101                           ;main.c: 90:                     else if( rest == 'C' )
  2102                           	
  2103                           l179:	
  2104  03EE                     	
  2105                           l1879:	
  2106  03EE                     		movlw	67
  2107  03EE  3043               	xorwf	((main@rest)),w
  2108  03EF  0656               	btfss	status,2
  2109  03F0  1D03               	goto	u921
  2110  03F1  2BF3               	goto	u920
  2111  03F2  2BF4               u921:
  2112  03F3                     	goto	l1883
  2113  03F3  2BF9               u920:
  2114  03F4                     	line	91
  2115                           	
  2116                           l1881:	
  2117  03F4                     ;main.c: 91:                         estado = 120;
  2118                           	movlw	078h
  2119  03F4  3078               	movwf	(main@estado)
  2120  03F5  00D4               	movlw	0
  2121  03F6  3000               	movwf	((main@estado))+1
  2122  03F7  00D5               	goto	l2011
  2123  03F8  2E8F               	line	92
  2124                           ;main.c: 92:                     else if( rest == 'D' )
  2125                           	
  2126                           l181:	
  2127  03F9                     	
  2128                           l1883:	
  2129  03F9                     		movlw	68
  2130  03F9  3044               	xorwf	((main@rest)),w
  2131  03FA  0656               	btfss	status,2
  2132  03FB  1D03               	goto	u931
  2133  03FC  2BFE               	goto	u930
  2134  03FD  2BFF               u931:
  2135  03FE                     	goto	l1887
  2136  03FE  2C04               u930:
  2137  03FF                     	line	93
  2138                           	
  2139                           l1885:	
  2140  03FF                     ;main.c: 93:                         estado = 130;
  2141                           	movlw	082h
  2142  03FF  3082               	movwf	(main@estado)
  2143  0400  00D4               	movlw	0
  2144  0401  3000               	movwf	((main@estado))+1
  2145  0402  00D5               	goto	l2011
  2146  0403  2E8F               	line	94
  2147                           ;main.c: 94:                     else if( rest == '1' )
  2148                           	
  2149                           l183:	
  2150  0404                     	
  2151                           l1887:	
  2152  0404                     		movlw	49
  2153  0404  3031               	xorwf	((main@rest)),w
  2154  0405  0656               	btfss	status,2
  2155  0406  1D03               	goto	u941
  2156  0407  2C09               	goto	u940
  2157  0408  2C0A               u941:
  2158  0409                     	goto	l1891
  2159  0409  2C0F               u940:
  2160  040A                     	line	95
  2161                           	
  2162                           l1889:	
  2163  040A                     ;main.c: 95:                         estado = 140;
  2164                           	movlw	08Ch
  2165  040A  308C               	movwf	(main@estado)
  2166  040B  00D4               	movlw	0
  2167  040C  3000               	movwf	((main@estado))+1
  2168  040D  00D5               	goto	l2011
  2169  040E  2E8F               	line	96
  2170                           ;main.c: 96:                     else if( rest == '2' )
  2171                           	
  2172                           l185:	
  2173  040F                     	
  2174                           l1891:	
  2175  040F                     		movlw	50
  2176  040F  3032               	xorwf	((main@rest)),w
  2177  0410  0656               	btfss	status,2
  2178  0411  1D03               	goto	u951
  2179  0412  2C14               	goto	u950
  2180  0413  2C15               u951:
  2181  0414                     	goto	l1895
  2182  0414  2C1A               u950:
  2183  0415                     	line	97
  2184                           	
  2185                           l1893:	
  2186  0415                     ;main.c: 97:                         estado = 150;
  2187                           	movlw	096h
  2188  0415  3096               	movwf	(main@estado)
  2189  0416  00D4               	movlw	0
  2190  0417  3000               	movwf	((main@estado))+1
  2191  0418  00D5               	goto	l2011
  2192  0419  2E8F               	line	98
  2193                           ;main.c: 98:                     else if( rest == '3' )
  2194                           	
  2195                           l187:	
  2196  041A                     	
  2197                           l1895:	
  2198  041A                     		movlw	51
  2199  041A  3033               	xorwf	((main@rest)),w
  2200  041B  0656               	btfss	status,2
  2201  041C  1D03               	goto	u961
  2202  041D  2C1F               	goto	u960
  2203  041E  2C20               u961:
  2204  041F                     	goto	l1899
  2205  041F  2C25               u960:
  2206  0420                     	line	99
  2207                           	
  2208                           l1897:	
  2209  0420                     ;main.c: 99:                         estado = 160;
  2210                           	movlw	0A0h
  2211  0420  30A0               	movwf	(main@estado)
  2212  0421  00D4               	movlw	0
  2213  0422  3000               	movwf	((main@estado))+1
  2214  0423  00D5               	goto	l2011
  2215  0424  2E8F               	line	100
  2216                           ;main.c: 100:                     else if( rest == '4' )
  2217                           	
  2218                           l189:	
  2219  0425                     	
  2220                           l1899:	
  2221  0425                     		movlw	52
  2222  0425  3034               	xorwf	((main@rest)),w
  2223  0426  0656               	btfss	status,2
  2224  0427  1D03               	goto	u971
  2225  0428  2C2A               	goto	u970
  2226  0429  2C2B               u971:
  2227  042A                     	goto	l1903
  2228  042A  2C30               u970:
  2229  042B                     	line	101
  2230                           	
  2231                           l1901:	
  2232  042B                     ;main.c: 101:                         estado = 170;
  2233                           	movlw	0AAh
  2234  042B  30AA               	movwf	(main@estado)
  2235  042C  00D4               	movlw	0
  2236  042D  3000               	movwf	((main@estado))+1
  2237  042E  00D5               	goto	l2011
  2238  042F  2E8F               	line	102
  2239                           ;main.c: 102:                     else if( rest == '5' )
  2240                           	
  2241                           l191:	
  2242  0430                     	
  2243                           l1903:	
  2244  0430                     		movlw	53
  2245  0430  3035               	xorwf	((main@rest)),w
  2246  0431  0656               	btfss	status,2
  2247  0432  1D03               	goto	u981
  2248  0433  2C35               	goto	u980
  2249  0434  2C36               u981:
  2250  0435                     	goto	l1907
  2251  0435  2C3B               u980:
  2252  0436                     	line	103
  2253                           	
  2254                           l1905:	
  2255  0436                     ;main.c: 103:                         estado = 180;
  2256                           	movlw	0B4h
  2257  0436  30B4               	movwf	(main@estado)
  2258  0437  00D4               	movlw	0
  2259  0438  3000               	movwf	((main@estado))+1
  2260  0439  00D5               	goto	l2011
  2261  043A  2E8F               	line	104
  2262                           ;main.c: 104:                     else if( rest == '6' )
  2263                           	
  2264                           l193:	
  2265  043B                     	
  2266                           l1907:	
  2267  043B                     		movlw	54
  2268  043B  3036               	xorwf	((main@rest)),w
  2269  043C  0656               	btfss	status,2
  2270  043D  1D03               	goto	u991
  2271  043E  2C40               	goto	u990
  2272  043F  2C41               u991:
  2273  0440                     	goto	l1911
  2274  0440  2C46               u990:
  2275  0441                     	line	105
  2276                           	
  2277                           l1909:	
  2278  0441                     ;main.c: 105:                         estado = 190;
  2279                           	movlw	0BEh
  2280  0441  30BE               	movwf	(main@estado)
  2281  0442  00D4               	movlw	0
  2282  0443  3000               	movwf	((main@estado))+1
  2283  0444  00D5               	goto	l2011
  2284  0445  2E8F               	line	106
  2285                           ;main.c: 106:                     else if( rest == '7' )
  2286                           	
  2287                           l195:	
  2288  0446                     	
  2289                           l1911:	
  2290  0446                     		movlw	55
  2291  0446  3037               	xorwf	((main@rest)),w
  2292  0447  0656               	btfss	status,2
  2293  0448  1D03               	goto	u1001
  2294  0449  2C4B               	goto	u1000
  2295  044A  2C4C               u1001:
  2296  044B                     	goto	l1915
  2297  044B  2C51               u1000:
  2298  044C                     	line	107
  2299                           	
  2300                           l1913:	
  2301  044C                     ;main.c: 107:                         estado = 200;
  2302                           	movlw	0C8h
  2303  044C  30C8               	movwf	(main@estado)
  2304  044D  00D4               	movlw	0
  2305  044E  3000               	movwf	((main@estado))+1
  2306  044F  00D5               	goto	l2011
  2307  0450  2E8F               	line	108
  2308                           ;main.c: 108:                     else if( rest == '8' )
  2309                           	
  2310                           l197:	
  2311  0451                     	
  2312                           l1915:	
  2313  0451                     		movlw	56
  2314  0451  3038               	xorwf	((main@rest)),w
  2315  0452  0656               	btfss	status,2
  2316  0453  1D03               	goto	u1011
  2317  0454  2C56               	goto	u1010
  2318  0455  2C57               u1011:
  2319  0456                     	goto	l1919
  2320  0456  2C5C               u1010:
  2321  0457                     	line	109
  2322                           	
  2323                           l1917:	
  2324  0457                     ;main.c: 109:                         estado = 210;
  2325                           	movlw	0D2h
  2326  0457  30D2               	movwf	(main@estado)
  2327  0458  00D4               	movlw	0
  2328  0459  3000               	movwf	((main@estado))+1
  2329  045A  00D5               	goto	l2011
  2330  045B  2E8F               	line	110
  2331                           ;main.c: 110:                     else if( rest == '9' )
  2332                           	
  2333                           l199:	
  2334  045C                     	
  2335                           l1919:	
  2336  045C                     		movlw	57
  2337  045C  3039               	xorwf	((main@rest)),w
  2338  045D  0656               	btfss	status,2
  2339  045E  1D03               	goto	u1021
  2340  045F  2C61               	goto	u1020
  2341  0460  2C62               u1021:
  2342  0461                     	goto	l1923
  2343  0461  2C67               u1020:
  2344  0462                     	line	111
  2345                           	
  2346                           l1921:	
  2347  0462                     ;main.c: 111:                         estado = 220;
  2348                           	movlw	0DCh
  2349  0462  30DC               	movwf	(main@estado)
  2350  0463  00D4               	movlw	0
  2351  0464  3000               	movwf	((main@estado))+1
  2352  0465  00D5               	goto	l2011
  2353  0466  2E8F               	line	112
  2354                           ;main.c: 112:                     else if( rest == 'a' )
  2355                           	
  2356                           l201:	
  2357  0467                     	
  2358                           l1923:	
  2359  0467                     		movlw	97
  2360  0467  3061               	xorwf	((main@rest)),w
  2361  0468  0656               	btfss	status,2
  2362  0469  1D03               	goto	u1031
  2363  046A  2C6C               	goto	u1030
  2364  046B  2C6D               u1031:
  2365  046C                     	goto	l1927
  2366  046C  2C72               u1030:
  2367  046D                     	line	113
  2368                           	
  2369                           l1925:	
  2370  046D                     ;main.c: 113:                         estado = 230;
  2371                           	movlw	0E6h
  2372  046D  30E6               	movwf	(main@estado)
  2373  046E  00D4               	movlw	0
  2374  046F  3000               	movwf	((main@estado))+1
  2375  0470  00D5               	goto	l2011
  2376  0471  2E8F               	line	114
  2377                           ;main.c: 114:                     else if( rest == 'b' )
  2378                           	
  2379                           l203:	
  2380  0472                     	
  2381                           l1927:	
  2382  0472                     		movlw	98
  2383  0472  3062               	xorwf	((main@rest)),w
  2384  0473  0656               	btfss	status,2
  2385  0474  1D03               	goto	u1041
  2386  0475  2C77               	goto	u1040
  2387  0476  2C78               u1041:
  2388  0477                     	goto	l1931
  2389  0477  2C7D               u1040:
  2390  0478                     	line	115
  2391                           	
  2392                           l1929:	
  2393  0478                     ;main.c: 115:                         estado = 240;
  2394                           	movlw	0F0h
  2395  0478  30F0               	movwf	(main@estado)
  2396  0479  00D4               	movlw	0
  2397  047A  3000               	movwf	((main@estado))+1
  2398  047B  00D5               	goto	l2011
  2399  047C  2E8F               	line	116
  2400                           ;main.c: 116:                     else if( rest == 'c' )
  2401                           	
  2402                           l205:	
  2403  047D                     	
  2404                           l1931:	
  2405  047D                     		movlw	99
  2406  047D  3063               	xorwf	((main@rest)),w
  2407  047E  0656               	btfss	status,2
  2408  047F  1D03               	goto	u1051
  2409  0480  2C82               	goto	u1050
  2410  0481  2C83               u1051:
  2411  0482                     	goto	l1935
  2412  0482  2C88               u1050:
  2413  0483                     	line	117
  2414                           	
  2415                           l1933:	
  2416  0483                     ;main.c: 117:                         estado = 250;
  2417                           	movlw	0FAh
  2418  0483  30FA               	movwf	(main@estado)
  2419  0484  00D4               	movlw	0
  2420  0485  3000               	movwf	((main@estado))+1
  2421  0486  00D5               	goto	l2011
  2422  0487  2E8F               	line	118
  2423                           ;main.c: 118:                     else if( rest == 'd' )
  2424                           	
  2425                           l207:	
  2426  0488                     	
  2427                           l1935:	
  2428  0488                     		movlw	100
  2429  0488  3064               	xorwf	((main@rest)),w
  2430  0489  0656               	btfss	status,2
  2431  048A  1D03               	goto	u1061
  2432  048B  2C8D               	goto	u1060
  2433  048C  2C8E               u1061:
  2434  048D                     	goto	l2011
  2435  048D  2E8F               u1060:
  2436  048E                     	line	119
  2437                           	
  2438                           l1937:	
  2439  048E                     ;main.c: 119:                         estado = 260;
  2440                           	movlw	04h
  2441  048E  3004               	movwf	(main@estado)
  2442  048F  00D4               	movlw	01h
  2443  0490  3001               	movwf	((main@estado))+1
  2444  0491  00D5               	goto	l2011
  2445  0492  2E8F               	
  2446                           l209:	
  2447  0493                     	goto	l2011
  2448  0493  2E8F               	
  2449                           l208:	
  2450  0494                     	goto	l2011
  2451  0494  2E8F               	
  2452                           l206:	
  2453  0495                     	goto	l2011
  2454  0495  2E8F               	
  2455                           l204:	
  2456  0496                     	goto	l2011
  2457  0496  2E8F               	
  2458                           l202:	
  2459  0497                     	goto	l2011
  2460  0497  2E8F               	
  2461                           l200:	
  2462  0498                     	goto	l2011
  2463  0498  2E8F               	
  2464                           l198:	
  2465  0499                     	goto	l2011
  2466  0499  2E8F               	
  2467                           l196:	
  2468  049A                     	goto	l2011
  2469  049A  2E8F               	
  2470                           l194:	
  2471  049B                     	goto	l2011
  2472  049B  2E8F               	
  2473                           l192:	
  2474  049C                     	goto	l2011
  2475  049C  2E8F               	
  2476                           l190:	
  2477  049D                     	goto	l2011
  2478  049D  2E8F               	
  2479                           l188:	
  2480  049E                     	goto	l2011
  2481  049E  2E8F               	
  2482                           l186:	
  2483  049F                     	goto	l2011
  2484  049F  2E8F               	
  2485                           l184:	
  2486  04A0                     	goto	l2011
  2487  04A0  2E8F               	
  2488                           l182:	
  2489  04A1                     	goto	l2011
  2490  04A1  2E8F               	
  2491                           l180:	
  2492  04A2                     	goto	l2011
  2493  04A2  2E8F               	
  2494                           l178:	
  2495  04A3                     	line	120
  2496                           ;main.c: 120:                     break;
  2497                           	goto	l2011
  2498  04A3  2E8F               	line	121
  2499                           ;main.c: 121:             case 100:
  2500                           	
  2501                           l210:	
  2502  04A4                     	line	122
  2503                           ;main.c: 122:                     atuador.A = 1;
  2504                           	bsf	(main@atuador),0
  2505  04A4  1451               	line	123
  2506                           	
  2507                           l1939:	
  2508  04A5                     ;main.c: 123:                     estado = 101;
  2509                           	movlw	065h
  2510  04A5  3065               	movwf	(main@estado)
  2511  04A6  00D4               	movlw	0
  2512  04A7  3000               	movwf	((main@estado))+1
  2513  04A8  00D5               	line	124
  2514                           ;main.c: 124:                     break;
  2515                           	goto	l2011
  2516  04A9  2E8F               	line	125
  2517                           ;main.c: 125:             case 101:
  2518                           	
  2519                           l211:	
  2520  04AA                     	line	126
  2521                           ;main.c: 126:                     if( sensor.A1 == 1)
  2522                           	btfss	(main@sensor),1
  2523  04AA  1CD2               	goto	u1071
  2524  04AB  2CAD               	goto	u1070
  2525  04AC  2CAE               u1071:
  2526  04AD                     	goto	l2011
  2527  04AD  2E8F               u1070:
  2528  04AE                     	line	127
  2529                           	
  2530                           l1941:	
  2531  04AE                     ;main.c: 127:                         estado = 10;
  2532                           	movlw	0Ah
  2533  04AE  300A               	movwf	(main@estado)
  2534  04AF  00D4               	movlw	0
  2535  04B0  3000               	movwf	((main@estado))+1
  2536  04B1  00D5               	goto	l2011
  2537  04B2  2E8F               	
  2538                           l212:	
  2539  04B3                     	line	128
  2540                           ;main.c: 128:                     break;
  2541                           	goto	l2011
  2542  04B3  2E8F               	line	129
  2543                           ;main.c: 129:             case 110:
  2544                           	
  2545                           l213:	
  2546  04B4                     	line	130
  2547                           ;main.c: 130:                     atuador.B = 1;
  2548                           	bsf	(main@atuador),1
  2549  04B4  14D1               	line	131
  2550                           	
  2551                           l1943:	
  2552  04B5                     ;main.c: 131:                     estado = 111;
  2553                           	movlw	06Fh
  2554  04B5  306F               	movwf	(main@estado)
  2555  04B6  00D4               	movlw	0
  2556  04B7  3000               	movwf	((main@estado))+1
  2557  04B8  00D5               	line	132
  2558                           ;main.c: 132:                     break;
  2559                           	goto	l2011
  2560  04B9  2E8F               	line	133
  2561                           ;main.c: 133:             case 111:
  2562                           	
  2563                           l214:	
  2564  04BA                     	line	134
  2565                           ;main.c: 134:                     if( sensor.B1 == 1)
  2566                           	btfss	(main@sensor),3
  2567  04BA  1DD2               	goto	u1081
  2568  04BB  2CBD               	goto	u1080
  2569  04BC  2CBE               u1081:
  2570  04BD                     	goto	l2011
  2571  04BD  2E8F               u1080:
  2572  04BE                     	line	135
  2573                           	
  2574                           l1945:	
  2575  04BE                     ;main.c: 135:                         estado = 10;
  2576                           	movlw	0Ah
  2577  04BE  300A               	movwf	(main@estado)
  2578  04BF  00D4               	movlw	0
  2579  04C0  3000               	movwf	((main@estado))+1
  2580  04C1  00D5               	goto	l2011
  2581  04C2  2E8F               	
  2582                           l215:	
  2583  04C3                     	line	136
  2584                           ;main.c: 136:                     break;
  2585                           	goto	l2011
  2586  04C3  2E8F               	line	137
  2587                           ;main.c: 137:             case 120:
  2588                           	
  2589                           l216:	
  2590  04C4                     	line	138
  2591                           ;main.c: 138:                     atuador.C = 1;
  2592                           	bsf	(main@atuador),2
  2593  04C4  1551               	line	139
  2594                           	
  2595                           l1947:	
  2596  04C5                     ;main.c: 139:                     estado = 121;
  2597                           	movlw	079h
  2598  04C5  3079               	movwf	(main@estado)
  2599  04C6  00D4               	movlw	0
  2600  04C7  3000               	movwf	((main@estado))+1
  2601  04C8  00D5               	line	140
  2602                           ;main.c: 140:                     break;
  2603                           	goto	l2011
  2604  04C9  2E8F               	line	141
  2605                           ;main.c: 141:             case 121:
  2606                           	
  2607                           l217:	
  2608  04CA                     	line	142
  2609                           ;main.c: 142:                     if( sensor.C1 == 1)
  2610                           	btfss	(main@sensor),5
  2611  04CA  1ED2               	goto	u1091
  2612  04CB  2CCD               	goto	u1090
  2613  04CC  2CCE               u1091:
  2614  04CD                     	goto	l2011
  2615  04CD  2E8F               u1090:
  2616  04CE                     	line	143
  2617                           	
  2618                           l1949:	
  2619  04CE                     ;main.c: 143:                         estado = 10;
  2620                           	movlw	0Ah
  2621  04CE  300A               	movwf	(main@estado)
  2622  04CF  00D4               	movlw	0
  2623  04D0  3000               	movwf	((main@estado))+1
  2624  04D1  00D5               	goto	l2011
  2625  04D2  2E8F               	
  2626                           l218:	
  2627  04D3                     	line	144
  2628                           ;main.c: 144:                     break;
  2629                           	goto	l2011
  2630  04D3  2E8F               	line	145
  2631                           ;main.c: 145:             case 130:
  2632                           	
  2633                           l219:	
  2634  04D4                     	line	146
  2635                           ;main.c: 146:                     atuador.D = 1;
  2636                           	bsf	(main@atuador),3
  2637  04D4  15D1               	line	147
  2638                           	
  2639                           l1951:	
  2640  04D5                     ;main.c: 147:                     estado = 131;
  2641                           	movlw	083h
  2642  04D5  3083               	movwf	(main@estado)
  2643  04D6  00D4               	movlw	0
  2644  04D7  3000               	movwf	((main@estado))+1
  2645  04D8  00D5               	line	148
  2646                           ;main.c: 148:                     break;
  2647                           	goto	l2011
  2648  04D9  2E8F               	line	149
  2649                           ;main.c: 149:             case 131:
  2650                           	
  2651                           l220:	
  2652  04DA                     	line	150
  2653                           ;main.c: 150:                     if( sensor.D1 == 1)
  2654                           	btfss	(main@sensor),7
  2655  04DA  1FD2               	goto	u1101
  2656  04DB  2CDD               	goto	u1100
  2657  04DC  2CDE               u1101:
  2658  04DD                     	goto	l2011
  2659  04DD  2E8F               u1100:
  2660  04DE                     	line	151
  2661                           	
  2662                           l1953:	
  2663  04DE                     ;main.c: 151:                         estado = 10;
  2664                           	movlw	0Ah
  2665  04DE  300A               	movwf	(main@estado)
  2666  04DF  00D4               	movlw	0
  2667  04E0  3000               	movwf	((main@estado))+1
  2668  04E1  00D5               	goto	l2011
  2669  04E2  2E8F               	
  2670                           l221:	
  2671  04E3                     	line	152
  2672                           ;main.c: 152:                     break;
  2673                           	goto	l2011
  2674  04E3  2E8F               	line	153
  2675                           ;main.c: 153:             case 140:
  2676                           	
  2677                           l222:	
  2678  04E4                     	line	154
  2679                           	
  2680                           l1955:	
  2681  04E4                     ;main.c: 154:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2682                           	opt asmopt_push
  2683                           opt asmopt_off
  2684                           movlw  6
  2685  04E4  3006               	bcf	status, 5	;RP0=0, select bank0
  2686  04E5  1283               	bcf	status, 6	;RP1=0, select bank0
  2687  04E6  1303               movwf	((??_main+0)+0+2),f
  2688  04E7  00CC               movlw	19
  2689  04E8  3013               movwf	((??_main+0)+0+1),f
  2690  04E9  00CB               	movlw	173
  2691  04EA  30AD               movwf	((??_main+0)+0),f
  2692  04EB  00CA               	u1217:
  2693  04EC                     decfsz	((??_main+0)+0),f
  2694  04EC  0BCA               	goto	u1217
  2695  04ED  2CEC               	decfsz	((??_main+0)+0+1),f
  2696  04EE  0BCB               	goto	u1217
  2697  04EF  2CEC               	decfsz	((??_main+0)+0+2),f
  2698  04F0  0BCC               	goto	u1217
  2699  04F1  2CEC               opt asmopt_pop
  2700                           
  2701                           	line	155
  2702                           ;main.c: 155:                     estado = 141;
  2703                           	movlw	08Dh
  2704  04F2  308D               	bcf	status, 5	;RP0=0, select bank0
  2705  04F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2706  04F4  1303               	movwf	(main@estado)
  2707  04F5  00D4               	movlw	0
  2708  04F6  3000               	movwf	((main@estado))+1
  2709  04F7  00D5               	line	156
  2710                           ;main.c: 156:                     break;
  2711                           	goto	l2011
  2712  04F8  2E8F               	line	157
  2713                           ;main.c: 157:             case 141:
  2714                           	
  2715                           l223:	
  2716  04F9                     	line	158
  2717                           	
  2718                           l1957:	
  2719  04F9                     ;main.c: 158:                     estado = 10;
  2720                           	movlw	0Ah
  2721  04F9  300A               	movwf	(main@estado)
  2722  04FA  00D4               	movlw	0
  2723  04FB  3000               	movwf	((main@estado))+1
  2724  04FC  00D5               	line	159
  2725                           ;main.c: 159:                     break;
  2726                           	goto	l2011
  2727  04FD  2E8F               	line	160
  2728                           ;main.c: 160:             case 150:
  2729                           	
  2730                           l224:	
  2731  04FE                     	line	161
  2732                           	
  2733                           l1959:	
  2734  04FE                     ;main.c: 161:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2735                           	opt asmopt_push
  2736                           opt asmopt_off
  2737                           movlw  11
  2738  04FE  300B               	bcf	status, 5	;RP0=0, select bank0
  2739  04FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2740  0500  1303               movwf	((??_main+0)+0+2),f
  2741  0501  00CC               movlw	38
  2742  0502  3026               movwf	((??_main+0)+0+1),f
  2743  0503  00CB               	movlw	93
  2744  0504  305D               movwf	((??_main+0)+0),f
  2745  0505  00CA               	u1227:
  2746  0506                     decfsz	((??_main+0)+0),f
  2747  0506  0BCA               	goto	u1227
  2748  0507  2D06               	decfsz	((??_main+0)+0+1),f
  2749  0508  0BCB               	goto	u1227
  2750  0509  2D06               	decfsz	((??_main+0)+0+2),f
  2751  050A  0BCC               	goto	u1227
  2752  050B  2D06               opt asmopt_pop
  2753                           
  2754                           	line	162
  2755                           ;main.c: 162:                     estado = 151;
  2756                           	movlw	097h
  2757  050C  3097               	bcf	status, 5	;RP0=0, select bank0
  2758  050D  1283               	bcf	status, 6	;RP1=0, select bank0
  2759  050E  1303               	movwf	(main@estado)
  2760  050F  00D4               	movlw	0
  2761  0510  3000               	movwf	((main@estado))+1
  2762  0511  00D5               	line	163
  2763                           ;main.c: 163:                     break;
  2764                           	goto	l2011
  2765  0512  2E8F               	line	164
  2766                           ;main.c: 164:             case 151:
  2767                           	
  2768                           l225:	
  2769  0513                     	line	165
  2770                           	
  2771                           l1961:	
  2772  0513                     ;main.c: 165:                     estado = 10;
  2773                           	movlw	0Ah
  2774  0513  300A               	movwf	(main@estado)
  2775  0514  00D4               	movlw	0
  2776  0515  3000               	movwf	((main@estado))+1
  2777  0516  00D5               	line	166
  2778                           ;main.c: 166:                     break;
  2779                           	goto	l2011
  2780  0517  2E8F               	line	167
  2781                           ;main.c: 167:             case 160:
  2782                           	
  2783                           l226:	
  2784  0518                     	line	168
  2785                           	
  2786                           l1963:	
  2787  0518                     ;main.c: 168:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  2788                           	opt asmopt_push
  2789                           opt asmopt_off
  2790                           movlw  16
  2791  0518  3010               	bcf	status, 5	;RP0=0, select bank0
  2792  0519  1283               	bcf	status, 6	;RP1=0, select bank0
  2793  051A  1303               movwf	((??_main+0)+0+2),f
  2794  051B  00CC               movlw	57
  2795  051C  3039               movwf	((??_main+0)+0+1),f
  2796  051D  00CB               	movlw	13
  2797  051E  300D               movwf	((??_main+0)+0),f
  2798  051F  00CA               	u1237:
  2799  0520                     decfsz	((??_main+0)+0),f
  2800  0520  0BCA               	goto	u1237
  2801  0521  2D20               	decfsz	((??_main+0)+0+1),f
  2802  0522  0BCB               	goto	u1237
  2803  0523  2D20               	decfsz	((??_main+0)+0+2),f
  2804  0524  0BCC               	goto	u1237
  2805  0525  2D20               opt asmopt_pop
  2806                           
  2807                           	line	169
  2808                           ;main.c: 169:                     estado = 161;
  2809                           	movlw	0A1h
  2810  0526  30A1               	bcf	status, 5	;RP0=0, select bank0
  2811  0527  1283               	bcf	status, 6	;RP1=0, select bank0
  2812  0528  1303               	movwf	(main@estado)
  2813  0529  00D4               	movlw	0
  2814  052A  3000               	movwf	((main@estado))+1
  2815  052B  00D5               	line	170
  2816                           ;main.c: 170:                     break;
  2817                           	goto	l2011
  2818  052C  2E8F               	line	171
  2819                           ;main.c: 171:             case 161:
  2820                           	
  2821                           l227:	
  2822  052D                     	line	172
  2823                           	
  2824                           l1965:	
  2825  052D                     ;main.c: 172:                     estado = 10;
  2826                           	movlw	0Ah
  2827  052D  300A               	movwf	(main@estado)
  2828  052E  00D4               	movlw	0
  2829  052F  3000               	movwf	((main@estado))+1
  2830  0530  00D5               	line	173
  2831                           ;main.c: 173:                     break;
  2832                           	goto	l2011
  2833  0531  2E8F               	line	174
  2834                           ;main.c: 174:             case 170:
  2835                           	
  2836                           l228:	
  2837  0532                     	line	175
  2838                           	
  2839                           l1967:	
  2840  0532                     ;main.c: 175:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  2841                           	opt asmopt_push
  2842                           opt asmopt_off
  2843                           movlw  21
  2844  0532  3015               	bcf	status, 5	;RP0=0, select bank0
  2845  0533  1283               	bcf	status, 6	;RP1=0, select bank0
  2846  0534  1303               movwf	((??_main+0)+0+2),f
  2847  0535  00CC               movlw	75
  2848  0536  304B               movwf	((??_main+0)+0+1),f
  2849  0537  00CB               	movlw	189
  2850  0538  30BD               movwf	((??_main+0)+0),f
  2851  0539  00CA               	u1247:
  2852  053A                     decfsz	((??_main+0)+0),f
  2853  053A  0BCA               	goto	u1247
  2854  053B  2D3A               	decfsz	((??_main+0)+0+1),f
  2855  053C  0BCB               	goto	u1247
  2856  053D  2D3A               	decfsz	((??_main+0)+0+2),f
  2857  053E  0BCC               	goto	u1247
  2858  053F  2D3A               	nop2
  2859  0540  2D41               opt asmopt_pop
  2860                           
  2861                           	line	176
  2862                           ;main.c: 176:                     estado = 171;
  2863                           	movlw	0ABh
  2864  0541  30AB               	bcf	status, 5	;RP0=0, select bank0
  2865  0542  1283               	bcf	status, 6	;RP1=0, select bank0
  2866  0543  1303               	movwf	(main@estado)
  2867  0544  00D4               	movlw	0
  2868  0545  3000               	movwf	((main@estado))+1
  2869  0546  00D5               	line	177
  2870                           ;main.c: 177:                     break;
  2871                           	goto	l2011
  2872  0547  2E8F               	line	178
  2873                           ;main.c: 178:             case 171:
  2874                           	
  2875                           l229:	
  2876  0548                     	line	179
  2877                           	
  2878                           l1969:	
  2879  0548                     ;main.c: 179:                     estado = 10;
  2880                           	movlw	0Ah
  2881  0548  300A               	movwf	(main@estado)
  2882  0549  00D4               	movlw	0
  2883  054A  3000               	movwf	((main@estado))+1
  2884  054B  00D5               	line	180
  2885                           ;main.c: 180:                     break;
  2886                           	goto	l2011
  2887  054C  2E8F               	line	181
  2888                           ;main.c: 181:             case 180:
  2889                           	
  2890                           l230:	
  2891  054D                     	line	182
  2892                           	
  2893                           l1971:	
  2894  054D                     ;main.c: 182:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
  2895                           	opt asmopt_push
  2896                           opt asmopt_off
  2897                           movlw  26
  2898  054D  301A               	bcf	status, 5	;RP0=0, select bank0
  2899  054E  1283               	bcf	status, 6	;RP1=0, select bank0
  2900  054F  1303               movwf	((??_main+0)+0+2),f
  2901  0550  00CC               movlw	94
  2902  0551  305E               movwf	((??_main+0)+0+1),f
  2903  0552  00CB               	movlw	109
  2904  0553  306D               movwf	((??_main+0)+0),f
  2905  0554  00CA               	u1257:
  2906  0555                     decfsz	((??_main+0)+0),f
  2907  0555  0BCA               	goto	u1257
  2908  0556  2D55               	decfsz	((??_main+0)+0+1),f
  2909  0557  0BCB               	goto	u1257
  2910  0558  2D55               	decfsz	((??_main+0)+0+2),f
  2911  0559  0BCC               	goto	u1257
  2912  055A  2D55               	nop2
  2913  055B  2D5C               opt asmopt_pop
  2914                           
  2915                           	line	183
  2916                           ;main.c: 183:                     estado = 181;
  2917                           	movlw	0B5h
  2918  055C  30B5               	bcf	status, 5	;RP0=0, select bank0
  2919  055D  1283               	bcf	status, 6	;RP1=0, select bank0
  2920  055E  1303               	movwf	(main@estado)
  2921  055F  00D4               	movlw	0
  2922  0560  3000               	movwf	((main@estado))+1
  2923  0561  00D5               	line	184
  2924                           ;main.c: 184:                     break;
  2925                           	goto	l2011
  2926  0562  2E8F               	line	185
  2927                           ;main.c: 185:             case 181:
  2928                           	
  2929                           l231:	
  2930  0563                     	line	186
  2931                           	
  2932                           l1973:	
  2933  0563                     ;main.c: 186:                     estado = 10;
  2934                           	movlw	0Ah
  2935  0563  300A               	movwf	(main@estado)
  2936  0564  00D4               	movlw	0
  2937  0565  3000               	movwf	((main@estado))+1
  2938  0566  00D5               	line	187
  2939                           ;main.c: 187:                     break;
  2940                           	goto	l2011
  2941  0567  2E8F               	line	188
  2942                           ;main.c: 188:             case 190:
  2943                           	
  2944                           l232:	
  2945  0568                     	line	189
  2946                           	
  2947                           l1975:	
  2948  0568                     ;main.c: 189:                     _delay((unsigned long)((6000)*(4000000/4000.0)));
  2949                           	opt asmopt_push
  2950                           opt asmopt_off
  2951                           movlw  31
  2952  0568  301F               	bcf	status, 5	;RP0=0, select bank0
  2953  0569  1283               	bcf	status, 6	;RP1=0, select bank0
  2954  056A  1303               movwf	((??_main+0)+0+2),f
  2955  056B  00CC               movlw	113
  2956  056C  3071               movwf	((??_main+0)+0+1),f
  2957  056D  00CB               	movlw	29
  2958  056E  301D               movwf	((??_main+0)+0),f
  2959  056F  00CA               	u1267:
  2960  0570                     decfsz	((??_main+0)+0),f
  2961  0570  0BCA               	goto	u1267
  2962  0571  2D70               	decfsz	((??_main+0)+0+1),f
  2963  0572  0BCB               	goto	u1267
  2964  0573  2D70               	decfsz	((??_main+0)+0+2),f
  2965  0574  0BCC               	goto	u1267
  2966  0575  2D70               	nop2
  2967  0576  2D77               opt asmopt_pop
  2968                           
  2969                           	line	190
  2970                           ;main.c: 190:                     estado = 191;
  2971                           	movlw	0BFh
  2972  0577  30BF               	bcf	status, 5	;RP0=0, select bank0
  2973  0578  1283               	bcf	status, 6	;RP1=0, select bank0
  2974  0579  1303               	movwf	(main@estado)
  2975  057A  00D4               	movlw	0
  2976  057B  3000               	movwf	((main@estado))+1
  2977  057C  00D5               	line	191
  2978                           ;main.c: 191:                     break;
  2979                           	goto	l2011
  2980  057D  2E8F               	line	192
  2981                           ;main.c: 192:             case 191:
  2982                           	
  2983                           l233:	
  2984  057E                     	line	193
  2985                           	
  2986                           l1977:	
  2987  057E                     ;main.c: 193:                     estado = 10;
  2988                           	movlw	0Ah
  2989  057E  300A               	movwf	(main@estado)
  2990  057F  00D4               	movlw	0
  2991  0580  3000               	movwf	((main@estado))+1
  2992  0581  00D5               	line	194
  2993                           ;main.c: 194:                     break;
  2994                           	goto	l2011
  2995  0582  2E8F               	line	195
  2996                           ;main.c: 195:             case 200:
  2997                           	
  2998                           l234:	
  2999  0583                     	line	196
  3000                           	
  3001                           l1979:	
  3002  0583                     ;main.c: 196:                     _delay((unsigned long)((7000)*(4000000/4000.0)));
  3003                           	opt asmopt_push
  3004                           opt asmopt_off
  3005                           movlw  36
  3006  0583  3024               	bcf	status, 5	;RP0=0, select bank0
  3007  0584  1283               	bcf	status, 6	;RP1=0, select bank0
  3008  0585  1303               movwf	((??_main+0)+0+2),f
  3009  0586  00CC               movlw	131
  3010  0587  3083               movwf	((??_main+0)+0+1),f
  3011  0588  00CB               	movlw	206
  3012  0589  30CE               movwf	((??_main+0)+0),f
  3013  058A  00CA               	u1277:
  3014  058B                     decfsz	((??_main+0)+0),f
  3015  058B  0BCA               	goto	u1277
  3016  058C  2D8B               	decfsz	((??_main+0)+0+1),f
  3017  058D  0BCB               	goto	u1277
  3018  058E  2D8B               	decfsz	((??_main+0)+0+2),f
  3019  058F  0BCC               	goto	u1277
  3020  0590  2D8B               	nop
  3021  0591  0000               opt asmopt_pop
  3022                           
  3023                           	line	197
  3024                           ;main.c: 197:                     estado = 201;
  3025                           	movlw	0C9h
  3026  0592  30C9               	bcf	status, 5	;RP0=0, select bank0
  3027  0593  1283               	bcf	status, 6	;RP1=0, select bank0
  3028  0594  1303               	movwf	(main@estado)
  3029  0595  00D4               	movlw	0
  3030  0596  3000               	movwf	((main@estado))+1
  3031  0597  00D5               	line	198
  3032                           ;main.c: 198:                     break;
  3033                           	goto	l2011
  3034  0598  2E8F               	line	199
  3035                           ;main.c: 199:             case 201:
  3036                           	
  3037                           l235:	
  3038  0599                     	line	200
  3039                           	
  3040                           l1981:	
  3041  0599                     ;main.c: 200:                     estado = 10;
  3042                           	movlw	0Ah
  3043  0599  300A               	movwf	(main@estado)
  3044  059A  00D4               	movlw	0
  3045  059B  3000               	movwf	((main@estado))+1
  3046  059C  00D5               	line	201
  3047                           ;main.c: 201:                     break;
  3048                           	goto	l2011
  3049  059D  2E8F               	line	202
  3050                           ;main.c: 202:             case 210:
  3051                           	
  3052                           l236:	
  3053  059E                     	line	203
  3054                           	
  3055                           l1983:	
  3056  059E                     ;main.c: 203:                     _delay((unsigned long)((8000)*(4000000/4000.0)));
  3057                           	opt asmopt_push
  3058                           opt asmopt_off
  3059                           movlw  41
  3060  059E  3029               	bcf	status, 5	;RP0=0, select bank0
  3061  059F  1283               	bcf	status, 6	;RP1=0, select bank0
  3062  05A0  1303               movwf	((??_main+0)+0+2),f
  3063  05A1  00CC               movlw	150
  3064  05A2  3096               movwf	((??_main+0)+0+1),f
  3065  05A3  00CB               	movlw	126
  3066  05A4  307E               movwf	((??_main+0)+0),f
  3067  05A5  00CA               	u1287:
  3068  05A6                     decfsz	((??_main+0)+0),f
  3069  05A6  0BCA               	goto	u1287
  3070  05A7  2DA6               	decfsz	((??_main+0)+0+1),f
  3071  05A8  0BCB               	goto	u1287
  3072  05A9  2DA6               	decfsz	((??_main+0)+0+2),f
  3073  05AA  0BCC               	goto	u1287
  3074  05AB  2DA6               	nop
  3075  05AC  0000               opt asmopt_pop
  3076                           
  3077                           	line	204
  3078                           ;main.c: 204:                     estado = 211;
  3079                           	movlw	0D3h
  3080  05AD  30D3               	bcf	status, 5	;RP0=0, select bank0
  3081  05AE  1283               	bcf	status, 6	;RP1=0, select bank0
  3082  05AF  1303               	movwf	(main@estado)
  3083  05B0  00D4               	movlw	0
  3084  05B1  3000               	movwf	((main@estado))+1
  3085  05B2  00D5               	line	205
  3086                           ;main.c: 205:                     break;
  3087                           	goto	l2011
  3088  05B3  2E8F               	line	206
  3089                           ;main.c: 206:             case 211:
  3090                           	
  3091                           l237:	
  3092  05B4                     	line	207
  3093                           	
  3094                           l1985:	
  3095  05B4                     ;main.c: 207:                     estado = 10;
  3096                           	movlw	0Ah
  3097  05B4  300A               	movwf	(main@estado)
  3098  05B5  00D4               	movlw	0
  3099  05B6  3000               	movwf	((main@estado))+1
  3100  05B7  00D5               	line	208
  3101                           ;main.c: 208:                     break;
  3102                           	goto	l2011
  3103  05B8  2E8F               	line	209
  3104                           ;main.c: 209:             case 220:
  3105                           	
  3106                           l238:	
  3107  05B9                     	line	210
  3108                           	
  3109                           l1987:	
  3110  05B9                     ;main.c: 210:                     _delay((unsigned long)((9000)*(4000000/4000.0)));
  3111                           	opt asmopt_push
  3112                           opt asmopt_off
  3113                           movlw  46
  3114  05B9  302E               	bcf	status, 5	;RP0=0, select bank0
  3115  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  3116  05BB  1303               movwf	((??_main+0)+0+2),f
  3117  05BC  00CC               movlw	169
  3118  05BD  30A9               movwf	((??_main+0)+0+1),f
  3119  05BE  00CB               	movlw	46
  3120  05BF  302E               movwf	((??_main+0)+0),f
  3121  05C0  00CA               	u1297:
  3122  05C1                     decfsz	((??_main+0)+0),f
  3123  05C1  0BCA               	goto	u1297
  3124  05C2  2DC1               	decfsz	((??_main+0)+0+1),f
  3125  05C3  0BCB               	goto	u1297
  3126  05C4  2DC1               	decfsz	((??_main+0)+0+2),f
  3127  05C5  0BCC               	goto	u1297
  3128  05C6  2DC1               	nop
  3129  05C7  0000               opt asmopt_pop
  3130                           
  3131                           	line	211
  3132                           ;main.c: 211:                     estado = 221;
  3133                           	movlw	0DDh
  3134  05C8  30DD               	bcf	status, 5	;RP0=0, select bank0
  3135  05C9  1283               	bcf	status, 6	;RP1=0, select bank0
  3136  05CA  1303               	movwf	(main@estado)
  3137  05CB  00D4               	movlw	0
  3138  05CC  3000               	movwf	((main@estado))+1
  3139  05CD  00D5               	line	212
  3140                           ;main.c: 212:                     break;
  3141                           	goto	l2011
  3142  05CE  2E8F               	line	213
  3143                           ;main.c: 213:             case 221:
  3144                           	
  3145                           l239:	
  3146  05CF                     	line	214
  3147                           	
  3148                           l1989:	
  3149  05CF                     ;main.c: 214:                     estado = 10;
  3150                           	movlw	0Ah
  3151  05CF  300A               	movwf	(main@estado)
  3152  05D0  00D4               	movlw	0
  3153  05D1  3000               	movwf	((main@estado))+1
  3154  05D2  00D5               	line	215
  3155                           ;main.c: 215:                     break;
  3156                           	goto	l2011
  3157  05D3  2E8F               	line	217
  3158                           ;main.c: 217:             case 230:
  3159                           	
  3160                           l240:	
  3161  05D4                     	line	218
  3162                           ;main.c: 218:                     atuador.A = 0;
  3163                           	bcf	(main@atuador),0
  3164  05D4  1051               	line	219
  3165                           	
  3166                           l1991:	
  3167  05D5                     ;main.c: 219:                     estado = 231;
  3168                           	movlw	0E7h
  3169  05D5  30E7               	movwf	(main@estado)
  3170  05D6  00D4               	movlw	0
  3171  05D7  3000               	movwf	((main@estado))+1
  3172  05D8  00D5               	line	220
  3173                           ;main.c: 220:                     break;
  3174                           	goto	l2011
  3175  05D9  2E8F               	line	221
  3176                           ;main.c: 221:             case 231:
  3177                           	
  3178                           l241:	
  3179  05DA                     	line	222
  3180                           ;main.c: 222:                     if( sensor.A0 == 1)
  3181                           	btfss	(main@sensor),0
  3182  05DA  1C52               	goto	u1111
  3183  05DB  2DDD               	goto	u1110
  3184  05DC  2DDE               u1111:
  3185  05DD                     	goto	l2011
  3186  05DD  2E8F               u1110:
  3187  05DE                     	line	223
  3188                           	
  3189                           l1993:	
  3190  05DE                     ;main.c: 223:                         estado = 10;
  3191                           	movlw	0Ah
  3192  05DE  300A               	movwf	(main@estado)
  3193  05DF  00D4               	movlw	0
  3194  05E0  3000               	movwf	((main@estado))+1
  3195  05E1  00D5               	goto	l2011
  3196  05E2  2E8F               	
  3197                           l242:	
  3198  05E3                     	line	224
  3199                           ;main.c: 224:                     break;
  3200                           	goto	l2011
  3201  05E3  2E8F               	line	225
  3202                           ;main.c: 225:             case 240:
  3203                           	
  3204                           l243:	
  3205  05E4                     	line	226
  3206                           ;main.c: 226:                     atuador.B = 0;
  3207                           	bcf	(main@atuador),1
  3208  05E4  10D1               	line	227
  3209                           	
  3210                           l1995:	
  3211  05E5                     ;main.c: 227:                     estado = 241;
  3212                           	movlw	0F1h
  3213  05E5  30F1               	movwf	(main@estado)
  3214  05E6  00D4               	movlw	0
  3215  05E7  3000               	movwf	((main@estado))+1
  3216  05E8  00D5               	line	228
  3217                           ;main.c: 228:                     break;
  3218                           	goto	l2011
  3219  05E9  2E8F               	line	229
  3220                           ;main.c: 229:             case 241:
  3221                           	
  3222                           l244:	
  3223  05EA                     	line	230
  3224                           ;main.c: 230:                     if( sensor.B0 == 1)
  3225                           	btfss	(main@sensor),2
  3226  05EA  1D52               	goto	u1121
  3227  05EB  2DED               	goto	u1120
  3228  05EC  2DEE               u1121:
  3229  05ED                     	goto	l2011
  3230  05ED  2E8F               u1120:
  3231  05EE                     	line	231
  3232                           	
  3233                           l1997:	
  3234  05EE                     ;main.c: 231:                         estado = 10;
  3235                           	movlw	0Ah
  3236  05EE  300A               	movwf	(main@estado)
  3237  05EF  00D4               	movlw	0
  3238  05F0  3000               	movwf	((main@estado))+1
  3239  05F1  00D5               	goto	l2011
  3240  05F2  2E8F               	
  3241                           l245:	
  3242  05F3                     	line	232
  3243                           ;main.c: 232:                     break;
  3244                           	goto	l2011
  3245  05F3  2E8F               	line	233
  3246                           ;main.c: 233:             case 250:
  3247                           	
  3248                           l246:	
  3249  05F4                     	line	234
  3250                           ;main.c: 234:                     atuador.C = 0;
  3251                           	bcf	(main@atuador),2
  3252  05F4  1151               	line	235
  3253                           	
  3254                           l1999:	
  3255  05F5                     ;main.c: 235:                     estado = 251;
  3256                           	movlw	0FBh
  3257  05F5  30FB               	movwf	(main@estado)
  3258  05F6  00D4               	movlw	0
  3259  05F7  3000               	movwf	((main@estado))+1
  3260  05F8  00D5               	line	236
  3261                           ;main.c: 236:                     break;
  3262                           	goto	l2011
  3263  05F9  2E8F               	line	237
  3264                           ;main.c: 237:             case 251:
  3265                           	
  3266                           l247:	
  3267  05FA                     	line	238
  3268                           ;main.c: 238:                     if( sensor.C0 == 1)
  3269                           	btfss	(main@sensor),4
  3270  05FA  1E52               	goto	u1131
  3271  05FB  2DFD               	goto	u1130
  3272  05FC  2DFE               u1131:
  3273  05FD                     	goto	l2011
  3274  05FD  2E8F               u1130:
  3275  05FE                     	line	239
  3276                           	
  3277                           l2001:	
  3278  05FE                     ;main.c: 239:                         estado = 10;
  3279                           	movlw	0Ah
  3280  05FE  300A               	movwf	(main@estado)
  3281  05FF  00D4               	movlw	0
  3282  0600  3000               	movwf	((main@estado))+1
  3283  0601  00D5               	goto	l2011
  3284  0602  2E8F               	
  3285                           l248:	
  3286  0603                     	line	240
  3287                           ;main.c: 240:                     break;
  3288                           	goto	l2011
  3289  0603  2E8F               	line	241
  3290                           ;main.c: 241:             case 260:
  3291                           	
  3292                           l249:	
  3293  0604                     	line	242
  3294                           ;main.c: 242:                     atuador.D = 0;
  3295                           	bcf	(main@atuador),3
  3296  0604  11D1               	line	243
  3297                           	
  3298                           l2003:	
  3299  0605                     ;main.c: 243:                     estado = 261;
  3300                           	movlw	05h
  3301  0605  3005               	movwf	(main@estado)
  3302  0606  00D4               	movlw	01h
  3303  0607  3001               	movwf	((main@estado))+1
  3304  0608  00D5               	line	244
  3305                           ;main.c: 244:                     break;
  3306                           	goto	l2011
  3307  0609  2E8F               	line	245
  3308                           ;main.c: 245:             case 261:
  3309                           	
  3310                           l250:	
  3311  060A                     	line	246
  3312                           ;main.c: 246:                     if( sensor.D0 == 1)
  3313                           	btfss	(main@sensor),6
  3314  060A  1F52               	goto	u1141
  3315  060B  2E0D               	goto	u1140
  3316  060C  2E0E               u1141:
  3317  060D                     	goto	l2011
  3318  060D  2E8F               u1140:
  3319  060E                     	line	247
  3320                           	
  3321                           l2005:	
  3322  060E                     ;main.c: 247:                         estado = 10;
  3323                           	movlw	0Ah
  3324  060E  300A               	movwf	(main@estado)
  3325  060F  00D4               	movlw	0
  3326  0610  3000               	movwf	((main@estado))+1
  3327  0611  00D5               	goto	l2011
  3328  0612  2E8F               	
  3329                           l251:	
  3330  0613                     	line	248
  3331                           ;main.c: 248:                     break;
  3332                           	goto	l2011
  3333  0613  2E8F               	line	250
  3334                           	
  3335                           l2007:	
  3336  0614                     ;main.c: 250:         }
  3337                           	goto	l2011
  3338  0614  2E8F               	
  3339                           l173:	
  3340  0615                     	
  3341                           l2009:	
  3342  0615                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  3343                           ; Switch size 1, requested type "space"
  3344                           ; Number of cases is 2, Range of values is 0 to 1
  3345                           ; switch strategies available:
  3346                           ; Name         Instructions Cycles
  3347                           ; simple_byte            7     4 (average)
  3348                           ; direct_byte           14     8 (fixed)
  3349                           ; jumptable            260     6 (fixed)
  3350                           ;	Chosen strategy is simple_byte
  3351                           
  3352                           	bcf	status, 5	;RP0=0, select bank0
  3353  0615  1283               	bcf	status, 6	;RP1=0, select bank0
  3354  0616  1303               	movf (main@estado+1),w
  3355  0617  0855               	opt asmopt_push
  3356                           	opt asmopt_off
  3357                           	xorlw	0^0	; case 0
  3358  0618  3A00               	skipnz
  3359  0619  1903               	goto	l2229
  3360  061A  2E1F               	xorlw	1^0	; case 1
  3361  061B  3A01               	skipnz
  3362  061C  1903               	goto	l2231
  3363  061D  2E87               	goto	l2011
  3364  061E  2E8F               	opt asmopt_pop
  3365                           	
  3366                           l2229:	
  3367  061F                     ; Switch size 1, requested type "space"
  3368                           ; Number of cases is 34, Range of values is 0 to 251
  3369                           ; switch strategies available:
  3370                           ; Name         Instructions Cycles
  3371                           ; simple_byte          103    52 (average)
  3372                           ; jumptable            260     6 (fixed)
  3373                           ;	Chosen strategy is simple_byte
  3374                           
  3375                           	movf (main@estado),w
  3376  061F  0854               	opt asmopt_push
  3377                           	opt asmopt_off
  3378                           	xorlw	0^0	; case 0
  3379  0620  3A00               	skipnz
  3380  0621  1903               	goto	l2011
  3381  0622  2E8F               	xorlw	10^0	; case 10
  3382  0623  3A0A               	skipnz
  3383  0624  1903               	goto	l1869
  3384  0625  2BCE               	xorlw	100^10	; case 100
  3385  0626  3A6E               	skipnz
  3386  0627  1903               	goto	l210
  3387  0628  2CA4               	xorlw	101^100	; case 101
  3388  0629  3A01               	skipnz
  3389  062A  1903               	goto	l211
  3390  062B  2CAA               	xorlw	110^101	; case 110
  3391  062C  3A0B               	skipnz
  3392  062D  1903               	goto	l213
  3393  062E  2CB4               	xorlw	111^110	; case 111
  3394  062F  3A01               	skipnz
  3395  0630  1903               	goto	l214
  3396  0631  2CBA               	xorlw	120^111	; case 120
  3397  0632  3A17               	skipnz
  3398  0633  1903               	goto	l216
  3399  0634  2CC4               	xorlw	121^120	; case 121
  3400  0635  3A01               	skipnz
  3401  0636  1903               	goto	l217
  3402  0637  2CCA               	xorlw	130^121	; case 130
  3403  0638  3AFB               	skipnz
  3404  0639  1903               	goto	l219
  3405  063A  2CD4               	xorlw	131^130	; case 131
  3406  063B  3A01               	skipnz
  3407  063C  1903               	goto	l220
  3408  063D  2CDA               	xorlw	140^131	; case 140
  3409  063E  3A0F               	skipnz
  3410  063F  1903               	goto	l1955
  3411  0640  2CE4               	xorlw	141^140	; case 141
  3412  0641  3A01               	skipnz
  3413  0642  1903               	goto	l1957
  3414  0643  2CF9               	xorlw	150^141	; case 150
  3415  0644  3A1B               	skipnz
  3416  0645  1903               	goto	l1959
  3417  0646  2CFE               	xorlw	151^150	; case 151
  3418  0647  3A01               	skipnz
  3419  0648  1903               	goto	l1961
  3420  0649  2D13               	xorlw	160^151	; case 160
  3421  064A  3A37               	skipnz
  3422  064B  1903               	goto	l1963
  3423  064C  2D18               	xorlw	161^160	; case 161
  3424  064D  3A01               	skipnz
  3425  064E  1903               	goto	l1965
  3426  064F  2D2D               	xorlw	170^161	; case 170
  3427  0650  3A0B               	skipnz
  3428  0651  1903               	goto	l1967
  3429  0652  2D32               	xorlw	171^170	; case 171
  3430  0653  3A01               	skipnz
  3431  0654  1903               	goto	l1969
  3432  0655  2D48               	xorlw	180^171	; case 180
  3433  0656  3A1F               	skipnz
  3434  0657  1903               	goto	l1971
  3435  0658  2D4D               	xorlw	181^180	; case 181
  3436  0659  3A01               	skipnz
  3437  065A  1903               	goto	l1973
  3438  065B  2D63               	xorlw	190^181	; case 190
  3439  065C  3A0B               	skipnz
  3440  065D  1903               	goto	l1975
  3441  065E  2D68               	xorlw	191^190	; case 191
  3442  065F  3A01               	skipnz
  3443  0660  1903               	goto	l1977
  3444  0661  2D7E               	xorlw	200^191	; case 200
  3445  0662  3A77               	skipnz
  3446  0663  1903               	goto	l1979
  3447  0664  2D83               	xorlw	201^200	; case 201
  3448  0665  3A01               	skipnz
  3449  0666  1903               	goto	l1981
  3450  0667  2D99               	xorlw	210^201	; case 210
  3451  0668  3A1B               	skipnz
  3452  0669  1903               	goto	l1983
  3453  066A  2D9E               	xorlw	211^210	; case 211
  3454  066B  3A01               	skipnz
  3455  066C  1903               	goto	l1985
  3456  066D  2DB4               	xorlw	220^211	; case 220
  3457  066E  3A0F               	skipnz
  3458  066F  1903               	goto	l1987
  3459  0670  2DB9               	xorlw	221^220	; case 221
  3460  0671  3A01               	skipnz
  3461  0672  1903               	goto	l1989
  3462  0673  2DCF               	xorlw	230^221	; case 230
  3463  0674  3A3B               	skipnz
  3464  0675  1903               	goto	l240
  3465  0676  2DD4               	xorlw	231^230	; case 231
  3466  0677  3A01               	skipnz
  3467  0678  1903               	goto	l241
  3468  0679  2DDA               	xorlw	240^231	; case 240
  3469  067A  3A17               	skipnz
  3470  067B  1903               	goto	l243
  3471  067C  2DE4               	xorlw	241^240	; case 241
  3472  067D  3A01               	skipnz
  3473  067E  1903               	goto	l244
  3474  067F  2DEA               	xorlw	250^241	; case 250
  3475  0680  3A0B               	skipnz
  3476  0681  1903               	goto	l246
  3477  0682  2DF4               	xorlw	251^250	; case 251
  3478  0683  3A01               	skipnz
  3479  0684  1903               	goto	l247
  3480  0685  2DFA               	goto	l2011
  3481  0686  2E8F               	opt asmopt_pop
  3482                           	
  3483                           l2231:	
  3484  0687                     ; Switch size 1, requested type "space"
  3485                           ; Number of cases is 2, Range of values is 4 to 5
  3486                           ; switch strategies available:
  3487                           ; Name         Instructions Cycles
  3488                           ; simple_byte            7     4 (average)
  3489                           ; direct_byte           17    11 (fixed)
  3490                           ; jumptable            263     9 (fixed)
  3491                           ;	Chosen strategy is simple_byte
  3492                           
  3493                           	movf (main@estado),w
  3494  0687  0854               	opt asmopt_push
  3495                           	opt asmopt_off
  3496                           	xorlw	4^0	; case 4
  3497  0688  3A04               	skipnz
  3498  0689  1903               	goto	l249
  3499  068A  2E04               	xorlw	5^4	; case 5
  3500  068B  3A01               	skipnz
  3501  068C  1903               	goto	l250
  3502  068D  2E0A               	goto	l2011
  3503  068E  2E8F               	opt asmopt_pop
  3504                           
  3505                           	
  3506                           l175:	
  3507  068F                     	line	251
  3508                           	
  3509                           l2011:	
  3510  068F                     ;main.c: 251:         if( currentKey() && !previousKey() )
  3511                           	fcall	_currentKey
  3512  068F  120A  118A  2074  120A  118A  	xorlw	0
  3513  0694  3A00               	skipnz
  3514  0695  1903               	goto	u1151
  3515  0696  2E98               	goto	u1150
  3516  0697  2E99               u1151:
  3517  0698                     	goto	l2083
  3518  0698  2FDB               u1150:
  3519  0699                     	
  3520                           l2013:	
  3521  0699                     	fcall	_previousKey
  3522  0699  120A  118A  2079  120A  118A  	xorlw	0
  3523  069E  3A00               	skipz
  3524  069F  1D03               	goto	u1161
  3525  06A0  2EA2               	goto	u1160
  3526  06A1  2EA3               u1161:
  3527  06A2                     	goto	l2083
  3528  06A2  2FDB               u1160:
  3529  06A3                     	line	253
  3530                           	
  3531                           l2015:	
  3532  06A3                     ;main.c: 252:         {;main.c: 253:             tecla = currentKey();
  3533                           	fcall	_currentKey
  3534  06A3  120A  118A  2074  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3535  06A8  1283               	bcf	status, 6	;RP1=0, select bank0
  3536  06A9  1303               	movwf	(??_main+0)+0
  3537  06AA  00CA               	movf	(??_main+0)+0,w
  3538  06AB  084A               	movwf	(main@tecla)
  3539  06AC  00D3               	line	254
  3540                           ;main.c: 254:             switch(tecla)
  3541                           	goto	l2079
  3542  06AD  2F90               	line	256
  3543                           ;main.c: 255:             {;main.c: 256:                 case 'A':
  3544                           	
  3545                           l254:	
  3546  06AE                     	line	257
  3547                           	
  3548                           l2017:	
  3549  06AE                     ;main.c: 257:                         ++a;
  3550                           	movlw	low(01h)
  3551  06AE  3001               	movwf	(??_main+0)+0
  3552  06AF  00CA               	movf	(??_main+0)+0,w
  3553  06B0  084A               	addwf	(main@a),f
  3554  06B1  07CD               	line	258
  3555                           	
  3556                           l2019:	
  3557  06B2                     ;main.c: 258:                         if( a % 2 )
  3558                           	btfss	(main@a),(0)&7
  3559  06B2  1C4D               	goto	u1171
  3560  06B3  2EB5               	goto	u1170
  3561  06B4  2EB6               u1171:
  3562  06B5                     	goto	l2023
  3563  06B5  2EBD               u1170:
  3564  06B6                     	line	259
  3565                           	
  3566                           l2021:	
  3567  06B6                     ;main.c: 259:                             putFIFO( tecla );
  3568                           	movf	(main@tecla),w
  3569  06B6  0853               	fcall	_putFIFO
  3570  06B7  120A  118A  20A9  120A  118A  	goto	l2081
  3571  06BC  2FCA               	line	260
  3572                           ;main.c: 260:                         else
  3573                           	
  3574                           l255:	
  3575  06BD                     	line	261
  3576                           	
  3577                           l2023:	
  3578  06BD                     ;main.c: 261:                             putFIFO( tecla | 0x20 );
  3579                           	bcf	status, 5	;RP0=0, select bank0
  3580  06BD  1283               	bcf	status, 6	;RP1=0, select bank0
  3581  06BE  1303               	movf	(main@tecla),w
  3582  06BF  0853               	iorlw	020h
  3583  06C0  3820               	fcall	_putFIFO
  3584  06C1  120A  118A  20A9  120A  118A  	goto	l2081
  3585  06C6  2FCA               	
  3586                           l256:	
  3587  06C7                     	line	262
  3588                           ;main.c: 262:                         break;
  3589                           	goto	l2081
  3590  06C7  2FCA               	line	263
  3591                           ;main.c: 263:                 case 'B':
  3592                           	
  3593                           l258:	
  3594  06C8                     	line	264
  3595                           	
  3596                           l2025:	
  3597  06C8                     ;main.c: 264:                         ++b;
  3598                           	movlw	low(01h)
  3599  06C8  3001               	bcf	status, 5	;RP0=0, select bank0
  3600  06C9  1283               	bcf	status, 6	;RP1=0, select bank0
  3601  06CA  1303               	movwf	(??_main+0)+0
  3602  06CB  00CA               	movf	(??_main+0)+0,w
  3603  06CC  084A               	addwf	(main@b),f
  3604  06CD  07CE               	line	265
  3605                           	
  3606                           l2027:	
  3607  06CE                     ;main.c: 265:                         if( b % 2 )
  3608                           	btfss	(main@b),(0)&7
  3609  06CE  1C4E               	goto	u1181
  3610  06CF  2ED1               	goto	u1180
  3611  06D0  2ED2               u1181:
  3612  06D1                     	goto	l2031
  3613  06D1  2ED9               u1180:
  3614  06D2                     	line	266
  3615                           	
  3616                           l2029:	
  3617  06D2                     ;main.c: 266:                             putFIFO( tecla );
  3618                           	movf	(main@tecla),w
  3619  06D2  0853               	fcall	_putFIFO
  3620  06D3  120A  118A  20A9  120A  118A  	goto	l2081
  3621  06D8  2FCA               	line	267
  3622                           ;main.c: 267:                         else
  3623                           	
  3624                           l259:	
  3625  06D9                     	line	268
  3626                           	
  3627                           l2031:	
  3628  06D9                     ;main.c: 268:                             putFIFO( tecla | 0x20 );
  3629                           	bcf	status, 5	;RP0=0, select bank0
  3630  06D9  1283               	bcf	status, 6	;RP1=0, select bank0
  3631  06DA  1303               	movf	(main@tecla),w
  3632  06DB  0853               	iorlw	020h
  3633  06DC  3820               	fcall	_putFIFO
  3634  06DD  120A  118A  20A9  120A  118A  	goto	l2081
  3635  06E2  2FCA               	
  3636                           l260:	
  3637  06E3                     	line	269
  3638                           ;main.c: 269:                         break;
  3639                           	goto	l2081
  3640  06E3  2FCA               	line	270
  3641                           ;main.c: 270:                 case 'C':
  3642                           	
  3643                           l261:	
  3644  06E4                     	line	271
  3645                           	
  3646                           l2033:	
  3647  06E4                     ;main.c: 271:                         ++c;
  3648                           	movlw	low(01h)
  3649  06E4  3001               	bcf	status, 5	;RP0=0, select bank0
  3650  06E5  1283               	bcf	status, 6	;RP1=0, select bank0
  3651  06E6  1303               	movwf	(??_main+0)+0
  3652  06E7  00CA               	movf	(??_main+0)+0,w
  3653  06E8  084A               	addwf	(main@c),f
  3654  06E9  07CF               	line	272
  3655                           	
  3656                           l2035:	
  3657  06EA                     ;main.c: 272:                         if( c % 2 )
  3658                           	btfss	(main@c),(0)&7
  3659  06EA  1C4F               	goto	u1191
  3660  06EB  2EED               	goto	u1190
  3661  06EC  2EEE               u1191:
  3662  06ED                     	goto	l2039
  3663  06ED  2EF5               u1190:
  3664  06EE                     	line	273
  3665                           	
  3666                           l2037:	
  3667  06EE                     ;main.c: 273:                             putFIFO( tecla );
  3668                           	movf	(main@tecla),w
  3669  06EE  0853               	fcall	_putFIFO
  3670  06EF  120A  118A  20A9  120A  118A  	goto	l2081
  3671  06F4  2FCA               	line	274
  3672                           ;main.c: 274:                         else
  3673                           	
  3674                           l262:	
  3675  06F5                     	line	275
  3676                           	
  3677                           l2039:	
  3678  06F5                     ;main.c: 275:                             putFIFO( tecla | 0x20 );
  3679                           	bcf	status, 5	;RP0=0, select bank0
  3680  06F5  1283               	bcf	status, 6	;RP1=0, select bank0
  3681  06F6  1303               	movf	(main@tecla),w
  3682  06F7  0853               	iorlw	020h
  3683  06F8  3820               	fcall	_putFIFO
  3684  06F9  120A  118A  20A9  120A  118A  	goto	l2081
  3685  06FE  2FCA               	
  3686                           l263:	
  3687  06FF                     	line	276
  3688                           ;main.c: 276:                         break;
  3689                           	goto	l2081
  3690  06FF  2FCA               	line	277
  3691                           ;main.c: 277:                 case 'D':
  3692                           	
  3693                           l264:	
  3694  0700                     	line	278
  3695                           	
  3696                           l2041:	
  3697  0700                     ;main.c: 278:                         ++d;
  3698                           	movlw	low(01h)
  3699  0700  3001               	bcf	status, 5	;RP0=0, select bank0
  3700  0701  1283               	bcf	status, 6	;RP1=0, select bank0
  3701  0702  1303               	movwf	(??_main+0)+0
  3702  0703  00CA               	movf	(??_main+0)+0,w
  3703  0704  084A               	addwf	(main@d),f
  3704  0705  07D0               	line	279
  3705                           	
  3706                           l2043:	
  3707  0706                     ;main.c: 279:                         if( d % 2 )
  3708                           	btfss	(main@d),(0)&7
  3709  0706  1C50               	goto	u1201
  3710  0707  2F09               	goto	u1200
  3711  0708  2F0A               u1201:
  3712  0709                     	goto	l2047
  3713  0709  2F11               u1200:
  3714  070A                     	line	280
  3715                           	
  3716                           l2045:	
  3717  070A                     ;main.c: 280:                             putFIFO( tecla );
  3718                           	movf	(main@tecla),w
  3719  070A  0853               	fcall	_putFIFO
  3720  070B  120A  118A  20A9  120A  118A  	goto	l2081
  3721  0710  2FCA               	line	281
  3722                           ;main.c: 281:                         else
  3723                           	
  3724                           l265:	
  3725  0711                     	line	282
  3726                           	
  3727                           l2047:	
  3728  0711                     ;main.c: 282:                             putFIFO( tecla | 0x20 );
  3729                           	bcf	status, 5	;RP0=0, select bank0
  3730  0711  1283               	bcf	status, 6	;RP1=0, select bank0
  3731  0712  1303               	movf	(main@tecla),w
  3732  0713  0853               	iorlw	020h
  3733  0714  3820               	fcall	_putFIFO
  3734  0715  120A  118A  20A9  120A  118A  	goto	l2081
  3735  071A  2FCA               	
  3736                           l266:	
  3737  071B                     	line	283
  3738                           ;main.c: 283:                         break;
  3739                           	goto	l2081
  3740  071B  2FCA               	line	284
  3741                           ;main.c: 284:                 case '0':
  3742                           	
  3743                           l267:	
  3744  071C                     	line	285
  3745                           	
  3746                           l2049:	
  3747  071C                     ;main.c: 285:                         clearLCD();
  3748                           	fcall	_clearLCD
  3749  071C  120A  118A  2083  120A  118A  	line	286
  3750                           	
  3751                           l2051:	
  3752  0721                     ;main.c: 286:                         a = b = c = d = 0;
  3753                           	bcf	status, 5	;RP0=0, select bank0
  3754  0721  1283               	bcf	status, 6	;RP1=0, select bank0
  3755  0722  1303               	clrf	(main@d)
  3756  0723  01D0               	clrf	(main@c)
  3757  0724  01CF               	clrf	(main@b)
  3758  0725  01CE               	clrf	(main@a)
  3759  0726  01CD               	line	287
  3760                           	
  3761                           l2053:	
  3762  0727                     ;main.c: 287:                         atuador.ABCD = 0;
  3763                           	clrf	(main@atuador)
  3764  0727  01D1               	line	288
  3765                           	
  3766                           l2055:	
  3767  0728                     ;main.c: 288:                         resetFIFO();
  3768                           	fcall	_resetFIFO
  3769  0728  120A  118A  2092  120A  118A  	line	289
  3770                           	
  3771                           l2057:	
  3772  072D                     ;main.c: 289:                         estado = 0;
  3773                           	bcf	status, 5	;RP0=0, select bank0
  3774  072D  1283               	bcf	status, 6	;RP1=0, select bank0
  3775  072E  1303               	clrf	(main@estado)
  3776  072F  01D4               	clrf	(main@estado+1)
  3777  0730  01D5               	line	290
  3778                           ;main.c: 290:                         break;
  3779                           	goto	l2081
  3780  0731  2FCA               	line	291
  3781                           ;main.c: 291:                 case '1':
  3782                           	
  3783                           l268:	
  3784  0732                     	goto	l2059
  3785  0732  2F3A               	line	292
  3786                           ;main.c: 292:                 case '2':
  3787                           	
  3788                           l269:	
  3789  0733                     	goto	l2059
  3790  0733  2F3A               	line	293
  3791                           ;main.c: 293:                 case '3':
  3792                           	
  3793                           l270:	
  3794  0734                     	goto	l2059
  3795  0734  2F3A               	line	294
  3796                           ;main.c: 294:                 case '4':
  3797                           	
  3798                           l271:	
  3799  0735                     	goto	l2059
  3800  0735  2F3A               	line	295
  3801                           ;main.c: 295:                 case '5':
  3802                           	
  3803                           l272:	
  3804  0736                     	goto	l2059
  3805  0736  2F3A               	line	296
  3806                           ;main.c: 296:                 case '6':
  3807                           	
  3808                           l273:	
  3809  0737                     	goto	l2059
  3810  0737  2F3A               	line	297
  3811                           ;main.c: 297:                 case '7':
  3812                           	
  3813                           l274:	
  3814  0738                     	goto	l2059
  3815  0738  2F3A               	line	298
  3816                           ;main.c: 298:                 case '8':
  3817                           	
  3818                           l275:	
  3819  0739                     	goto	l2059
  3820  0739  2F3A               	line	299
  3821                           ;main.c: 299:                 case '9':
  3822                           	
  3823                           l276:	
  3824  073A                     	line	300
  3825                           	
  3826                           l2059:	
  3827  073A                     ;main.c: 300:                         putFIFO(tecla);
  3828                           	movf	(main@tecla),w
  3829  073A  0853               	fcall	_putFIFO
  3830  073B  120A  118A  20A9  120A  118A  	line	301
  3831                           ;main.c: 301:                         break;
  3832                           	goto	l2081
  3833  0740  2FCA               	line	302
  3834                           ;main.c: 302:                 case '*':
  3835                           	
  3836                           l277:	
  3837  0741                     	line	303
  3838                           ;main.c: 303:                         switch( delFIFO(1) )
  3839                           	goto	l2071
  3840  0741  2F59               	line	305
  3841                           ;main.c: 304:                         {;main.c: 305:                             case 'A
                                 ': a = 0; break;
  3842                           	
  3843                           l279:	
  3844  0742                     	
  3845                           l2061:	
  3846  0742                     	bcf	status, 5	;RP0=0, select bank0
  3847  0742  1283               	bcf	status, 6	;RP1=0, select bank0
  3848  0743  1303               	clrf	(main@a)
  3849  0744  01CD               	goto	l2073
  3850  0745  2F82               	line	306
  3851                           ;main.c: 306:                             case 'a': a = 1; break;
  3852                           	
  3853                           l281:	
  3854  0746                     	clrf	(main@a)
  3855  0746  01CD               	incf	(main@a),f
  3856  0747  0ACD               	goto	l2073
  3857  0748  2F82               	line	307
  3858                           ;main.c: 307:                             case 'B': b = 0; break;
  3859                           	
  3860                           l282:	
  3861  0749                     	
  3862                           l2063:	
  3863  0749                     	clrf	(main@b)
  3864  0749  01CE               	goto	l2073
  3865  074A  2F82               	line	308
  3866                           ;main.c: 308:                             case 'b': b = 1; break;
  3867                           	
  3868                           l283:	
  3869  074B                     	clrf	(main@b)
  3870  074B  01CE               	incf	(main@b),f
  3871  074C  0ACE               	goto	l2073
  3872  074D  2F82               	line	309
  3873                           ;main.c: 309:                             case 'C': c = 0; break;
  3874                           	
  3875                           l284:	
  3876  074E                     	
  3877                           l2065:	
  3878  074E                     	clrf	(main@c)
  3879  074E  01CF               	goto	l2073
  3880  074F  2F82               	line	310
  3881                           ;main.c: 310:                             case 'c': c = 1; break;
  3882                           	
  3883                           l285:	
  3884  0750                     	clrf	(main@c)
  3885  0750  01CF               	incf	(main@c),f
  3886  0751  0ACF               	goto	l2073
  3887  0752  2F82               	line	311
  3888                           ;main.c: 311:                             case 'D': d = 0; break;
  3889                           	
  3890                           l286:	
  3891  0753                     	
  3892                           l2067:	
  3893  0753                     	clrf	(main@d)
  3894  0753  01D0               	goto	l2073
  3895  0754  2F82               	line	312
  3896                           ;main.c: 312:                             case 'd': d = 1; break;
  3897                           	
  3898                           l287:	
  3899  0755                     	clrf	(main@d)
  3900  0755  01D0               	incf	(main@d),f
  3901  0756  0AD0               	goto	l2073
  3902  0757  2F82               	line	313
  3903                           	
  3904                           l2069:	
  3905  0758                     ;main.c: 313:                         }
  3906                           	goto	l2073
  3907  0758  2F82               	
  3908                           l278:	
  3909  0759                     	
  3910                           l2071:	
  3911  0759                     	movlw	low(01h)
  3912  0759  3001               	fcall	_delFIFO
  3913  075A  120A  118A  211F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3914  075F  1283               	bcf	status, 6	;RP1=0, select bank0
  3915  0760  1303               	movwf	(??_main+0)+0
  3916  0761  00CA               	clrf	(??_main+0)+0+1
  3917  0762  01CB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3918                           ; Switch size 1, requested type "space"
  3919                           ; Number of cases is 1, Range of values is 0 to 0
  3920                           ; switch strategies available:
  3921                           ; Name         Instructions Cycles
  3922                           ; simple_byte            4     3 (average)
  3923                           ; direct_byte           11     8 (fixed)
  3924                           ; jumptable            260     6 (fixed)
  3925                           ;	Chosen strategy is simple_byte
  3926                           
  3927                           	movf 1+(??_main+0)+0,w
  3928  0763  084B               	opt asmopt_push
  3929                           	opt asmopt_off
  3930                           	xorlw	0^0	; case 0
  3931  0764  3A00               	skipnz
  3932  0765  1903               	goto	l2233
  3933  0766  2F68               	goto	l2073
  3934  0767  2F82               	opt asmopt_pop
  3935                           	
  3936                           l2233:	
  3937  0768                     ; Switch size 1, requested type "space"
  3938                           ; Number of cases is 8, Range of values is 65 to 100
  3939                           ; switch strategies available:
  3940                           ; Name         Instructions Cycles
  3941                           ; simple_byte           25    13 (average)
  3942                           ; direct_byte          119    11 (fixed)
  3943                           ; jumptable            263     9 (fixed)
  3944                           ;	Chosen strategy is simple_byte
  3945                           
  3946                           	movf 0+(??_main+0)+0,w
  3947  0768  084A               	opt asmopt_push
  3948                           	opt asmopt_off
  3949                           	xorlw	65^0	; case 65
  3950  0769  3A41               	skipnz
  3951  076A  1903               	goto	l2061
  3952  076B  2F42               	xorlw	66^65	; case 66
  3953  076C  3A03               	skipnz
  3954  076D  1903               	goto	l2063
  3955  076E  2F49               	xorlw	67^66	; case 67
  3956  076F  3A01               	skipnz
  3957  0770  1903               	goto	l2065
  3958  0771  2F4E               	xorlw	68^67	; case 68
  3959  0772  3A07               	skipnz
  3960  0773  1903               	goto	l2067
  3961  0774  2F53               	xorlw	97^68	; case 97
  3962  0775  3A25               	skipnz
  3963  0776  1903               	goto	l281
  3964  0777  2F46               	xorlw	98^97	; case 98
  3965  0778  3A03               	skipnz
  3966  0779  1903               	goto	l283
  3967  077A  2F4B               	xorlw	99^98	; case 99
  3968  077B  3A01               	skipnz
  3969  077C  1903               	goto	l285
  3970  077D  2F50               	xorlw	100^99	; case 100
  3971  077E  3A07               	skipnz
  3972  077F  1903               	goto	l287
  3973  0780  2F55               	goto	l2073
  3974  0781  2F82               	opt asmopt_pop
  3975                           
  3976                           	
  3977                           l280:	
  3978  0782                     	line	314
  3979                           	
  3980                           l2073:	
  3981  0782                     ;main.c: 314:                         clearLCD();
  3982                           	fcall	_clearLCD
  3983  0782  120A  118A  2083  120A  118A  	line	315
  3984                           ;main.c: 315:                         break;
  3985                           	goto	l2081
  3986  0787  2FCA               	line	316
  3987                           ;main.c: 316:                 case '#':
  3988                           	
  3989                           l288:	
  3990  0788                     	line	317
  3991                           	
  3992                           l2075:	
  3993  0788                     ;main.c: 317:                         estado = 10;
  3994                           	movlw	0Ah
  3995  0788  300A               	bcf	status, 5	;RP0=0, select bank0
  3996  0789  1283               	bcf	status, 6	;RP1=0, select bank0
  3997  078A  1303               	movwf	(main@estado)
  3998  078B  00D4               	movlw	0
  3999  078C  3000               	movwf	((main@estado))+1
  4000  078D  00D5               	line	318
  4001                           ;main.c: 318:                         break;
  4002                           	goto	l2081
  4003  078E  2FCA               	line	319
  4004                           	
  4005                           l2077:	
  4006  078F                     ;main.c: 319:             }
  4007                           	goto	l2081
  4008  078F  2FCA               	
  4009                           l253:	
  4010  0790                     	
  4011                           l2079:	
  4012  0790                     	movf	(main@tecla),w
  4013  0790  0853               	movwf	(??_main+0)+0
  4014  0791  00CA               	clrf	(??_main+0)+0+1
  4015  0792  01CB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4016                           ; Switch size 1, requested type "space"
  4017                           ; Number of cases is 1, Range of values is 0 to 0
  4018                           ; switch strategies available:
  4019                           ; Name         Instructions Cycles
  4020                           ; simple_byte            4     3 (average)
  4021                           ; direct_byte           11     8 (fixed)
  4022                           ; jumptable            260     6 (fixed)
  4023                           ;	Chosen strategy is simple_byte
  4024                           
  4025                           	movf 1+(??_main+0)+0,w
  4026  0793  084B               	opt asmopt_push
  4027                           	opt asmopt_off
  4028                           	xorlw	0^0	; case 0
  4029  0794  3A00               	skipnz
  4030  0795  1903               	goto	l2235
  4031  0796  2F98               	goto	l2081
  4032  0797  2FCA               	opt asmopt_pop
  4033                           	
  4034                           l2235:	
  4035  0798                     ; Switch size 1, requested type "space"
  4036                           ; Number of cases is 16, Range of values is 35 to 68
  4037                           ; switch strategies available:
  4038                           ; Name         Instructions Cycles
  4039                           ; simple_byte           49    25 (average)
  4040                           ; direct_byte          113    11 (fixed)
  4041                           ; jumptable            263     9 (fixed)
  4042                           ;	Chosen strategy is simple_byte
  4043                           
  4044                           	movf 0+(??_main+0)+0,w
  4045  0798  084A               	opt asmopt_push
  4046                           	opt asmopt_off
  4047                           	xorlw	35^0	; case 35
  4048  0799  3A23               	skipnz
  4049  079A  1903               	goto	l2075
  4050  079B  2F88               	xorlw	42^35	; case 42
  4051  079C  3A09               	skipnz
  4052  079D  1903               	goto	l2071
  4053  079E  2F59               	xorlw	48^42	; case 48
  4054  079F  3A1A               	skipnz
  4055  07A0  1903               	goto	l2049
  4056  07A1  2F1C               	xorlw	49^48	; case 49
  4057  07A2  3A01               	skipnz
  4058  07A3  1903               	goto	l2059
  4059  07A4  2F3A               	xorlw	50^49	; case 50
  4060  07A5  3A03               	skipnz
  4061  07A6  1903               	goto	l2059
  4062  07A7  2F3A               	xorlw	51^50	; case 51
  4063  07A8  3A01               	skipnz
  4064  07A9  1903               	goto	l2059
  4065  07AA  2F3A               	xorlw	52^51	; case 52
  4066  07AB  3A07               	skipnz
  4067  07AC  1903               	goto	l2059
  4068  07AD  2F3A               	xorlw	53^52	; case 53
  4069  07AE  3A01               	skipnz
  4070  07AF  1903               	goto	l2059
  4071  07B0  2F3A               	xorlw	54^53	; case 54
  4072  07B1  3A03               	skipnz
  4073  07B2  1903               	goto	l2059
  4074  07B3  2F3A               	xorlw	55^54	; case 55
  4075  07B4  3A01               	skipnz
  4076  07B5  1903               	goto	l2059
  4077  07B6  2F3A               	xorlw	56^55	; case 56
  4078  07B7  3A0F               	skipnz
  4079  07B8  1903               	goto	l2059
  4080  07B9  2F3A               	xorlw	57^56	; case 57
  4081  07BA  3A01               	skipnz
  4082  07BB  1903               	goto	l2059
  4083  07BC  2F3A               	xorlw	65^57	; case 65
  4084  07BD  3A78               	skipnz
  4085  07BE  1903               	goto	l2017
  4086  07BF  2EAE               	xorlw	66^65	; case 66
  4087  07C0  3A03               	skipnz
  4088  07C1  1903               	goto	l2025
  4089  07C2  2EC8               	xorlw	67^66	; case 67
  4090  07C3  3A01               	skipnz
  4091  07C4  1903               	goto	l2033
  4092  07C5  2EE4               	xorlw	68^67	; case 68
  4093  07C6  3A07               	skipnz
  4094  07C7  1903               	goto	l2041
  4095  07C8  2F00               	goto	l2081
  4096  07C9  2FCA               	opt asmopt_pop
  4097                           
  4098                           	
  4099                           l257:	
  4100  07CA                     	line	320
  4101                           	
  4102                           l2081:	
  4103  07CA                     ;main.c: 320:             writeLCD(0,1, displayFIFO() );
  4104                           	clrf	(writeLCD@y)
  4105  07CA  01F8               	incf	(writeLCD@y),f
  4106  07CB  0AF8               	fcall	_displayFIFO
  4107  07CC  120A  118A  2071  120A  118A  	movwf	(writeLCD@ptr)
  4108  07D1  00F9               	movlw	(0x0)
  4109  07D2  3000               	movwf	(writeLCD@ptr+1)
  4110  07D3  00FA               	movlw	low(0)
  4111  07D4  3000               	fcall	_writeLCD
  4112  07D5  120A  118A  216B  120A  118A  	goto	l2083
  4113  07DA  2FDB               	line	321
  4114                           ;main.c: 321:         }
  4115                           	
  4116                           l252:	
  4117  07DB                     	line	322
  4118                           	
  4119                           l2083:	
  4120  07DB                     ;main.c: 322:         serialIOscan();
  4121                           	fcall	_serialIOscan
  4122  07DB  120A  118A  2240  120A  118A  	goto	l1865
  4123  07E0  2BC2               	line	323
  4124                           ;main.c: 323:     }
  4125                           	
  4126                           l289:	
  4127  07E1                     	goto	l1865
  4128  07E1  2BC2               	
  4129                           l290:	
  4130  07E2                     	line	324
  4131                           	
  4132                           l291:	
  4133  07E2                     	global	start
  4134                           	ljmp	start
  4135  07E2  120A  118A  2800   	opt stack 0
  4136                           GLOBAL	__end_of_main
  4137                           	__end_of_main:
  4138  07E5                     	signat	_main,89
  4139                           	global	_serialIOscan
  4140                           
  4141 ;; *************** function _serialIOscan *****************
  4142 ;; Defined at:
  4143 ;;		line 76 in file "serialIO.c"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;  i               1    8[COMMON] unsigned char 
  4148 ;;  j               1    7[COMMON] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4158 ;;      Params:         0       0       0       0       0
  4159 ;;      Locals:         2       0       0       0       0
  4160 ;;      Temps:          3       0       0       0       0
  4161 ;;      Totals:         5       0       0       0       0
  4162 ;;Total ram usage:        5 bytes
  4163 ;; Hardware stack levels used:    1
  4164 ;; Hardware stack levels required when called:    1
  4165 ;; This function calls:
  4166 ;;		_serialIObyteShift
  4167 ;;		_serialIOload
  4168 ;; This function is called by:
  4169 ;;		_main
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4173                           	file	"serialIO.c"
  4174                           	line	76
  4175                           global __ptext1
  4176                           __ptext1:	;psect for function _serialIOscan
  4177  0240                     psect	text1
  4178                           	file	"serialIO.c"
  4179                           	line	76
  4180                           	global	__size_of_serialIOscan
  4181                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
  4182  003D                     	
  4183                           _serialIOscan:	
  4184  0240                     ;incstack = 0
  4185                           	opt	stack 6
  4186                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4187                           	line	79
  4188                           	
  4189                           l1811:	
  4190  0240                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  4191                           	bcf	status, 5	;RP0=0, select bank0
  4192  0240  1283               	bcf	status, 6	;RP1=0, select bank0
  4193  0241  1303               	movf	(_lenSerialIO),w
  4194  0242  0820               	addlw	0FFh
  4195  0243  3EFF               	movwf	(??_serialIOscan+0)+0
  4196  0244  00F4               	movf	(??_serialIOscan+0)+0,w
  4197  0245  0874               	movwf	(serialIOscan@j)
  4198  0246  00F7               	line	80
  4199                           	
  4200                           l1813:	
  4201  0247                     ;serialIO.c: 80:     serialIOload();
  4202                           	fcall	_serialIOload
  4203  0247  120A  118A  207E  120A  118A  	line	81
  4204                           	
  4205                           l1815:	
  4206  024C                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  4207                           	clrf	(serialIOscan@i)
  4208  024C  01F8               	goto	l1821
  4209  024D  2A6E               	
  4210                           l321:	
  4211  024E                     	line	83
  4212                           	
  4213                           l1817:	
  4214  024E                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
  4215                           	decf	(serialIOscan@i),w
  4216  024E  0378               	xorlw	0ffh
  4217  024F  3AFF               	addwf	(serialIOscan@j),w
  4218  0250  0777               	bcf	status, 5	;RP0=0, select bank0
  4219  0251  1283               	bcf	status, 6	;RP1=0, select bank0
  4220  0252  1303               	addwf	(_ptrSerialOut),w
  4221  0253  0721               	movwf	(??_serialIOscan+0)+0
  4222  0254  00F4               	movf	0+(??_serialIOscan+0)+0,w
  4223  0255  0874               	movwf	fsr0
  4224  0256  0084               	bcf	status, 7	;select IRP bank0
  4225  0257  1383               	movf	indf,w
  4226  0258  0800               	fcall	_serialIObyteShift
  4227  0259  120A  118A  2140  120A  118A  	movwf	(??_serialIOscan+1)+0
  4228  025E  00F5               	movf	(serialIOscan@i),w
  4229  025F  0878               	bcf	status, 5	;RP0=0, select bank0
  4230  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  4231  0261  1303               	addwf	(_ptrSerialIn),w
  4232  0262  0722               	movwf	(??_serialIOscan+2)+0
  4233  0263  00F6               	movf	0+(??_serialIOscan+2)+0,w
  4234  0264  0876               	movwf	fsr0
  4235  0265  0084               	movf	(??_serialIOscan+1)+0,w
  4236  0266  0875               	bcf	status, 7	;select IRP bank0
  4237  0267  1383               	movwf	indf
  4238  0268  0080               	line	84
  4239                           	
  4240                           l1819:	
  4241  0269                     ;serialIO.c: 84:     }
  4242                           	movlw	low(01h)
  4243  0269  3001               	movwf	(??_serialIOscan+0)+0
  4244  026A  00F4               	movf	(??_serialIOscan+0)+0,w
  4245  026B  0874               	addwf	(serialIOscan@i),f
  4246  026C  07F8               	goto	l1821
  4247  026D  2A6E               	
  4248                           l320:	
  4249  026E                     	
  4250                           l1821:	
  4251  026E                     	bcf	status, 5	;RP0=0, select bank0
  4252  026E  1283               	bcf	status, 6	;RP1=0, select bank0
  4253  026F  1303               	movf	(_lenSerialIO),w
  4254  0270  0820               	subwf	(serialIOscan@i),w
  4255  0271  0278               	skipc
  4256  0272  1C03               	goto	u821
  4257  0273  2A75               	goto	u820
  4258  0274  2A76               u821:
  4259  0275                     	goto	l1817
  4260  0275  2A4E               u820:
  4261  0276                     	goto	l1823
  4262  0276  2A77               	
  4263                           l322:	
  4264  0277                     	line	85
  4265                           	
  4266                           l1823:	
  4267  0277                     ;serialIO.c: 85:     serialIOload();
  4268                           	fcall	_serialIOload
  4269  0277  120A  118A  207E  120A  118A  	line	86
  4270                           	
  4271                           l323:	
  4272  027C                     	return
  4273  027C  0008               	opt stack 0
  4274                           GLOBAL	__end_of_serialIOscan
  4275                           	__end_of_serialIOscan:
  4276  027D                     	signat	_serialIOscan,89
  4277                           	global	_serialIOload
  4278                           
  4279 ;; *************** function _serialIOload *****************
  4280 ;; Defined at:
  4281 ;;		line 45 in file "serialIO.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		None
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4295 ;;      Params:         0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; This function calls:
  4302 ;;		Nothing
  4303 ;; This function is called by:
  4304 ;;		_serialIOscan
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4308                           	line	45
  4309                           global __ptext2
  4310                           __ptext2:	;psect for function _serialIOload
  4311  007E                     psect	text2
  4312                           	file	"serialIO.c"
  4313                           	line	45
  4314                           	global	__size_of_serialIOload
  4315                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
  4316  0005                     	
  4317                           _serialIOload:	
  4318  007E                     ;incstack = 0
  4319                           	opt	stack 6
  4320                           ; Regs used in _serialIOload: []
  4321                           	line	47
  4322                           	
  4323                           l1649:	
  4324  007E                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  4325                           	bcf	status, 5	;RP0=0, select bank0
  4326  007E  1283               	bcf	status, 6	;RP1=0, select bank0
  4327  007F  1303               	bcf	(5),3	;volatile
  4328  0080  1185               	line	48
  4329                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  4330                           	bsf	(5),3	;volatile
  4331  0081  1585               	line	49
  4332                           	
  4333                           l308:	
  4334  0082                     	return
  4335  0082  0008               	opt stack 0
  4336                           GLOBAL	__end_of_serialIOload
  4337                           	__end_of_serialIOload:
  4338  0083                     	signat	_serialIOload,89
  4339                           	global	_serialIObyteShift
  4340                           
  4341 ;; *************** function _serialIObyteShift *****************
  4342 ;; Defined at:
  4343 ;;		line 50 in file "serialIO.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  dataIn          1    wreg     unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  dataIn          1    1[COMMON] unsigned char 
  4348 ;;  dataBit         1    3[COMMON] unsigned char 
  4349 ;;  dataOut         1    2[COMMON] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      unsigned char 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         0       0       0       0       0
  4360 ;;      Locals:         3       0       0       0       0
  4361 ;;      Temps:          1       0       0       0       0
  4362 ;;      Totals:         4       0       0       0       0
  4363 ;;Total ram usage:        4 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; This function calls:
  4366 ;;		Nothing
  4367 ;; This function is called by:
  4368 ;;		_serialIOscan
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4372                           	line	50
  4373                           global __ptext3
  4374                           __ptext3:	;psect for function _serialIObyteShift
  4375  0140                     psect	text3
  4376                           	file	"serialIO.c"
  4377                           	line	50
  4378                           	global	__size_of_serialIObyteShift
  4379                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
  4380  002B                     	
  4381                           _serialIObyteShift:	
  4382  0140                     ;incstack = 0
  4383                           	opt	stack 6
  4384                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  4385                           ;serialIObyteShift@dataIn stored from wreg
  4386                           	movwf	(serialIObyteShift@dataIn)
  4387  0140  00F1               	line	55
  4388                           	
  4389                           l1651:	
  4390  0141                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
  4391                           	movlw	low(080h)
  4392  0141  3080               	movwf	(??_serialIObyteShift+0)+0
  4393  0142  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4394  0143  0870               	movwf	(serialIObyteShift@dataBit)
  4395  0144  00F3               	line	56
  4396                           	
  4397                           l1653:	
  4398  0145                     ;serialIO.c: 56:     dataOut = 0;
  4399                           	clrf	(serialIObyteShift@dataOut)
  4400  0145  01F2               	line	58
  4401                           ;serialIO.c: 58:     while( dataBit )
  4402                           	goto	l1665
  4403  0146  2960               	
  4404                           l312:	
  4405  0147                     	line	60
  4406                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  4407                           	bcf	status, 5	;RP0=0, select bank0
  4408  0147  1283               	bcf	status, 6	;RP1=0, select bank0
  4409  0148  1303               	bcf	(5),2	;volatile
  4410  0149  1105               	line	61
  4411                           	
  4412                           l1655:	
  4413  014A                     ;serialIO.c: 61:         if( dataIn & dataBit )
  4414                           	movf	(serialIObyteShift@dataIn),w
  4415  014A  0871               	andwf	(serialIObyteShift@dataBit),w
  4416  014B  0573               	btfsc	status,2
  4417  014C  1903               	goto	u701
  4418  014D  294F               	goto	u700
  4419  014E  2950               u701:
  4420  014F                     	goto	l313
  4421  014F  2952               u700:
  4422  0150                     	line	62
  4423                           	
  4424                           l1657:	
  4425  0150                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
  4426                           	bsf	(5),0	;volatile
  4427  0150  1405               	goto	l314
  4428  0151  2953               	line	63
  4429                           ;serialIO.c: 63:         else
  4430                           	
  4431                           l313:	
  4432  0152                     	line	64
  4433                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  4434                           	bcf	(5),0	;volatile
  4435  0152  1005               	
  4436                           l314:	
  4437  0153                     	line	66
  4438                           ;serialIO.c: 66:         if( SERIALIO.IN)
  4439                           	btfss	(5),1	;volatile
  4440  0153  1C85               	goto	u711
  4441  0154  2956               	goto	u710
  4442  0155  2957               u711:
  4443  0156                     	goto	l1661
  4444  0156  295C               u710:
  4445  0157                     	line	67
  4446                           	
  4447                           l1659:	
  4448  0157                     ;serialIO.c: 67:             dataOut |= dataBit;
  4449                           	movf	(serialIObyteShift@dataBit),w
  4450  0157  0873               	movwf	(??_serialIObyteShift+0)+0
  4451  0158  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4452  0159  0870               	iorwf	(serialIObyteShift@dataOut),f
  4453  015A  04F2               	goto	l1661
  4454  015B  295C               	
  4455                           l315:	
  4456  015C                     	line	68
  4457                           	
  4458                           l1661:	
  4459  015C                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
  4460                           	bsf	(5),2	;volatile
  4461  015C  1505               	line	69
  4462                           	
  4463                           l1663:	
  4464  015D                     ;serialIO.c: 69:         dataBit >>= 1;
  4465                           	clrc
  4466  015D  1003               	rrf	(serialIObyteShift@dataBit),f
  4467  015E  0CF3               
  4468                           	goto	l1665
  4469  015F  2960               	line	70
  4470                           ;serialIO.c: 70:     }
  4471                           	
  4472                           l311:	
  4473  0160                     	line	58
  4474                           	
  4475                           l1665:	
  4476  0160                     ;serialIO.c: 58:     while( dataBit )
  4477                           	movf	((serialIObyteShift@dataBit)),w
  4478  0160  0873               	btfss	status,2
  4479  0161  1D03               	goto	u721
  4480  0162  2964               	goto	u720
  4481  0163  2965               u721:
  4482  0164                     	goto	l312
  4483  0164  2947               u720:
  4484  0165                     	
  4485                           l316:	
  4486  0165                     	line	71
  4487                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  4488                           	bcf	status, 5	;RP0=0, select bank0
  4489  0165  1283               	bcf	status, 6	;RP1=0, select bank0
  4490  0166  1303               	bcf	(5),2	;volatile
  4491  0167  1105               	line	72
  4492                           	
  4493                           l1667:	
  4494  0168                     ;serialIO.c: 72:     return( dataOut );
  4495                           	movf	(serialIObyteShift@dataOut),w
  4496  0168  0872               	goto	l317
  4497  0169  296A               	
  4498                           l1669:	
  4499  016A                     	line	73
  4500                           	
  4501                           l317:	
  4502  016A                     	return
  4503  016A  0008               	opt stack 0
  4504                           GLOBAL	__end_of_serialIObyteShift
  4505                           	__end_of_serialIObyteShift:
  4506  016B                     	signat	_serialIObyteShift,4217
  4507                           	global	_screen_menu
  4508                           
  4509 ;; *************** function _screen_menu *****************
  4510 ;; Defined at:
  4511 ;;		line 144 in file "lcd.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4525 ;;      Params:         0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    3
  4532 ;; This function calls:
  4533 ;;		_writeLCD
  4534 ;; This function is called by:
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4539                           	file	"lcd.c"
  4540                           	line	144
  4541                           global __ptext4
  4542                           __ptext4:	;psect for function _screen_menu
  4543  009D                     psect	text4
  4544                           	file	"lcd.c"
  4545                           	line	144
  4546                           	global	__size_of_screen_menu
  4547                           	__size_of_screen_menu	equ	__end_of_screen_menu-_screen_menu
  4548  000C                     	
  4549                           _screen_menu:	
  4550  009D                     ;incstack = 0
  4551                           	opt	stack 4
  4552                           ; Regs used in _screen_menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4553                           	line	146
  4554                           	
  4555                           l1779:	
  4556  009D                     ;lcd.c: 146:     writeLCD(0,0,"INSIRA A SEQUEN.");
  4557                           	clrf	(writeLCD@y)
  4558  009D  01F8               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  4559  009E  3017               	movwf	(writeLCD@ptr)
  4560  009F  00F9               	movlw	80h
  4561  00A0  3080               	movwf	(writeLCD@ptr+1)
  4562  00A1  00FA               	movlw	low(0)
  4563  00A2  3000               	fcall	_writeLCD
  4564  00A3  120A  118A  216B  120A  118A  	line	147
  4565                           	
  4566                           l133:	
  4567  00A8                     	return
  4568  00A8  0008               	opt stack 0
  4569                           GLOBAL	__end_of_screen_menu
  4570                           	__end_of_screen_menu:
  4571  00A9                     	signat	_screen_menu,89
  4572                           	global	_screen_car
  4573                           
  4574 ;; *************** function _screen_car *****************
  4575 ;; Defined at:
  4576 ;;		line 135 in file "lcd.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         0       0       0       0       0
  4591 ;;      Locals:         0       0       0       0       0
  4592 ;;      Temps:          0       3       0       0       0
  4593 ;;      Totals:         0       3       0       0       0
  4594 ;;Total ram usage:        3 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    3
  4597 ;; This function calls:
  4598 ;;		_clearLCD
  4599 ;;		_writeLCD
  4600 ;; This function is called by:
  4601 ;;		_main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4605                           	line	135
  4606                           global __ptext5
  4607                           __ptext5:	;psect for function _screen_car
  4608  0206                     psect	text5
  4609                           	file	"lcd.c"
  4610                           	line	135
  4611                           	global	__size_of_screen_car
  4612                           	__size_of_screen_car	equ	__end_of_screen_car-_screen_car
  4613  003A                     	
  4614                           _screen_car:	
  4615  0206                     ;incstack = 0
  4616                           	opt	stack 4
  4617                           ; Regs used in _screen_car: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4618                           	line	137
  4619                           	
  4620                           l1771:	
  4621  0206                     ;lcd.c: 137:     writeLCD(2,0,"SEQUENCIADOR");
  4622                           	clrf	(writeLCD@y)
  4623  0206  01F8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  4624  0207  3028               	movwf	(writeLCD@ptr)
  4625  0208  00F9               	movlw	80h
  4626  0209  3080               	movwf	(writeLCD@ptr+1)
  4627  020A  00FA               	movlw	low(02h)
  4628  020B  3002               	fcall	_writeLCD
  4629  020C  120A  118A  216B  120A  118A  	line	138
  4630                           	
  4631                           l1773:	
  4632  0211                     ;lcd.c: 138:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4633                           	opt asmopt_push
  4634                           opt asmopt_off
  4635                           movlw  2
  4636  0211  3002               	bcf	status, 5	;RP0=0, select bank0
  4637  0212  1283               	bcf	status, 6	;RP1=0, select bank0
  4638  0213  1303               movwf	((??_screen_car+0)+0+2),f
  4639  0214  00C9               movlw	4
  4640  0215  3004               movwf	((??_screen_car+0)+0+1),f
  4641  0216  00C8               	movlw	185
  4642  0217  30B9               movwf	((??_screen_car+0)+0),f
  4643  0218  00C7               	u1307:
  4644  0219                     decfsz	((??_screen_car+0)+0),f
  4645  0219  0BC7               	goto	u1307
  4646  021A  2A19               	decfsz	((??_screen_car+0)+0+1),f
  4647  021B  0BC8               	goto	u1307
  4648  021C  2A19               	decfsz	((??_screen_car+0)+0+2),f
  4649  021D  0BC9               	goto	u1307
  4650  021E  2A19               	nop2
  4651  021F  2A20               opt asmopt_pop
  4652                           
  4653                           	line	139
  4654                           	
  4655                           l1775:	
  4656  0220                     ;lcd.c: 139:     writeLCD(2,1,"PROGRAMAVEL");
  4657                           	clrf	(writeLCD@y)
  4658  0220  01F8               	incf	(writeLCD@y),f
  4659  0221  0AF8               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  4660  0222  3035               	movwf	(writeLCD@ptr)
  4661  0223  00F9               	movlw	80h
  4662  0224  3080               	movwf	(writeLCD@ptr+1)
  4663  0225  00FA               	movlw	low(02h)
  4664  0226  3002               	fcall	_writeLCD
  4665  0227  120A  118A  216B  120A  118A  	line	140
  4666                           ;lcd.c: 140:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  4667                           	opt asmopt_push
  4668                           opt asmopt_off
  4669                           movlw  11
  4670  022C  300B               	bcf	status, 5	;RP0=0, select bank0
  4671  022D  1283               	bcf	status, 6	;RP1=0, select bank0
  4672  022E  1303               movwf	((??_screen_car+0)+0+2),f
  4673  022F  00C9               movlw	38
  4674  0230  3026               movwf	((??_screen_car+0)+0+1),f
  4675  0231  00C8               	movlw	93
  4676  0232  305D               movwf	((??_screen_car+0)+0),f
  4677  0233  00C7               	u1317:
  4678  0234                     decfsz	((??_screen_car+0)+0),f
  4679  0234  0BC7               	goto	u1317
  4680  0235  2A34               	decfsz	((??_screen_car+0)+0+1),f
  4681  0236  0BC8               	goto	u1317
  4682  0237  2A34               	decfsz	((??_screen_car+0)+0+2),f
  4683  0238  0BC9               	goto	u1317
  4684  0239  2A34               opt asmopt_pop
  4685                           
  4686                           	line	141
  4687                           	
  4688                           l1777:	
  4689  023A                     ;lcd.c: 141:     clearLCD();
  4690                           	fcall	_clearLCD
  4691  023A  120A  118A  2083  120A  118A  	line	142
  4692                           	
  4693                           l130:	
  4694  023F                     	return
  4695  023F  0008               	opt stack 0
  4696                           GLOBAL	__end_of_screen_car
  4697                           	__end_of_screen_car:
  4698  0240                     	signat	_screen_car,89
  4699                           	global	_writeLCD
  4700                           
  4701 ;; *************** function _writeLCD *****************
  4702 ;; Defined at:
  4703 ;;		line 87 in file "lcd.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  x               1    wreg     unsigned char 
  4706 ;;  y               1    8[COMMON] unsigned char 
  4707 ;;  ptr             2    9[COMMON] PTR const unsigned char 
  4708 ;;		 -> STR_3(17), STR_2(12), STR_1(13), checktecla@linha2(17), 
  4709 ;;		 -> fifo(16), 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  x               1   12[COMMON] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4721 ;;      Params:         3       0       0       0       0
  4722 ;;      Locals:         1       0       0       0       0
  4723 ;;      Temps:          1       0       0       0       0
  4724 ;;      Totals:         5       0       0       0       0
  4725 ;;Total ram usage:        5 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    2
  4728 ;; This function calls:
  4729 ;;		_gotoxy
  4730 ;;		_putLCD
  4731 ;; This function is called by:
  4732 ;;		_screen_car
  4733 ;;		_screen_menu
  4734 ;;		_main
  4735 ;;		_checktecla
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4739                           	line	87
  4740                           global __ptext6
  4741                           __ptext6:	;psect for function _writeLCD
  4742  016B                     psect	text6
  4743                           	file	"lcd.c"
  4744                           	line	87
  4745                           	global	__size_of_writeLCD
  4746                           	__size_of_writeLCD	equ	__end_of_writeLCD-_writeLCD
  4747  0033                     	
  4748                           _writeLCD:	
  4749  016B                     ;incstack = 0
  4750                           	opt	stack 5
  4751                           ; Regs used in _writeLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4752                           ;writeLCD@x stored from wreg
  4753                           	movwf	(writeLCD@x)
  4754  016B  00FC               	line	89
  4755                           	
  4756                           l1639:	
  4757  016C                     ;lcd.c: 87: void writeLCD( unsigned char x, unsigned char y, const char * ptr );lcd.c: 8
                                 8: {;lcd.c: 89:         gotoxy(x,y);
  4758                           	movf	(writeLCD@y),w
  4759  016C  0878               	movwf	(??_writeLCD+0)+0
  4760  016D  00FB               	movf	(??_writeLCD+0)+0,w
  4761  016E  087B               	movwf	(gotoxy@y)
  4762  016F  00F4               	movf	(writeLCD@x),w
  4763  0170  087C               	fcall	_gotoxy
  4764  0171  120A  118A  20EE  120A  118A  	line	90
  4765                           ;lcd.c: 90:         while( *ptr )
  4766                           	goto	l1645
  4767  0176  298C               	
  4768                           l104:	
  4769  0177                     	line	91
  4770                           	
  4771                           l1641:	
  4772  0177                     ;lcd.c: 91:         putLCD( *ptr++ );
  4773                           	movf	(writeLCD@ptr+1),w
  4774  0177  087A               	bcf	status, 5	;RP0=0, select bank0
  4775  0178  1283               	bcf	status, 6	;RP1=0, select bank0
  4776  0179  1303               	movwf	btemp+1
  4777  017A  00FF               	movf	(writeLCD@ptr),w
  4778  017B  0879               	movwf	fsr0
  4779  017C  0084               	fcall	stringtab
  4780  017D  120A  118A  2003  120A  118A  	fcall	_putLCD
  4781  0182  120A  118A  21D2  120A  118A  	
  4782                           l1643:	
  4783  0187                     	movlw	01h
  4784  0187  3001               	addwf	(writeLCD@ptr),f
  4785  0188  07F9               	skipnc
  4786  0189  1803               	incf	(writeLCD@ptr+1),f
  4787  018A  0AFA               	goto	l1645
  4788  018B  298C               	
  4789                           l103:	
  4790  018C                     	line	90
  4791                           	
  4792                           l1645:	
  4793  018C                     ;lcd.c: 90:         while( *ptr )
  4794                           	movf	(writeLCD@ptr+1),w
  4795  018C  087A               	bcf	status, 5	;RP0=0, select bank0
  4796  018D  1283               	bcf	status, 6	;RP1=0, select bank0
  4797  018E  1303               	movwf	btemp+1
  4798  018F  00FF               	movf	(writeLCD@ptr),w
  4799  0190  0879               	movwf	fsr0
  4800  0191  0084               	fcall	stringtab
  4801  0192  120A  118A  2003  120A  118A  	xorlw	0
  4802  0197  3A00               	skipz
  4803  0198  1D03               	goto	u691
  4804  0199  299B               	goto	u690
  4805  019A  299C               u691:
  4806  019B                     	goto	l1641
  4807  019B  2977               u690:
  4808  019C                     	goto	l106
  4809  019C  299D               	
  4810                           l105:	
  4811  019D                     	line	92
  4812                           	
  4813                           l106:	
  4814  019D                     	return
  4815  019D  0008               	opt stack 0
  4816                           GLOBAL	__end_of_writeLCD
  4817                           	__end_of_writeLCD:
  4818  019E                     	signat	_writeLCD,12409
  4819                           	global	_putLCD
  4820                           
  4821 ;; *************** function _putLCD *****************
  4822 ;; Defined at:
  4823 ;;		line 66 in file "lcd.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  c               1    wreg     unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  c               1    2[COMMON] unsigned char 
  4828 ;;  nibble          1    3[COMMON] volatile struct .
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  1    wreg      void 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         0       0       0       0       0
  4839 ;;      Locals:         2       0       0       0       0
  4840 ;;      Temps:          2       0       0       0       0
  4841 ;;      Totals:         4       0       0       0       0
  4842 ;;Total ram usage:        4 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_writeLCD
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4851                           	line	66
  4852                           global __ptext7
  4853                           __ptext7:	;psect for function _putLCD
  4854  01D2                     psect	text7
  4855                           	file	"lcd.c"
  4856                           	line	66
  4857                           	global	__size_of_putLCD
  4858                           	__size_of_putLCD	equ	__end_of_putLCD-_putLCD
  4859  0034                     	
  4860                           _putLCD:	
  4861  01D2                     ;incstack = 0
  4862                           	opt	stack 6
  4863                           ; Regs used in _putLCD: [wreg+status,2+status,0]
  4864                           ;putLCD@c stored from wreg
  4865                           	movwf	(putLCD@c)
  4866  01D2  00F2               	line	70
  4867                           	
  4868                           l1603:	
  4869  01D3                     ;lcd.c: 66: void putLCD( unsigned char c );lcd.c: 67:  {;lcd.c: 68:         volatile REG
                                 nibble_t nibble;;lcd.c: 70:         nibble.HILO = c;
  4870                           	movf	(putLCD@c),w
  4871  01D3  0872               	movwf	(??_putLCD+0)+0
  4872  01D4  00F0               	movf	(??_putLCD+0)+0,w
  4873  01D5  0870               	movwf	(putLCD@nibble)	;volatile
  4874  01D6  00F3               	line	71
  4875                           	
  4876                           l1605:	
  4877  01D7                     ;lcd.c: 71:         LCD.RS = 1;
  4878                           	bcf	status, 5	;RP0=0, select bank0
  4879  01D7  1283               	bcf	status, 6	;RP1=0, select bank0
  4880  01D8  1303               	bsf	(8),4	;volatile
  4881  01D9  1608               	line	72
  4882                           	
  4883                           l1607:	
  4884  01DA                     ;lcd.c: 72:         LCD.BUS= nibble.HI;
  4885                           	swapf	(putLCD@nibble),w	;volatile
  4886  01DA  0E73               	andlw	(1<<4)-1
  4887  01DB  390F               	movwf	(??_putLCD+0)+0
  4888  01DC  00F0               	movf	(8),w	;volatile
  4889  01DD  0808               	xorwf	(??_putLCD+0)+0,w
  4890  01DE  0670               	andlw	not ((1<<4)-1)
  4891  01DF  39F0               	xorwf	(??_putLCD+0)+0,w
  4892  01E0  0670               	movwf	(8)	;volatile
  4893  01E1  0088               	line	73
  4894                           	
  4895                           l1609:	
  4896  01E2                     ;lcd.c: 73:         LCD.EN = 0;
  4897                           	bcf	(8),5	;volatile
  4898  01E2  1288               	line	74
  4899                           	
  4900                           l1611:	
  4901  01E3                     ;lcd.c: 74:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4902                           	opt asmopt_push
  4903                           opt asmopt_off
  4904                           movlw	3
  4905  01E3  3003               movwf	((??_putLCD+0)+0+1),f
  4906  01E4  00F1               	movlw	151
  4907  01E5  3097               movwf	((??_putLCD+0)+0),f
  4908  01E6  00F0               	u1327:
  4909  01E7                     decfsz	((??_putLCD+0)+0),f
  4910  01E7  0BF0               	goto	u1327
  4911  01E8  29E7               	decfsz	((??_putLCD+0)+0+1),f
  4912  01E9  0BF1               	goto	u1327
  4913  01EA  29E7               	nop2
  4914  01EB  29EC               opt asmopt_pop
  4915                           
  4916                           	line	75
  4917                           	
  4918                           l1613:	
  4919  01EC                     ;lcd.c: 75:         LCD.EN = 1;
  4920                           	bcf	status, 5	;RP0=0, select bank0
  4921  01EC  1283               	bcf	status, 6	;RP1=0, select bank0
  4922  01ED  1303               	bsf	(8),5	;volatile
  4923  01EE  1688               	line	77
  4924                           	
  4925                           l1615:	
  4926  01EF                     ;lcd.c: 77:         LCD.RS = 1;
  4927                           	bsf	(8),4	;volatile
  4928  01EF  1608               	line	78
  4929                           ;lcd.c: 78:         LCD.BUS = nibble.LO;
  4930                           	movf	(putLCD@nibble),w	;volatile
  4931  01F0  0873               	andlw	(1<<4)-1
  4932  01F1  390F               	movwf	(??_putLCD+0)+0
  4933  01F2  00F0               	movf	(8),w	;volatile
  4934  01F3  0808               	xorwf	(??_putLCD+0)+0,w
  4935  01F4  0670               	andlw	not ((1<<4)-1)
  4936  01F5  39F0               	xorwf	(??_putLCD+0)+0,w
  4937  01F6  0670               	movwf	(8)	;volatile
  4938  01F7  0088               	line	79
  4939                           	
  4940                           l1617:	
  4941  01F8                     ;lcd.c: 79:         LCD.EN = 0;
  4942                           	bcf	(8),5	;volatile
  4943  01F8  1288               	line	80
  4944                           	
  4945                           l1619:	
  4946  01F9                     ;lcd.c: 80:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4947                           	opt asmopt_push
  4948                           opt asmopt_off
  4949                           movlw	3
  4950  01F9  3003               movwf	((??_putLCD+0)+0+1),f
  4951  01FA  00F1               	movlw	151
  4952  01FB  3097               movwf	((??_putLCD+0)+0),f
  4953  01FC  00F0               	u1337:
  4954  01FD                     decfsz	((??_putLCD+0)+0),f
  4955  01FD  0BF0               	goto	u1337
  4956  01FE  29FD               	decfsz	((??_putLCD+0)+0+1),f
  4957  01FF  0BF1               	goto	u1337
  4958  0200  29FD               	nop2
  4959  0201  2A02               opt asmopt_pop
  4960                           
  4961                           	line	81
  4962                           	
  4963                           l1621:	
  4964  0202                     ;lcd.c: 81:         LCD.EN = 1;
  4965                           	bcf	status, 5	;RP0=0, select bank0
  4966  0202  1283               	bcf	status, 6	;RP1=0, select bank0
  4967  0203  1303               	bsf	(8),5	;volatile
  4968  0204  1688               	line	82
  4969                           	
  4970                           l97:	
  4971  0205                     	return
  4972  0205  0008               	opt stack 0
  4973                           GLOBAL	__end_of_putLCD
  4974                           	__end_of_putLCD:
  4975  0206                     	signat	_putLCD,4217
  4976                           	global	_gotoxy
  4977                           
  4978 ;; *************** function _gotoxy *****************
  4979 ;; Defined at:
  4980 ;;		line 83 in file "lcd.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  x               1    wreg     unsigned char 
  4983 ;;  y               1    4[COMMON] unsigned char 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  x               1    7[COMMON] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, pclath, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4995 ;;      Params:         1       0       0       0       0
  4996 ;;      Locals:         1       0       0       0       0
  4997 ;;      Temps:          2       0       0       0       0
  4998 ;;      Totals:         4       0       0       0       0
  4999 ;;Total ram usage:        4 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    1
  5002 ;; This function calls:
  5003 ;;		_cmdLCD
  5004 ;; This function is called by:
  5005 ;;		_writeLCD
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5009                           	line	83
  5010                           global __ptext8
  5011                           __ptext8:	;psect for function _gotoxy
  5012  00EE                     psect	text8
  5013                           	file	"lcd.c"
  5014                           	line	83
  5015                           	global	__size_of_gotoxy
  5016                           	__size_of_gotoxy	equ	__end_of_gotoxy-_gotoxy
  5017  0018                     	
  5018                           _gotoxy:	
  5019  00EE                     ;incstack = 0
  5020                           	opt	stack 5
  5021                           ; Regs used in _gotoxy: [wreg+status,2+status,0+pclath+cstack]
  5022                           ;gotoxy@x stored from wreg
  5023                           	movwf	(gotoxy@x)
  5024  00EE  00F7               	line	85
  5025                           	
  5026                           l1623:	
  5027  00EF                     ;lcd.c: 83: void gotoxy( unsigned char x, unsigned char y );lcd.c: 84: {;lcd.c: 85:     
                                     cmdLCD((0x80 | 0xC0 * y) + (x & 0X3F));
  5028                           	movlw	low(03Fh)
  5029  00EF  303F               	andwf	(gotoxy@x),w
  5030  00F0  0577               	movwf	(??_gotoxy+0)+0
  5031  00F1  00F5               	movf	(gotoxy@y),w
  5032  00F2  0874               	movwf	(??_gotoxy+1)+0
  5033  00F3  00F6               	movlw	(06h)-1
  5034  00F4  3005               u665:
  5035  00F5                     	clrc
  5036  00F5  1003               	rlf	(??_gotoxy+1)+0,f
  5037  00F6  0DF6               	addlw	-1
  5038  00F7  3EFF               	skipz
  5039  00F8  1D03               	goto	u665
  5040  00F9  28F5               	clrc
  5041  00FA  1003               	rlf	(??_gotoxy+1)+0,w
  5042  00FB  0D76               	xorlw	0ffh
  5043  00FC  3AFF               	addlw	1
  5044  00FD  3E01               	iorlw	080h
  5045  00FE  3880               	addwf	0+(??_gotoxy+0)+0,w
  5046  00FF  0775               	fcall	_cmdLCD
  5047  0100  120A  118A  22BC  120A  118A  	line	86
  5048                           	
  5049                           l100:	
  5050  0105                     	return
  5051  0105  0008               	opt stack 0
  5052                           GLOBAL	__end_of_gotoxy
  5053                           	__end_of_gotoxy:
  5054  0106                     	signat	_gotoxy,8313
  5055                           	global	_clearLCD
  5056                           
  5057 ;; *************** function _clearLCD *****************
  5058 ;; Defined at:
  5059 ;;		line 103 in file "lcd.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, pclath, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5073 ;;      Params:         0       0       0       0       0
  5074 ;;      Locals:         0       0       0       0       0
  5075 ;;      Temps:          0       0       0       0       0
  5076 ;;      Totals:         0       0       0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; Hardware stack levels required when called:    1
  5080 ;; This function calls:
  5081 ;;		_cmdLCD
  5082 ;; This function is called by:
  5083 ;;		_screen_car
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5088                           	line	103
  5089                           global __ptext9
  5090                           __ptext9:	;psect for function _clearLCD
  5091  0083                     psect	text9
  5092                           	file	"lcd.c"
  5093                           	line	103
  5094                           	global	__size_of_clearLCD
  5095                           	__size_of_clearLCD	equ	__end_of_clearLCD-_clearLCD
  5096  0007                     	
  5097                           _clearLCD:	
  5098  0083                     ;incstack = 0
  5099                           	opt	stack 5
  5100                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  5101                           	line	105
  5102                           	
  5103                           l1647:	
  5104  0083                     ;lcd.c: 105:     cmdLCD(0x01);
  5105                           	movlw	low(01h)
  5106  0083  3001               	fcall	_cmdLCD
  5107  0084  120A  118A  22BC  120A  118A  	line	106
  5108                           	
  5109                           l115:	
  5110  0089                     	return
  5111  0089  0008               	opt stack 0
  5112                           GLOBAL	__end_of_clearLCD
  5113                           	__end_of_clearLCD:
  5114  008A                     	signat	_clearLCD,89
  5115                           	global	_resetFIFO
  5116                           
  5117 ;; *************** function _resetFIFO *****************
  5118 ;; Defined at:
  5119 ;;		line 60 in file "fifo.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5133 ;;      Params:         0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0
  5136 ;;      Totals:         0       0       0       0       0
  5137 ;;Total ram usage:        0 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    1
  5140 ;; This function calls:
  5141 ;;		_delFIFO
  5142 ;; This function is called by:
  5143 ;;		_main
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5147                           	file	"fifo.c"
  5148                           	line	60
  5149                           global __ptext10
  5150                           __ptext10:	;psect for function _resetFIFO
  5151  0092                     psect	text10
  5152                           	file	"fifo.c"
  5153                           	line	60
  5154                           	global	__size_of_resetFIFO
  5155                           	__size_of_resetFIFO	equ	__end_of_resetFIFO-_resetFIFO
  5156  000B                     	
  5157                           _resetFIFO:	
  5158  0092                     ;incstack = 0
  5159                           	opt	stack 6
  5160                           ; Regs used in _resetFIFO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5161                           	line	62
  5162                           	
  5163                           l1691:	
  5164  0092                     ;fifo.c: 62:     delFIFO(16);
  5165                           	movlw	low(010h)
  5166  0092  3010               	fcall	_delFIFO
  5167  0093  120A  118A  211F  120A  118A  	line	63
  5168                           	
  5169                           l1693:	
  5170  0098                     ;fifo.c: 63:     fifoHead = 0;
  5171                           	clrf	(_fifoHead)
  5172  0098  01FD               	line	64
  5173                           	
  5174                           l1695:	
  5175  0099                     ;fifo.c: 64:     fifoTail = 0;
  5176                           	bcf	status, 5	;RP0=0, select bank0
  5177  0099  1283               	bcf	status, 6	;RP1=0, select bank0
  5178  009A  1303               	clrf	(_fifoTail)
  5179  009B  01A5               	line	65
  5180                           	
  5181                           l30:	
  5182  009C                     	return
  5183  009C  0008               	opt stack 0
  5184                           GLOBAL	__end_of_resetFIFO
  5185                           	__end_of_resetFIFO:
  5186  009D                     	signat	_resetFIFO,89
  5187                           	global	_delFIFO
  5188                           
  5189 ;; *************** function _delFIFO *****************
  5190 ;; Defined at:
  5191 ;;		line 47 in file "fifo.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  n               1    wreg     unsigned char 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  n               1    1[COMMON] unsigned char 
  5196 ;;  ret             1    2[COMMON] unsigned char 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      unsigned char 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5206 ;;      Params:         0       0       0       0       0
  5207 ;;      Locals:         2       0       0       0       0
  5208 ;;      Temps:          1       0       0       0       0
  5209 ;;      Totals:         3       0       0       0       0
  5210 ;;Total ram usage:        3 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_resetFIFO
  5216 ;;		_main
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5220                           	line	47
  5221                           global __ptext11
  5222                           __ptext11:	;psect for function _delFIFO
  5223  011F                     psect	text11
  5224                           	file	"fifo.c"
  5225                           	line	47
  5226                           	global	__size_of_delFIFO
  5227                           	__size_of_delFIFO	equ	__end_of_delFIFO-_delFIFO
  5228  0021                     	
  5229                           _delFIFO:	
  5230  011F                     ;incstack = 0
  5231                           	opt	stack 6
  5232                           ; Regs used in _delFIFO: [wreg-fsr0h+status,2+status,0]
  5233                           ;delFIFO@n stored from wreg
  5234                           	movwf	(delFIFO@n)
  5235  011F  00F1               	line	50
  5236                           	
  5237                           l1625:	
  5238  0120                     ;fifo.c: 47: unsigned char delFIFO( unsigned char n );fifo.c: 48: {;fifo.c: 49:     unsi
                                 gned char ret;;fifo.c: 50:     while( n && fifoHead )
  5239                           	goto	l22
  5240  0120  2931               	
  5241                           l23:	
  5242  0121                     	line	52
  5243                           	
  5244                           l1627:	
  5245  0121                     ;fifo.c: 51:     {;fifo.c: 52:         --fifoHead;
  5246                           	movlw	01h
  5247  0121  3001               	subwf	(_fifoHead),f
  5248  0122  02FD               	line	53
  5249                           	
  5250                           l1629:	
  5251  0123                     ;fifo.c: 53:         ret = fifo[fifoHead];
  5252                           	movf	(_fifoHead),w
  5253  0123  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5254  0124  3E26               	movwf	fsr0
  5255  0125  0084               	bcf	status, 7	;select IRP bank0
  5256  0126  1383               	movf	indf,w
  5257  0127  0800               	movwf	(??_delFIFO+0)+0
  5258  0128  00F0               	movf	(??_delFIFO+0)+0,w
  5259  0129  0870               	movwf	(delFIFO@ret)
  5260  012A  00F2               	line	54
  5261                           	
  5262                           l1631:	
  5263  012B                     ;fifo.c: 54:         fifo[ fifoHead ] = 0;
  5264                           	movf	(_fifoHead),w
  5265  012B  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5266  012C  3E26               	movwf	fsr0
  5267  012D  0084               	clrf	indf
  5268  012E  0180               	line	55
  5269                           ;fifo.c: 55:         --n;
  5270                           	movlw	01h
  5271  012F  3001               	subwf	(delFIFO@n),f
  5272  0130  02F1               	line	56
  5273                           ;fifo.c: 56:     }
  5274                           	
  5275                           l22:	
  5276  0131                     	line	50
  5277                           ;fifo.c: 50:     while( n && fifoHead )
  5278                           	movf	((delFIFO@n)),w
  5279  0131  0871               	btfsc	status,2
  5280  0132  1903               	goto	u671
  5281  0133  2935               	goto	u670
  5282  0134  2936               u671:
  5283  0135                     	goto	l1635
  5284  0135  293D               u670:
  5285  0136                     	
  5286                           l1633:	
  5287  0136                     	movf	((_fifoHead)),w
  5288  0136  087D               	btfss	status,2
  5289  0137  1D03               	goto	u681
  5290  0138  293A               	goto	u680
  5291  0139  293B               u681:
  5292  013A                     	goto	l1627
  5293  013A  2921               u680:
  5294  013B                     	goto	l1635
  5295  013B  293D               	
  5296                           l25:	
  5297  013C                     	goto	l1635
  5298  013C  293D               	
  5299                           l26:	
  5300  013D                     	line	57
  5301                           	
  5302                           l1635:	
  5303  013D                     ;fifo.c: 57:     return( ret );
  5304                           	movf	(delFIFO@ret),w
  5305  013D  0872               	goto	l27
  5306  013E  293F               	
  5307                           l1637:	
  5308  013F                     	line	58
  5309                           	
  5310                           l27:	
  5311  013F                     	return
  5312  013F  0008               	opt stack 0
  5313                           GLOBAL	__end_of_delFIFO
  5314                           	__end_of_delFIFO:
  5315  0140                     	signat	_delFIFO,4217
  5316                           	global	_putFIFO
  5317                           
  5318 ;; *************** function _putFIFO *****************
  5319 ;; Defined at:
  5320 ;;		line 19 in file "fifo.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  c               1    wreg     unsigned char 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  c               1    1[COMMON] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5334 ;;      Params:         0       0       0       0       0
  5335 ;;      Locals:         1       0       0       0       0
  5336 ;;      Temps:          1       0       0       0       0
  5337 ;;      Totals:         2       0       0       0       0
  5338 ;;Total ram usage:        2 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_main
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5347                           	line	19
  5348                           global __ptext12
  5349                           __ptext12:	;psect for function _putFIFO
  5350  00A9                     psect	text12
  5351                           	file	"fifo.c"
  5352                           	line	19
  5353                           	global	__size_of_putFIFO
  5354                           	__size_of_putFIFO	equ	__end_of_putFIFO-_putFIFO
  5355  000E                     	
  5356                           _putFIFO:	
  5357  00A9                     ;incstack = 0
  5358                           	opt	stack 7
  5359                           ; Regs used in _putFIFO: [wreg-fsr0h+status,2+status,0]
  5360                           ;putFIFO@c stored from wreg
  5361                           	movwf	(putFIFO@c)
  5362  00A9  00F1               	line	21
  5363                           	
  5364                           l1671:	
  5365  00AA                     ;fifo.c: 19: void putFIFO( unsigned char c );fifo.c: 20: {;fifo.c: 21:     fifo[ fifoHea
                                 d ] = c;
  5366                           	movf	(putFIFO@c),w
  5367  00AA  0871               	movwf	(??_putFIFO+0)+0
  5368  00AB  00F0               	movf	(_fifoHead),w
  5369  00AC  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5370  00AD  3E26               	movwf	fsr0
  5371  00AE  0084               	movf	(??_putFIFO+0)+0,w
  5372  00AF  0870               	bcf	status, 7	;select IRP bank0
  5373  00B0  1383               	movwf	indf
  5374  00B1  0080               	line	22
  5375                           	
  5376                           l1673:	
  5377  00B2                     ;fifo.c: 22:     ++fifoHead;
  5378                           	movlw	low(01h)
  5379  00B2  3001               	movwf	(??_putFIFO+0)+0
  5380  00B3  00F0               	movf	(??_putFIFO+0)+0,w
  5381  00B4  0870               	addwf	(_fifoHead),f
  5382  00B5  07FD               	line	23
  5383                           	
  5384                           l9:	
  5385  00B6                     	return
  5386  00B6  0008               	opt stack 0
  5387                           GLOBAL	__end_of_putFIFO
  5388                           	__end_of_putFIFO:
  5389  00B7                     	signat	_putFIFO,4217
  5390                           	global	_previousKey
  5391                           
  5392 ;; *************** function _previousKey *****************
  5393 ;; Defined at:
  5394 ;;		line 55 in file "keyboard.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      unsigned char 
  5401 ;; Registers used:
  5402 ;;		wreg
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5408 ;;      Params:         0       0       0       0       0
  5409 ;;      Locals:         0       0       0       0       0
  5410 ;;      Temps:          0       0       0       0       0
  5411 ;;      Totals:         0       0       0       0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; This function calls:
  5415 ;;		Nothing
  5416 ;; This function is called by:
  5417 ;;		_main
  5418 ;; This function uses a non-reentrant model
  5419 ;;
  5420                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5421                           	file	"keyboard.c"
  5422                           	line	55
  5423                           global __ptext13
  5424                           __ptext13:	;psect for function _previousKey
  5425  0079                     psect	text13
  5426                           	file	"keyboard.c"
  5427                           	line	55
  5428                           	global	__size_of_previousKey
  5429                           	__size_of_previousKey	equ	__end_of_previousKey-_previousKey
  5430  0005                     	
  5431                           _previousKey:	
  5432  0079                     ;incstack = 0
  5433                           	opt	stack 7
  5434                           ; Regs used in _previousKey: [wreg]
  5435                           	line	57
  5436                           	
  5437                           l1697:	
  5438  0079                     ;keyboard.c: 57:     return( prevKey );
  5439                           	bcf	status, 5	;RP0=0, select bank0
  5440  0079  1283               	bcf	status, 6	;RP1=0, select bank0
  5441  007A  1303               	movf	(_prevKey),w
  5442  007B  0824               	goto	l51
  5443  007C  287D               	
  5444                           l1699:	
  5445  007D                     	line	58
  5446                           	
  5447                           l51:	
  5448  007D                     	return
  5449  007D  0008               	opt stack 0
  5450                           GLOBAL	__end_of_previousKey
  5451                           	__end_of_previousKey:
  5452  007E                     	signat	_previousKey,89
  5453                           	global	_keyboardScan
  5454                           
  5455 ;; *************** function _keyboardScan *****************
  5456 ;; Defined at:
  5457 ;;		line 75 in file "keyboard.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  j               1   10[COMMON] unsigned char 
  5462 ;;  i               1    9[COMMON] unsigned char 
  5463 ;;  aux             1    8[COMMON] unsigned char 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  1    wreg      unsigned char 
  5466 ;; Registers used:
  5467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5473 ;;      Params:         0       0       0       0       0
  5474 ;;      Locals:         3       0       0       0       0
  5475 ;;      Temps:          8       0       0       0       0
  5476 ;;      Totals:        11       0       0       0       0
  5477 ;;Total ram usage:       11 bytes
  5478 ;; Hardware stack levels used:    2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_main
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5486                           	line	75
  5487                           global __ptext14
  5488                           __ptext14:	;psect for function _keyboardScan
  5489  031B                     psect	text14
  5490                           	file	"keyboard.c"
  5491                           	line	75
  5492                           	global	__size_of_keyboardScan
  5493                           	__size_of_keyboardScan	equ	__end_of_keyboardScan-_keyboardScan
  5494  007F                     	
  5495                           _keyboardScan:	
  5496  031B                     ;incstack = 0
  5497                           	opt	stack 6
  5498                           ; Regs used in _keyboardScan: [wreg-fsr0h+status,2+status,0+pclath]
  5499                           	line	78
  5500                           	
  5501                           l1705:	
  5502  031B                     ;keyboard.c: 77:     unsigned char i, j;;keyboard.c: 78:     unsigned char aux = 0;
  5503                           	clrf	(keyboardScan@aux)
  5504  031B  01F8               	line	80
  5505                           ;keyboard.c: 80:     for( j=0; j<4; j++ )
  5506                           	clrf	(keyboardScan@j)
  5507  031C  01FA               	
  5508                           l1707:	
  5509  031D                     	movlw	low(04h)
  5510  031D  3004               	subwf	(keyboardScan@j),w
  5511  031E  027A               	skipc
  5512  031F  1C03               	goto	u741
  5513  0320  2B22               	goto	u740
  5514  0321  2B23               u741:
  5515  0322                     	goto	l1711
  5516  0322  2B25               u740:
  5517  0323                     	goto	l1731
  5518  0323  2B8E               	
  5519                           l1709:	
  5520  0324                     	goto	l1731
  5521  0324  2B8E               	
  5522                           l57:	
  5523  0325                     	line	82
  5524                           	
  5525                           l1711:	
  5526  0325                     ;keyboard.c: 81:     {;keyboard.c: 82:         KEYBOARDbits.cols = ~(0x01<<j);
  5527                           	movlw	low(01h)
  5528  0325  3001               	movwf	(??_keyboardScan+0)+0
  5529  0326  00F0               	incf	(keyboardScan@j),w
  5530  0327  0A7A               	goto	u754
  5531  0328  2B2B               u755:
  5532  0329                     	clrc
  5533  0329  1003               	rlf	(??_keyboardScan+0)+0,f
  5534  032A  0DF0               u754:
  5535  032B                     	addlw	-1
  5536  032B  3EFF               	skipz
  5537  032C  1D03               	goto	u755
  5538  032D  2B29               	movf	0+(??_keyboardScan+0)+0,w
  5539  032E  0870               	xorlw	0ffh
  5540  032F  3AFF               	movwf	(??_keyboardScan+1)+0
  5541  0330  00F1               	swapf	(??_keyboardScan+1)+0,f
  5542  0331  0EF1               	bcf	status, 5	;RP0=0, select bank0
  5543  0332  1283               	bcf	status, 6	;RP1=0, select bank0
  5544  0333  1303               	movf	(6),w	;volatile
  5545  0334  0806               	xorwf	(??_keyboardScan+1)+0,w
  5546  0335  0671               	andlw	not (((1<<4)-1)<<4)
  5547  0336  390F               	xorwf	(??_keyboardScan+1)+0,w
  5548  0337  0671               	movwf	(6)	;volatile
  5549  0338  0086               	line	83
  5550                           	
  5551                           l1713:	
  5552  0339                     ;keyboard.c: 83:         for( i=0; i<4; i++ )
  5553                           	clrf	(keyboardScan@i)
  5554  0339  01F9               	
  5555                           l1715:	
  5556  033A                     	movlw	low(04h)
  5557  033A  3004               	subwf	(keyboardScan@i),w
  5558  033B  0279               	skipc
  5559  033C  1C03               	goto	u761
  5560  033D  2B3F               	goto	u760
  5561  033E  2B40               u761:
  5562  033F                     	goto	l1719
  5563  033F  2B42               u760:
  5564  0340                     	goto	l1727
  5565  0340  2B83               	
  5566                           l1717:	
  5567  0341                     	goto	l1727
  5568  0341  2B83               	
  5569                           l59:	
  5570  0342                     	line	85
  5571                           	
  5572                           l1719:	
  5573  0342                     ;keyboard.c: 84:         {;keyboard.c: 85:             if( ~KEYBOARDbits.rows & (0x01<<i
                                 ) )
  5574                           	movf	(6),w	;volatile
  5575  0342  0806               	andlw	(1<<4)-1
  5576  0343  390F               	movwf	(??_keyboardScan+0)+0
  5577  0344  00F0               	comf	(??_keyboardScan+0)+0,w
  5578  0345  0970               	movwf	(??_keyboardScan+1)+0
  5579  0346  00F1               	clrf	(??_keyboardScan+1)+0+1
  5580  0347  01F2               	comf	(??_keyboardScan+1)+0+1
  5581  0348  09F2               	incf	(keyboardScan@i),w
  5582  0349  0A79               	movwf	(??_keyboardScan+3)+0
  5583  034A  00F3               	movlw	01h
  5584  034B  3001               	movwf	(??_keyboardScan+4)+0
  5585  034C  00F4               	movlw	0
  5586  034D  3000               	movwf	(??_keyboardScan+4)+0+1
  5587  034E  00F5               	goto	u774
  5588  034F  2B53               u775:
  5589  0350                     	clrc
  5590  0350  1003               	rlf	(??_keyboardScan+4)+0,f
  5591  0351  0DF4               	rlf	(??_keyboardScan+4)+1,f
  5592  0352  0DF5               u774:
  5593  0353                     	decfsz	(??_keyboardScan+3)+0,f
  5594  0353  0BF3               	goto	u775
  5595  0354  2B50               	
  5596                           	movf	0+(??_keyboardScan+1)+0,w
  5597  0355  0871               	andwf	0+(??_keyboardScan+4)+0,w
  5598  0356  0574               	movwf	(??_keyboardScan+6)+0
  5599  0357  00F6               	movf	1+(??_keyboardScan+1)+0,w
  5600  0358  0872               	andwf	1+(??_keyboardScan+4)+0,w
  5601  0359  0575               	movwf	1+(??_keyboardScan+6)+0
  5602  035A  00F7               	movf	((??_keyboardScan+6)+0),w
  5603  035B  0876               iorwf	((??_keyboardScan+6)+1),w
  5604  035C  0477               	btfsc	status,2
  5605  035D  1903               	goto	u781
  5606  035E  2B60               	goto	u780
  5607  035F  2B61               u781:
  5608  0360                     	goto	l1723
  5609  0360  2B78               u780:
  5610  0361                     	line	86
  5611                           	
  5612                           l1721:	
  5613  0361                     ;keyboard.c: 86:                 aux = keyboardMatrix[i][j];
  5614                           	movf	(keyboardScan@i),w
  5615  0361  0879               	movwf	(??_keyboardScan+0)+0
  5616  0362  00F0               	movlw	02h
  5617  0363  3002               u795:
  5618  0364                     	clrc
  5619  0364  1003               	rlf	(??_keyboardScan+0)+0,f
  5620  0365  0DF0               	addlw	-1
  5621  0366  3EFF               	skipz
  5622  0367  1D03               	goto	u795
  5623  0368  2B64               	movlw	(low((((_keyboardMatrix)-__stringbase)|8000h)))&0ffh
  5624  0369  3001               	addwf	0+(??_keyboardScan+0)+0,w
  5625  036A  0770               	movwf	(??_keyboardScan+1)+0
  5626  036B  00F1               	movf	(keyboardScan@j),w
  5627  036C  087A               	addwf	0+(??_keyboardScan+1)+0,w
  5628  036D  0771               	movwf	fsr0
  5629  036E  0084               	fcall	stringdir
  5630  036F  120A  118A  200D  120A  118A  	movwf	(??_keyboardScan+2)+0
  5631  0374  00F2               	movf	(??_keyboardScan+2)+0,w
  5632  0375  0872               	movwf	(keyboardScan@aux)
  5633  0376  00F8               	goto	l1723
  5634  0377  2B78               	
  5635                           l61:	
  5636  0378                     	line	87
  5637                           	
  5638                           l1723:	
  5639  0378                     ;keyboard.c: 87:         }
  5640                           	movlw	low(01h)
  5641  0378  3001               	movwf	(??_keyboardScan+0)+0
  5642  0379  00F0               	movf	(??_keyboardScan+0)+0,w
  5643  037A  0870               	addwf	(keyboardScan@i),f
  5644  037B  07F9               	
  5645                           l1725:	
  5646  037C                     	movlw	low(04h)
  5647  037C  3004               	subwf	(keyboardScan@i),w
  5648  037D  0279               	skipc
  5649  037E  1C03               	goto	u801
  5650  037F  2B81               	goto	u800
  5651  0380  2B82               u801:
  5652  0381                     	goto	l1719
  5653  0381  2B42               u800:
  5654  0382                     	goto	l1727
  5655  0382  2B83               	
  5656                           l60:	
  5657  0383                     	line	88
  5658                           	
  5659                           l1727:	
  5660  0383                     ;keyboard.c: 88:     }
  5661                           	movlw	low(01h)
  5662  0383  3001               	movwf	(??_keyboardScan+0)+0
  5663  0384  00F0               	movf	(??_keyboardScan+0)+0,w
  5664  0385  0870               	addwf	(keyboardScan@j),f
  5665  0386  07FA               	
  5666                           l1729:	
  5667  0387                     	movlw	low(04h)
  5668  0387  3004               	subwf	(keyboardScan@j),w
  5669  0388  027A               	skipc
  5670  0389  1C03               	goto	u811
  5671  038A  2B8C               	goto	u810
  5672  038B  2B8D               u811:
  5673  038C                     	goto	l1711
  5674  038C  2B25               u810:
  5675  038D                     	goto	l1731
  5676  038D  2B8E               	
  5677                           l58:	
  5678  038E                     	line	90
  5679                           	
  5680                           l1731:	
  5681  038E                     ;keyboard.c: 90:     prevKey = currKey;
  5682                           	bcf	status, 5	;RP0=0, select bank0
  5683  038E  1283               	bcf	status, 6	;RP1=0, select bank0
  5684  038F  1303               	movf	(_currKey),w
  5685  0390  0823               	movwf	(??_keyboardScan+0)+0
  5686  0391  00F0               	movf	(??_keyboardScan+0)+0,w
  5687  0392  0870               	movwf	(_prevKey)
  5688  0393  00A4               	line	91
  5689                           ;keyboard.c: 91:     currKey = aux;
  5690                           	movf	(keyboardScan@aux),w
  5691  0394  0878               	movwf	(??_keyboardScan+0)+0
  5692  0395  00F0               	movf	(??_keyboardScan+0)+0,w
  5693  0396  0870               	movwf	(_currKey)
  5694  0397  00A3               	goto	l62
  5695  0398  2B99               	line	93
  5696                           	
  5697                           l1733:	
  5698  0399                     	line	94
  5699                           ;keyboard.c: 93:     return( aux );;	Return value of _keyboardScan is never used
  5700                           	
  5701                           l62:	
  5702  0399                     	return
  5703  0399  0008               	opt stack 0
  5704                           GLOBAL	__end_of_keyboardScan
  5705                           	__end_of_keyboardScan:
  5706  039A                     	signat	_keyboardScan,89
  5707                           	global	_initSerialIO
  5708                           
  5709 ;; *************** function _initSerialIO *****************
  5710 ;; Defined at:
  5711 ;;		line 89 in file "serialIO.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  ptrIn           1    wreg     PTR unsigned char 
  5714 ;;		 -> main@sensor(1), 
  5715 ;;  ptrOut          1    0[COMMON] PTR unsigned char 
  5716 ;;		 -> main@atuador(1), 
  5717 ;;  length          1    1[COMMON] unsigned char 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  ptrIn           1    3[COMMON] PTR unsigned char 
  5720 ;;		 -> main@sensor(1), 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		wreg
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5730 ;;      Params:         2       0       0       0       0
  5731 ;;      Locals:         1       0       0       0       0
  5732 ;;      Temps:          1       0       0       0       0
  5733 ;;      Totals:         4       0       0       0       0
  5734 ;;Total ram usage:        4 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_main
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5743                           	file	"serialIO.c"
  5744                           	line	89
  5745                           global __ptext15
  5746                           __ptext15:	;psect for function _initSerialIO
  5747  019E                     psect	text15
  5748                           	file	"serialIO.c"
  5749                           	line	89
  5750                           	global	__size_of_initSerialIO
  5751                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
  5752  0034                     	
  5753                           _initSerialIO:	
  5754  019E                     ;incstack = 0
  5755                           	opt	stack 7
  5756                           ; Regs used in _initSerialIO: [wreg]
  5757                           ;initSerialIO@ptrIn stored from wreg
  5758                           	movwf	(initSerialIO@ptrIn)
  5759  019E  00F3               	line	91
  5760                           	
  5761                           l1781:	
  5762  019F                     ;serialIO.c: 89: void initSerialIO( unsigned char * ptrIn, unsigned char * ptrOut, unsig
                                 ned char length );serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  5763                           	movf	(initSerialIO@ptrIn),w
  5764  019F  0873               	movwf	(??_initSerialIO+0)+0
  5765  01A0  00F2               	movf	(??_initSerialIO+0)+0,w
  5766  01A1  0872               	bcf	status, 5	;RP0=0, select bank0
  5767  01A2  1283               	bcf	status, 6	;RP1=0, select bank0
  5768  01A3  1303               	movwf	(_ptrSerialIn)
  5769  01A4  00A2               	line	92
  5770                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  5771                           	movf	(initSerialIO@ptrOut),w
  5772  01A5  0870               	movwf	(??_initSerialIO+0)+0
  5773  01A6  00F2               	movf	(??_initSerialIO+0)+0,w
  5774  01A7  0872               	movwf	(_ptrSerialOut)
  5775  01A8  00A1               	line	93
  5776                           ;serialIO.c: 93:     lenSerialIO = length;
  5777                           	movf	(initSerialIO@length),w
  5778  01A9  0871               	movwf	(??_initSerialIO+0)+0
  5779  01AA  00F2               	movf	(??_initSerialIO+0)+0,w
  5780  01AB  0872               	movwf	(_lenSerialIO)
  5781  01AC  00A0               	line	95
  5782                           	
  5783                           l1783:	
  5784  01AD                     ;serialIO.c: 95:     PORTAbits.RA3 = 0;
  5785                           	bcf	(5),3	;volatile
  5786  01AD  1185               	line	96
  5787                           	
  5788                           l1785:	
  5789  01AE                     ;serialIO.c: 96:     ANSELbits.ANS3 = 0;
  5790                           	bsf	status, 5	;RP0=1, select bank3
  5791  01AE  1683               	bsf	status, 6	;RP1=1, select bank3
  5792  01AF  1703               	bcf	(392)^0180h,3	;volatile
  5793  01B0  1188               	line	97
  5794                           	
  5795                           l1787:	
  5796  01B1                     ;serialIO.c: 97:     TRISAbits.TRISA3 = 0;
  5797                           	bsf	status, 5	;RP0=1, select bank1
  5798  01B1  1683               	bcf	status, 6	;RP1=0, select bank1
  5799  01B2  1303               	bcf	(133)^080h,3	;volatile
  5800  01B3  1185               	line	100
  5801                           	
  5802                           l1789:	
  5803  01B4                     ;serialIO.c: 100:     PORTAbits.RA2 = 0;
  5804                           	bcf	status, 5	;RP0=0, select bank0
  5805  01B4  1283               	bcf	status, 6	;RP1=0, select bank0
  5806  01B5  1303               	bcf	(5),2	;volatile
  5807  01B6  1105               	line	101
  5808                           	
  5809                           l1791:	
  5810  01B7                     ;serialIO.c: 101:     ANSELbits.ANS2 = 0;
  5811                           	bsf	status, 5	;RP0=1, select bank3
  5812  01B7  1683               	bsf	status, 6	;RP1=1, select bank3
  5813  01B8  1703               	bcf	(392)^0180h,2	;volatile
  5814  01B9  1108               	line	102
  5815                           	
  5816                           l1793:	
  5817  01BA                     ;serialIO.c: 102:     TRISAbits.TRISA2 = 0;
  5818                           	bsf	status, 5	;RP0=1, select bank1
  5819  01BA  1683               	bcf	status, 6	;RP1=0, select bank1
  5820  01BB  1303               	bcf	(133)^080h,2	;volatile
  5821  01BC  1105               	line	105
  5822                           	
  5823                           l1795:	
  5824  01BD                     ;serialIO.c: 105:     PORTAbits.RA0 = 0;
  5825                           	bcf	status, 5	;RP0=0, select bank0
  5826  01BD  1283               	bcf	status, 6	;RP1=0, select bank0
  5827  01BE  1303               	bcf	(5),0	;volatile
  5828  01BF  1005               	line	106
  5829                           	
  5830                           l1797:	
  5831  01C0                     ;serialIO.c: 106:     ANSELbits.ANS0 = 0;
  5832                           	bsf	status, 5	;RP0=1, select bank3
  5833  01C0  1683               	bsf	status, 6	;RP1=1, select bank3
  5834  01C1  1703               	bcf	(392)^0180h,0	;volatile
  5835  01C2  1008               	line	107
  5836                           	
  5837                           l1799:	
  5838  01C3                     ;serialIO.c: 107:     TRISAbits.TRISA0 = 0;
  5839                           	bsf	status, 5	;RP0=1, select bank1
  5840  01C3  1683               	bcf	status, 6	;RP1=0, select bank1
  5841  01C4  1303               	bcf	(133)^080h,0	;volatile
  5842  01C5  1005               	line	110
  5843                           	
  5844                           l1801:	
  5845  01C6                     ;serialIO.c: 110:     ANSELbits.ANS1 = 0;
  5846                           	bsf	status, 5	;RP0=1, select bank3
  5847  01C6  1683               	bsf	status, 6	;RP1=1, select bank3
  5848  01C7  1703               	bcf	(392)^0180h,1	;volatile
  5849  01C8  1088               	line	111
  5850                           	
  5851                           l1803:	
  5852  01C9                     ;serialIO.c: 111:     TRISAbits.TRISA1 = 1;
  5853                           	bsf	status, 5	;RP0=1, select bank1
  5854  01C9  1683               	bcf	status, 6	;RP1=0, select bank1
  5855  01CA  1303               	bsf	(133)^080h,1	;volatile
  5856  01CB  1485               	line	115
  5857                           	
  5858                           l1805:	
  5859  01CC                     ;serialIO.c: 115:     SERIALIO.CLK = 0;
  5860                           	bcf	status, 5	;RP0=0, select bank0
  5861  01CC  1283               	bcf	status, 6	;RP1=0, select bank0
  5862  01CD  1303               	bcf	(5),2	;volatile
  5863  01CE  1105               	line	116
  5864                           	
  5865                           l1807:	
  5866  01CF                     ;serialIO.c: 116:     SERIALIO.OUT = 0;
  5867                           	bcf	(5),0	;volatile
  5868  01CF  1005               	line	117
  5869                           	
  5870                           l1809:	
  5871  01D0                     ;serialIO.c: 117:     SERIALIO.SHLD = 1;
  5872                           	bsf	(5),3	;volatile
  5873  01D0  1585               	line	120
  5874                           	
  5875                           l326:	
  5876  01D1                     	return
  5877  01D1  0008               	opt stack 0
  5878                           GLOBAL	__end_of_initSerialIO
  5879                           	__end_of_initSerialIO:
  5880  01D2                     	signat	_initSerialIO,12409
  5881                           	global	_initLCD
  5882                           
  5883 ;; *************** function _initLCD *****************
  5884 ;; Defined at:
  5885 ;;		line 20 in file "lcd.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;		None
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0, pclath, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5899 ;;      Params:         0       0       0       0       0
  5900 ;;      Locals:         0       0       0       0       0
  5901 ;;      Temps:          2       0       0       0       0
  5902 ;;      Totals:         2       0       0       0       0
  5903 ;;Total ram usage:        2 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    1
  5906 ;; This function calls:
  5907 ;;		_cmdLCD
  5908 ;; This function is called by:
  5909 ;;		_main
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5913                           	file	"lcd.c"
  5914                           	line	20
  5915                           global __ptext16
  5916                           __ptext16:	;psect for function _initLCD
  5917  027D                     psect	text16
  5918                           	file	"lcd.c"
  5919                           	line	20
  5920                           	global	__size_of_initLCD
  5921                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5922  003F                     	
  5923                           _initLCD:	
  5924  027D                     ;incstack = 0
  5925                           	opt	stack 6
  5926                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5927                           	line	22
  5928                           	
  5929                           l1749:	
  5930  027D                     ;lcd.c: 22:         LCD.B0 = 0;
  5931                           	bcf	status, 5	;RP0=0, select bank0
  5932  027D  1283               	bcf	status, 6	;RP1=0, select bank0
  5933  027E  1303               	bcf	(8),6	;volatile
  5934  027F  1308               	line	23
  5935                           ;lcd.c: 23:         LCD.B1 = 0;
  5936                           	bcf	(8),7	;volatile
  5937  0280  1388               	line	24
  5938                           ;lcd.c: 24:         LCD.RS = 0;
  5939                           	bcf	(8),4	;volatile
  5940  0281  1208               	line	25
  5941                           	
  5942                           l1751:	
  5943  0282                     ;lcd.c: 25:         LCD.BUS = 0x3;
  5944                           	movf	(8),w	;volatile
  5945  0282  0808               	andlw	not (((1<<4)-1)<<0)
  5946  0283  39F0               	iorlw	(03h & ((1<<4)-1))<<0
  5947  0284  3803               	movwf	(8)	;volatile
  5948  0285  0088               	line	26
  5949                           	
  5950                           l1753:	
  5951  0286                     ;lcd.c: 26:         LCD.EN = 1;
  5952                           	bsf	(8),5	;volatile
  5953  0286  1688               	line	27
  5954                           	
  5955                           l1755:	
  5956  0287                     ;lcd.c: 27:         TRISD = 0xC0;
  5957                           	movlw	low(0C0h)
  5958  0287  30C0               	bsf	status, 5	;RP0=1, select bank1
  5959  0288  1683               	bcf	status, 6	;RP1=0, select bank1
  5960  0289  1303               	movwf	(136)^080h	;volatile
  5961  028A  0088               	line	29
  5962                           	
  5963                           l1757:	
  5964  028B                     ;lcd.c: 29:         _delay((unsigned long)((100)*(4000000/4000.0)));
  5965                           	opt asmopt_push
  5966                           opt asmopt_off
  5967                           movlw	130
  5968  028B  3082               movwf	((??_initLCD+0)+0+1),f
  5969  028C  00F5               	movlw	221
  5970  028D  30DD               movwf	((??_initLCD+0)+0),f
  5971  028E  00F4               	u1347:
  5972  028F                     decfsz	((??_initLCD+0)+0),f
  5973  028F  0BF4               	goto	u1347
  5974  0290  2A8F               	decfsz	((??_initLCD+0)+0+1),f
  5975  0291  0BF5               	goto	u1347
  5976  0292  2A8F               	nop2
  5977  0293  2A94               opt asmopt_pop
  5978                           
  5979                           	line	31
  5980                           	
  5981                           l1759:	
  5982  0294                     ;lcd.c: 31:         cmdLCD(0x20);
  5983                           	movlw	low(020h)
  5984  0294  3020               	fcall	_cmdLCD
  5985  0295  120A  118A  22BC  120A  118A  	line	32
  5986                           	
  5987                           l1761:	
  5988  029A                     ;lcd.c: 32:         cmdLCD(0x28);
  5989                           	movlw	low(028h)
  5990  029A  3028               	fcall	_cmdLCD
  5991  029B  120A  118A  22BC  120A  118A  	line	33
  5992                           	
  5993                           l1763:	
  5994  02A0                     ;lcd.c: 33:         cmdLCD(0x0C);
  5995                           	movlw	low(0Ch)
  5996  02A0  300C               	fcall	_cmdLCD
  5997  02A1  120A  118A  22BC  120A  118A  	line	34
  5998                           	
  5999                           l1765:	
  6000  02A6                     ;lcd.c: 34:         cmdLCD(0x01);
  6001                           	movlw	low(01h)
  6002  02A6  3001               	fcall	_cmdLCD
  6003  02A7  120A  118A  22BC  120A  118A  	line	35
  6004                           	
  6005                           l1767:	
  6006  02AC                     ;lcd.c: 35:         cmdLCD(0x02);
  6007                           	movlw	low(02h)
  6008  02AC  3002               	fcall	_cmdLCD
  6009  02AD  120A  118A  22BC  120A  118A  	line	37
  6010                           	
  6011                           l1769:	
  6012  02B2                     ;lcd.c: 37:         _delay((unsigned long)((100)*(4000000/4000.0)));
  6013                           	opt asmopt_push
  6014                           opt asmopt_off
  6015                           movlw	130
  6016  02B2  3082               movwf	((??_initLCD+0)+0+1),f
  6017  02B3  00F5               	movlw	221
  6018  02B4  30DD               movwf	((??_initLCD+0)+0),f
  6019  02B5  00F4               	u1357:
  6020  02B6                     decfsz	((??_initLCD+0)+0),f
  6021  02B6  0BF4               	goto	u1357
  6022  02B7  2AB6               	decfsz	((??_initLCD+0)+0+1),f
  6023  02B8  0BF5               	goto	u1357
  6024  02B9  2AB6               	nop2
  6025  02BA  2ABB               opt asmopt_pop
  6026                           
  6027                           	line	38
  6028                           	
  6029                           l82:	
  6030  02BB                     	return
  6031  02BB  0008               	opt stack 0
  6032                           GLOBAL	__end_of_initLCD
  6033                           	__end_of_initLCD:
  6034  02BC                     	signat	_initLCD,89
  6035                           	global	_cmdLCD
  6036                           
  6037 ;; *************** function _cmdLCD *****************
  6038 ;; Defined at:
  6039 ;;		line 40 in file "lcd.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  cmd             1    wreg     unsigned char 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  cmd             1    2[COMMON] unsigned char 
  6044 ;;  nibble          1    3[COMMON] volatile struct .
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6054 ;;      Params:         0       0       0       0       0
  6055 ;;      Locals:         2       0       0       0       0
  6056 ;;      Temps:          2       0       0       0       0
  6057 ;;      Totals:         4       0       0       0       0
  6058 ;;Total ram usage:        4 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_initLCD
  6064 ;;		_gotoxy
  6065 ;;		_clearLCD
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6069                           	line	40
  6070                           global __ptext17
  6071                           __ptext17:	;psect for function _cmdLCD
  6072  02BC                     psect	text17
  6073                           	file	"lcd.c"
  6074                           	line	40
  6075                           	global	__size_of_cmdLCD
  6076                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  6077  005F                     	
  6078                           _cmdLCD:	
  6079  02BC                     ;incstack = 0
  6080                           	opt	stack 5
  6081                           ; Regs used in _cmdLCD: [wreg+status,2+status,0]
  6082                           ;cmdLCD@cmd stored from wreg
  6083                           	movwf	(cmdLCD@cmd)
  6084  02BC  00F2               	line	44
  6085                           	
  6086                           l1569:	
  6087  02BD                     ;lcd.c: 40: void cmdLCD( unsigned char cmd );lcd.c: 41: {;lcd.c: 42:         volatile RE
                                 Gnibble_t nibble;;lcd.c: 44:         nibble.HILO = cmd;
  6088                           	movf	(cmdLCD@cmd),w
  6089  02BD  0872               	movwf	(??_cmdLCD+0)+0
  6090  02BE  00F0               	movf	(??_cmdLCD+0)+0,w
  6091  02BF  0870               	movwf	(cmdLCD@nibble)	;volatile
  6092  02C0  00F3               	line	45
  6093                           	
  6094                           l1571:	
  6095  02C1                     ;lcd.c: 45:         LCD.RS = 0;
  6096                           	bcf	status, 5	;RP0=0, select bank0
  6097  02C1  1283               	bcf	status, 6	;RP1=0, select bank0
  6098  02C2  1303               	bcf	(8),4	;volatile
  6099  02C3  1208               	line	46
  6100                           	
  6101                           l1573:	
  6102  02C4                     ;lcd.c: 46:         LCD.BUS = nibble.HI ;
  6103                           	swapf	(cmdLCD@nibble),w	;volatile
  6104  02C4  0E73               	andlw	(1<<4)-1
  6105  02C5  390F               	movwf	(??_cmdLCD+0)+0
  6106  02C6  00F0               	movf	(8),w	;volatile
  6107  02C7  0808               	xorwf	(??_cmdLCD+0)+0,w
  6108  02C8  0670               	andlw	not ((1<<4)-1)
  6109  02C9  39F0               	xorwf	(??_cmdLCD+0)+0,w
  6110  02CA  0670               	movwf	(8)	;volatile
  6111  02CB  0088               	line	47
  6112                           	
  6113                           l1575:	
  6114  02CC                     ;lcd.c: 47:          LCD.EN = 0;
  6115                           	bcf	(8),5	;volatile
  6116  02CC  1288               	line	48
  6117                           	
  6118                           l1577:	
  6119  02CD                     ;lcd.c: 48:         if( cmd == 0x01 || cmd == 0x02 )
  6120                           		decf	((cmdLCD@cmd)),w
  6121  02CD  0372               	btfsc	status,2
  6122  02CE  1903               	goto	u611
  6123  02CF  2AD1               	goto	u610
  6124  02D0  2AD2               u611:
  6125  02D1                     	goto	l1581
  6126  02D1  2AD9               u610:
  6127  02D2                     	
  6128                           l1579:	
  6129  02D2                     		movlw	2
  6130  02D2  3002               	xorwf	((cmdLCD@cmd)),w
  6131  02D3  0672               	btfss	status,2
  6132  02D4  1D03               	goto	u621
  6133  02D5  2AD7               	goto	u620
  6134  02D6  2AD8               u621:
  6135  02D7                     	goto	l1583
  6136  02D7  2AE3               u620:
  6137  02D8                     	goto	l1581
  6138  02D8  2AD9               	
  6139                           l87:	
  6140  02D9                     	line	49
  6141                           	
  6142                           l1581:	
  6143  02D9                     ;lcd.c: 49:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6144                           	opt asmopt_push
  6145                           opt asmopt_off
  6146                           movlw	3
  6147  02D9  3003               movwf	((??_cmdLCD+0)+0+1),f
  6148  02DA  00F1               	movlw	151
  6149  02DB  3097               movwf	((??_cmdLCD+0)+0),f
  6150  02DC  00F0               	u1367:
  6151  02DD                     decfsz	((??_cmdLCD+0)+0),f
  6152  02DD  0BF0               	goto	u1367
  6153  02DE  2ADD               	decfsz	((??_cmdLCD+0)+0+1),f
  6154  02DF  0BF1               	goto	u1367
  6155  02E0  2ADD               	nop2
  6156  02E1  2AE2               opt asmopt_pop
  6157                           
  6158                           	goto	l1585
  6159  02E2  2AE8               	line	50
  6160                           ;lcd.c: 50:         else
  6161                           	
  6162                           l85:	
  6163  02E3                     	line	51
  6164                           	
  6165                           l1583:	
  6166  02E3                     ;lcd.c: 51:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  6167                           	opt asmopt_push
  6168                           opt asmopt_off
  6169                           	movlw	13
  6170  02E3  300D               movwf	((??_cmdLCD+0)+0),f
  6171  02E4  00F0               	u1377:
  6172  02E5                     decfsz	(??_cmdLCD+0)+0,f
  6173  02E5  0BF0               	goto	u1377
  6174  02E6  2AE5               opt asmopt_pop
  6175                           
  6176                           	goto	l1585
  6177  02E7  2AE8               	
  6178                           l88:	
  6179  02E8                     	line	52
  6180                           	
  6181                           l1585:	
  6182  02E8                     ;lcd.c: 52:         LCD.EN = 1;
  6183                           	bcf	status, 5	;RP0=0, select bank0
  6184  02E8  1283               	bcf	status, 6	;RP1=0, select bank0
  6185  02E9  1303               	bsf	(8),5	;volatile
  6186  02EA  1688               	line	54
  6187                           	
  6188                           l1587:	
  6189  02EB                     ;lcd.c: 54:         if( cmd != (0x20) )
  6190                           		movlw	32
  6191  02EB  3020               	xorwf	((cmdLCD@cmd)),w
  6192  02EC  0672               	btfsc	status,2
  6193  02ED  1903               	goto	u631
  6194  02EE  2AF0               	goto	u630
  6195  02EF  2AF1               u631:
  6196  02F0                     	goto	l94
  6197  02F0  2B1A               u630:
  6198  02F1                     	line	56
  6199                           	
  6200                           l1589:	
  6201  02F1                     ;lcd.c: 55:     {;lcd.c: 56:        LCD.RS = 0;
  6202                           	bcf	(8),4	;volatile
  6203  02F1  1208               	line	57
  6204                           	
  6205                           l1591:	
  6206  02F2                     ;lcd.c: 57:        LCD.BUS = nibble.LO;
  6207                           	movf	(cmdLCD@nibble),w	;volatile
  6208  02F2  0873               	andlw	(1<<4)-1
  6209  02F3  390F               	movwf	(??_cmdLCD+0)+0
  6210  02F4  00F0               	movf	(8),w	;volatile
  6211  02F5  0808               	xorwf	(??_cmdLCD+0)+0,w
  6212  02F6  0670               	andlw	not ((1<<4)-1)
  6213  02F7  39F0               	xorwf	(??_cmdLCD+0)+0,w
  6214  02F8  0670               	movwf	(8)	;volatile
  6215  02F9  0088               	line	58
  6216                           	
  6217                           l1593:	
  6218  02FA                     ;lcd.c: 58:        LCD.EN = 0;
  6219                           	bcf	(8),5	;volatile
  6220  02FA  1288               	line	59
  6221                           ;lcd.c: 59:        if( cmd == 0x01 || cmd == 0x02 )
  6222                           		decf	((cmdLCD@cmd)),w
  6223  02FB  0372               	btfsc	status,2
  6224  02FC  1903               	goto	u641
  6225  02FD  2AFF               	goto	u640
  6226  02FE  2B00               u641:
  6227  02FF                     	goto	l1597
  6228  02FF  2B07               u640:
  6229  0300                     	
  6230                           l1595:	
  6231  0300                     		movlw	2
  6232  0300  3002               	xorwf	((cmdLCD@cmd)),w
  6233  0301  0672               	btfss	status,2
  6234  0302  1D03               	goto	u651
  6235  0303  2B05               	goto	u650
  6236  0304  2B06               u651:
  6237  0305                     	goto	l1599
  6238  0305  2B11               u650:
  6239  0306                     	goto	l1597
  6240  0306  2B07               	
  6241                           l92:	
  6242  0307                     	line	60
  6243                           	
  6244                           l1597:	
  6245  0307                     ;lcd.c: 60:             _delay((unsigned long)((2)*(4000000/4000.0)));
  6246                           	opt asmopt_push
  6247                           opt asmopt_off
  6248                           movlw	3
  6249  0307  3003               movwf	((??_cmdLCD+0)+0+1),f
  6250  0308  00F1               	movlw	151
  6251  0309  3097               movwf	((??_cmdLCD+0)+0),f
  6252  030A  00F0               	u1387:
  6253  030B                     decfsz	((??_cmdLCD+0)+0),f
  6254  030B  0BF0               	goto	u1387
  6255  030C  2B0B               	decfsz	((??_cmdLCD+0)+0+1),f
  6256  030D  0BF1               	goto	u1387
  6257  030E  2B0B               	nop2
  6258  030F  2B10               opt asmopt_pop
  6259                           
  6260                           	goto	l1601
  6261  0310  2B16               	line	61
  6262                           ;lcd.c: 61:        else
  6263                           	
  6264                           l90:	
  6265  0311                     	line	62
  6266                           	
  6267                           l1599:	
  6268  0311                     ;lcd.c: 62:             _delay((unsigned long)((40)*(4000000/4000000.0)));
  6269                           	opt asmopt_push
  6270                           opt asmopt_off
  6271                           	movlw	13
  6272  0311  300D               movwf	((??_cmdLCD+0)+0),f
  6273  0312  00F0               	u1397:
  6274  0313                     decfsz	(??_cmdLCD+0)+0,f
  6275  0313  0BF0               	goto	u1397
  6276  0314  2B13               opt asmopt_pop
  6277                           
  6278                           	goto	l1601
  6279  0315  2B16               	
  6280                           l93:	
  6281  0316                     	line	63
  6282                           	
  6283                           l1601:	
  6284  0316                     ;lcd.c: 63:        LCD.EN = 1;
  6285                           	bcf	status, 5	;RP0=0, select bank0
  6286  0316  1283               	bcf	status, 6	;RP1=0, select bank0
  6287  0317  1303               	bsf	(8),5	;volatile
  6288  0318  1688               	goto	l94
  6289  0319  2B1A               	line	64
  6290                           ;lcd.c: 64:     }
  6291                           	
  6292                           l89:	
  6293  031A                     	line	65
  6294                           	
  6295                           l94:	
  6296  031A                     	return
  6297  031A  0008               	opt stack 0
  6298                           GLOBAL	__end_of_cmdLCD
  6299                           	__end_of_cmdLCD:
  6300  031B                     	signat	_cmdLCD,4217
  6301                           	global	_initKeyboard
  6302                           
  6303 ;; *************** function _initKeyboard *****************
  6304 ;; Defined at:
  6305 ;;		line 103 in file "keyboard.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;		None
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;		None
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6319 ;;      Params:         0       0       0       0       0
  6320 ;;      Locals:         0       0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0
  6322 ;;      Totals:         0       0       0       0       0
  6323 ;;Total ram usage:        0 bytes
  6324 ;; Hardware stack levels used:    1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_main
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6332                           	file	"keyboard.c"
  6333                           	line	103
  6334                           global __ptext18
  6335                           __ptext18:	;psect for function _initKeyboard
  6336  00C8                     psect	text18
  6337                           	file	"keyboard.c"
  6338                           	line	103
  6339                           	global	__size_of_initKeyboard
  6340                           	__size_of_initKeyboard	equ	__end_of_initKeyboard-_initKeyboard
  6341  0013                     	
  6342                           _initKeyboard:	
  6343  00C8                     ;incstack = 0
  6344                           	opt	stack 7
  6345                           ; Regs used in _initKeyboard: [wreg+status,2]
  6346                           	line	105
  6347                           	
  6348                           l1735:	
  6349  00C8                     ;keyboard.c: 105:     PORTB = 0xFF;
  6350                           	movlw	low(0FFh)
  6351  00C8  30FF               	bcf	status, 5	;RP0=0, select bank0
  6352  00C9  1283               	bcf	status, 6	;RP1=0, select bank0
  6353  00CA  1303               	movwf	(6)	;volatile
  6354  00CB  0086               	line	106
  6355                           	
  6356                           l1737:	
  6357  00CC                     ;keyboard.c: 106:     ANSELH = 0;
  6358                           	bsf	status, 5	;RP0=1, select bank3
  6359  00CC  1683               	bsf	status, 6	;RP1=1, select bank3
  6360  00CD  1703               	clrf	(393)^0180h	;volatile
  6361  00CE  0189               	line	107
  6362                           	
  6363                           l1739:	
  6364  00CF                     ;keyboard.c: 107:     TRISB = 0x0F;
  6365                           	movlw	low(0Fh)
  6366  00CF  300F               	bsf	status, 5	;RP0=1, select bank1
  6367  00D0  1683               	bcf	status, 6	;RP1=0, select bank1
  6368  00D1  1303               	movwf	(134)^080h	;volatile
  6369  00D2  0086               	line	108
  6370                           	
  6371                           l1741:	
  6372  00D3                     ;keyboard.c: 108:     WPUB = 0xFF;
  6373                           	movlw	low(0FFh)
  6374  00D3  30FF               	movwf	(149)^080h	;volatile
  6375  00D4  0095               	line	109
  6376                           	
  6377                           l1743:	
  6378  00D5                     ;keyboard.c: 109:     OPTION_REGbits.nRBPU = 0;
  6379                           	bcf	(129)^080h,7	;volatile
  6380  00D5  1381               	line	111
  6381                           	
  6382                           l1745:	
  6383  00D6                     ;keyboard.c: 111:     prevKey = 0;
  6384                           	bcf	status, 5	;RP0=0, select bank0
  6385  00D6  1283               	bcf	status, 6	;RP1=0, select bank0
  6386  00D7  1303               	clrf	(_prevKey)
  6387  00D8  01A4               	line	112
  6388                           	
  6389                           l1747:	
  6390  00D9                     ;keyboard.c: 112:     currKey = 0;
  6391                           	clrf	(_currKey)
  6392  00D9  01A3               	line	113
  6393                           	
  6394                           l65:	
  6395  00DA                     	return
  6396  00DA  0008               	opt stack 0
  6397                           GLOBAL	__end_of_initKeyboard
  6398                           	__end_of_initKeyboard:
  6399  00DB                     	signat	_initKeyboard,89
  6400                           	global	_getFIFO
  6401                           
  6402 ;; *************** function _getFIFO *****************
  6403 ;; Defined at:
  6404 ;;		line 25 in file "fifo.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  aux             1    1[COMMON] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6418 ;;      Params:         0       0       0       0       0
  6419 ;;      Locals:         1       0       0       0       0
  6420 ;;      Temps:          1       0       0       0       0
  6421 ;;      Totals:         2       0       0       0       0
  6422 ;;Total ram usage:        2 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_main
  6428 ;;		_checktecla
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6432                           	file	"fifo.c"
  6433                           	line	25
  6434                           global __ptext19
  6435                           __ptext19:	;psect for function _getFIFO
  6436  0106                     psect	text19
  6437                           	file	"fifo.c"
  6438                           	line	25
  6439                           	global	__size_of_getFIFO
  6440                           	__size_of_getFIFO	equ	__end_of_getFIFO-_getFIFO
  6441  0019                     	
  6442                           _getFIFO:	
  6443  0106                     ;incstack = 0
  6444                           	opt	stack 7
  6445                           ; Regs used in _getFIFO: [wreg-fsr0h+status,2+status,0]
  6446                           	line	27
  6447                           	
  6448                           l1675:	
  6449  0106                     ;fifo.c: 27:     unsigned char aux = 0;
  6450                           	clrf	(getFIFO@aux)
  6451  0106  01F1               	line	29
  6452                           	
  6453                           l1677:	
  6454  0107                     ;fifo.c: 29:     if( fifoTail != fifoHead )
  6455                           	bcf	status, 5	;RP0=0, select bank0
  6456  0107  1283               	bcf	status, 6	;RP1=0, select bank0
  6457  0108  1303               	movf	(_fifoTail),w
  6458  0109  0825               	xorwf	(_fifoHead),w
  6459  010A  067D               	skipnz
  6460  010B  1903               	goto	u731
  6461  010C  290E               	goto	u730
  6462  010D  290F               u731:
  6463  010E                     	goto	l1683
  6464  010E  291C               u730:
  6465  010F                     	line	31
  6466                           	
  6467                           l1679:	
  6468  010F                     ;fifo.c: 30:     {;fifo.c: 31:         aux = fifo[ fifoTail ];
  6469                           	movf	(_fifoTail),w
  6470  010F  0825               	addlw	low(_fifo|((0x0)<<8))&0ffh
  6471  0110  3E26               	movwf	fsr0
  6472  0111  0084               	bcf	status, 7	;select IRP bank0
  6473  0112  1383               	movf	indf,w
  6474  0113  0800               	movwf	(??_getFIFO+0)+0
  6475  0114  00F0               	movf	(??_getFIFO+0)+0,w
  6476  0115  0870               	movwf	(getFIFO@aux)
  6477  0116  00F1               	line	32
  6478                           	
  6479                           l1681:	
  6480  0117                     ;fifo.c: 32:         ++fifoTail;
  6481                           	movlw	low(01h)
  6482  0117  3001               	movwf	(??_getFIFO+0)+0
  6483  0118  00F0               	movf	(??_getFIFO+0)+0,w
  6484  0119  0870               	addwf	(_fifoTail),f
  6485  011A  07A5               	goto	l1683
  6486  011B  291C               	line	33
  6487                           ;fifo.c: 33:     }
  6488                           	
  6489                           l12:	
  6490  011C                     	line	34
  6491                           	
  6492                           l1683:	
  6493  011C                     ;fifo.c: 34:     return( aux );
  6494                           	movf	(getFIFO@aux),w
  6495  011C  0871               	goto	l13
  6496  011D  291E               	
  6497                           l1685:	
  6498  011E                     	line	35
  6499                           	
  6500                           l13:	
  6501  011E                     	return
  6502  011E  0008               	opt stack 0
  6503                           GLOBAL	__end_of_getFIFO
  6504                           	__end_of_getFIFO:
  6505  011F                     	signat	_getFIFO,89
  6506                           	global	_displayFIFO
  6507                           
  6508 ;; *************** function _displayFIFO *****************
  6509 ;; Defined at:
  6510 ;;		line 42 in file "fifo.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  1    wreg      PTR void 
  6517 ;; Registers used:
  6518 ;;		wreg
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6524 ;;      Params:         0       0       0       0       0
  6525 ;;      Locals:         0       0       0       0       0
  6526 ;;      Temps:          0       0       0       0       0
  6527 ;;      Totals:         0       0       0       0       0
  6528 ;;Total ram usage:        0 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_main
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6537                           	line	42
  6538                           global __ptext20
  6539                           __ptext20:	;psect for function _displayFIFO
  6540  0071                     psect	text20
  6541                           	file	"fifo.c"
  6542                           	line	42
  6543                           	global	__size_of_displayFIFO
  6544                           	__size_of_displayFIFO	equ	__end_of_displayFIFO-_displayFIFO
  6545  0003                     	
  6546                           _displayFIFO:	
  6547  0071                     ;incstack = 0
  6548                           	opt	stack 7
  6549                           ; Regs used in _displayFIFO: [wreg]
  6550                           	line	44
  6551                           	
  6552                           l1687:	
  6553  0071                     ;fifo.c: 44:     return( fifo );
  6554                           	movlw	(low(_fifo|((0x0)<<8)))&0ffh
  6555  0071  3026               	goto	l19
  6556  0072  2873               	
  6557                           l1689:	
  6558  0073                     	line	45
  6559                           	
  6560                           l19:	
  6561  0073                     	return
  6562  0073  0008               	opt stack 0
  6563                           GLOBAL	__end_of_displayFIFO
  6564                           	__end_of_displayFIFO:
  6565  0074                     	signat	_displayFIFO,89
  6566                           	global	_currentKey
  6567                           
  6568 ;; *************** function _currentKey *****************
  6569 ;; Defined at:
  6570 ;;		line 65 in file "keyboard.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      unsigned char 
  6577 ;; Registers used:
  6578 ;;		wreg
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6584 ;;      Params:         0       0       0       0       0
  6585 ;;      Locals:         0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0
  6587 ;;      Totals:         0       0       0       0       0
  6588 ;;Total ram usage:        0 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_main
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6597                           	file	"keyboard.c"
  6598                           	line	65
  6599                           global __ptext21
  6600                           __ptext21:	;psect for function _currentKey
  6601  0074                     psect	text21
  6602                           	file	"keyboard.c"
  6603                           	line	65
  6604                           	global	__size_of_currentKey
  6605                           	__size_of_currentKey	equ	__end_of_currentKey-_currentKey
  6606  0005                     	
  6607                           _currentKey:	
  6608  0074                     ;incstack = 0
  6609                           	opt	stack 7
  6610                           ; Regs used in _currentKey: [wreg]
  6611                           	line	67
  6612                           	
  6613                           l1701:	
  6614  0074                     ;keyboard.c: 67:     return( currKey );
  6615                           	bcf	status, 5	;RP0=0, select bank0
  6616  0074  1283               	bcf	status, 6	;RP1=0, select bank0
  6617  0075  1303               	movf	(_currKey),w
  6618  0076  0823               	goto	l54
  6619  0077  2878               	
  6620                           l1703:	
  6621  0078                     	line	68
  6622                           	
  6623                           l54:	
  6624  0078                     	return
  6625  0078  0008               	opt stack 0
  6626                           GLOBAL	__end_of_currentKey
  6627                           	__end_of_currentKey:
  6628  0079                     	signat	_currentKey,89
  6629                           global	___latbits
  6630                           ___latbits	equ	2
  6631  0002                     	global	btemp
  6632                           	btemp set 07Eh
  6633  007E                     
  6634                           	DABS	1,126,2	;btemp
  6635                           	global	wtemp0
  6636                           	wtemp0 set btemp+0
  6637  007E                     	end


Data Sizes:
    Strings     42
    Constant    22
    Data        17
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     16      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@atuador(BANK0[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@sensor(BANK0[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 

    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), checktecla@linha2(BANK0[17]), 
		 -> fifo(BANK0[16]), 

    sp__displayFIFO	PTR void  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_writeLCD
    _serialIOscan->_serialIObyteShift
    _screen_menu->_writeLCD
    _screen_car->_writeLCD
    _writeLCD->_gotoxy
    _gotoxy->_cmdLCD
    _clearLCD->_cmdLCD
    _resetFIFO->_delFIFO
    _initLCD->_cmdLCD

Critical Paths under _main in BANK0

    _main->_screen_car

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    5986
                                              3 BANK0     13    13      0
                           _clearLCD
                         _currentKey
                            _delFIFO
                        _displayFIFO
                            _getFIFO
                       _initKeyboard
                            _initLCD
                       _initSerialIO
                       _keyboardScan
                        _previousKey
                            _putFIFO
                          _resetFIFO
                         _screen_car
                        _screen_menu
                       _serialIOscan
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         5     5      0     205
                                              4 COMMON     5     5      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _screen_menu                                          0     0      0    1213
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _screen_car                                           3     3      0    1390
                                              0 BANK0      3     3      0
                           _clearLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             5     2      3    1213
                                              8 COMMON     5     2      3
                        _displayFIFO (ARG)
                             _gotoxy
                             _putLCD
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               4     4      0      67
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _gotoxy                                               4     3      1     297
                                              4 COMMON     4     3      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clearLCD                                             0     0      0     177
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _resetFIFO                                            0     0      0      46
                            _delFIFO
 ---------------------------------------------------------------------------------
 (2) _delFIFO                                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _putFIFO                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _previousKey                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _keyboardScan                                        11    11      0     210
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     251
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     177
                                              4 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               4     4      0     177
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initKeyboard                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getFIFO                                              2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayFIFO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _currentKey                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearLCD
     _cmdLCD
   _currentKey
   _delFIFO
   _displayFIFO
   _getFIFO
   _initKeyboard
   _initLCD
     _cmdLCD
   _initSerialIO
   _keyboardScan
   _previousKey
   _putFIFO
   _resetFIFO
     _delFIFO
   _screen_car
     _clearLCD
       _cmdLCD
     _writeLCD
       _displayFIFO (ARG)
       _gotoxy (ARG)
         _cmdLCD
       _putLCD (ARG)
   _screen_menu
     _writeLCD
       _displayFIFO (ARG)
       _gotoxy (ARG)
         _cmdLCD
       _putLCD (ARG)
   _serialIOscan
     _serialIObyteShift
     _serialIOload
   _writeLCD
     _displayFIFO (ARG)
     _gotoxy (ARG)
       _cmdLCD
     _putLCD (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      37       5       68.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Nov 21 16:52:05 2019

              ?_displayFIFO 0070                           l9 00B6                           pc 0002  
                        l12 011C                          l13 011E                          l22 0131  
                        l30 009C                          l23 0121                          l25 013C  
                        l26 013D                          l19 0073                          l51 007D  
                        l27 013F                          l60 0383                          l61 0378  
                        l54 0078                          l62 0399                          l65 00DA  
                        l57 0325                          l90 0311                          l82 02BB  
                        l58 038E                          l59 0342                          l92 0307  
                        l93 0316                          l85 02E3                          l94 031A  
                        l87 02D9                          l88 02E8                          l89 031A  
                        l97 0205                          fsr 0004                         l100 0105  
                       l103 018C                         l104 0177                         l200 0498  
                       l105 019D                         l201 0467                         l106 019D  
                       l130 023F                         l210 04A4                         l202 0497  
                       l115 0089                         l211 04AA                         l203 0472  
                       l220 04DA                         l212 04B3                         l204 0496  
                       l133 00A8                         l221 04E3                         l213 04B4  
                       l205 047D                         l230 054D                         l222 04E4  
                       l214 04BA                         l206 0495                         l311 0160  
                       l231 0563                         l223 04F9                         l215 04C3  
                       l207 0488                         l312 0147                         l320 026E  
                       l240 05D4                         l232 0568                         l224 04FE  
                       l216 04C4                         l208 0494                         l313 0152  
                       l321 024E                         l241 05DA                         l233 057E  
                       l225 0513                         l217 04CA                         l209 0493  
                       l314 0153                         l322 0277                         l250 060A  
                       l242 05E3                         l234 0583                         l226 0518  
                       l218 04D3                         l315 015C                         l323 027C  
                       l251 0613                         l243 05E4                         l235 0599  
                       l227 052D                         l219 04D4                         l316 0165  
                       l308 0082                         l252 07DB                         l260 06E3  
                       l244 05EA                         l236 059E                         l228 0532  
                       l180 04A2                         l172 03C2                         l317 016A  
                       l253 0790                         l261 06E4                         l173 0615  
                       l245 05F3                         l237 05B4                         l229 0548  
                       l181 03F9                         l326 01D1                         l270 0734  
                       l262 06F5                         l254 06AE                         l246 05F4  
                       l238 05B9                         l182 04A1                         l190 049D  
                       l174 03CD                         l271 0735                         l263 06FF  
                       l255 06BD                         l175 068F                         l247 05FA  
                       l239 05CF                         l191 0430                         l183 0404  
                       l280 0782                         l272 0736                         l264 0700  
                       l256 06C7                         l248 0603                         l184 04A0  
                       l192 049C                         l176 03CE                         l257 07CA  
                       l281 0746                         l273 0737                         l265 0711  
                       l249 0604                         l193 043B                         l185 040F  
                       l177 03E3                         l290 07E2                         l282 0749  
                       l274 0738                         l266 071B                         l258 06C8  
                       l178 04A3                         l186 049F                         l194 049B  
                       l291 07E2                         l283 074B                         l275 0739  
                       l267 071C                         l259 06D9                         l195 0446  
                       l187 041A                         l179 03EE                         l284 074E  
                       l276 073A                         l268 0732                         l188 049E  
                       l196 049A                         l285 0750                         l277 0741  
                       l269 0733                         l197 0451                         l189 0425  
                       l278 0759                         l286 0753                         l198 0499  
                       l287 0755                         l279 0742                         l199 045C  
                       l288 0788                         l289 07E1                         _LCD 0008  
                       u610 02D2                         u611 02D1                         u620 02D8  
                       u700 0150                         u621 02D7                         u701 014F  
                       u630 02F1                         u710 0157                         u631 02F0  
                       u711 0156                         u640 0300                         u800 0382  
                       u720 0165                         u641 02FF                         u801 0381  
                       u721 0164                         u730 010F                         u650 0306  
                       u810 038D                         u731 010E                         u651 0305  
                       u811 038C                         u740 0323                         u820 0276  
                       u900 03DE                         u741 0322                         u821 0275  
                       u901 03DD                         u670 0136                         u910 03E9  
                       u671 0135                         u911 03E8                         u760 0340  
                       u680 013B                         u920 03F4                         u761 033F  
                       u681 013A                         u665 00F5                         u921 03F3  
                       u754 032B                         u690 019C                         u930 03FF  
                       u755 0329                         u691 019B                         u931 03FE  
                       u780 0361                         u940 040A                         u781 0360  
                       u941 0409                         u774 0353                         u950 0415  
                       u775 0350                         u951 0414                         u960 0420  
                       u961 041F                         u970 042B                         u795 0364  
                       u971 042A                         u980 0436                         u981 0435  
                       u990 0441                         u991 0440                         fsr0 0004  
                       indf 0000                __CFG_LVP$OFF 0000                        l2001 05FE  
                      l2003 0605                        l2011 068F                        l2021 06B6  
                      l2013 0699                        l2005 060E                        l2031 06D9  
                      l2023 06BD                        l2015 06A3                        l2007 0614  
                      l2041 0700                        l2033 06E4                        l2025 06C8  
                      l2017 06AE                        l2009 0615                        l2051 0721  
                      l2043 0706                        l2035 06EA                        l2027 06CE  
                      l2019 06B2                        l2061 0742                        l2053 0727  
                      l2045 070A                        l2037 06EE                        l2029 06D2  
                      l2063 0749                        l2071 0759                        l2055 0728  
                      l2047 0711                        l2039 06F5                        l2231 0687  
                      l1601 0316                        l2233 0768                        l2065 074E  
                      l2073 0782                        l2057 072D                        l2049 071C  
                      l2081 07CA                        l1611 01E3                        l1603 01D3  
                      l2235 0798                        l2075 0788                        l2067 0753  
                      l2059 073A                        l2083 07DB                        l1701 0074  
                      l1621 0202                        l1613 01EC                        l1605 01D7  
                      l2077 078F                        l2069 0758                        l2229 061F  
                      l1703 0078                        l1711 0325                        l1631 012B  
                      l1623 00EF                        l1615 01EF                        l1607 01DA  
                      l2079 0790                        l1801 01C6                        l1721 0361  
                      l1713 0339                        l1705 031B                        l1633 0136  
                      l1625 0120                        l1617 01F8                        l1609 01E2  
                      l1641 0177                        l1571 02C1                        l1803 01C9  
                      l1723 0378                        l1715 033A                        l1731 038E  
                      l1707 031D                        l1635 013D                        l1627 0121  
                      l1619 01F9                        l1643 0187                        l1651 0141  
                      l1811 0240                        l1741 00D3                        l1581 02D9  
                      l1573 02C4                        l1805 01CC                        l1733 0399  
                      l1725 037C                        l1717 0341                        l1709 0324  
                      l1637 013F                        l1629 0123                        l1645 018C  
                      l1661 015C                        l1653 0145                        l1821 026E  
                      l1813 0247                        l1901 042B                        l1743 00D5  
                      l1735 00C8                        l1591 02F2                        l1583 02E3  
                      l1575 02CC                        l1751 0282                        l1807 01CF  
                      l1727 0383                        l1719 0342                        l1671 00AA  
                      l1647 0083                        l1639 016C                        l1663 015D  
                      l1655 014A                        l1823 0277                        l1815 024C  
                      l1911 0446                        l1903 0430                        l1681 0117  
                      l1745 00D6                        l1737 00CC                        l1593 02FA  
                      l1585 02E8                        l1577 02CD                        l1569 02BD  
                      l1761 029A                        l1753 0286                        l1809 01D0  
                      l1729 0387                        l1673 00B2                        l1657 0150  
                      l1665 0160                        l1649 007E                        l1817 024E  
                      l1921 0462                        l1913 044C                        l1905 0436  
                      l1683 011C                        l1675 0106                        l1747 00D9  
                      l1739 00CF                        l1595 0300                        l1587 02EB  
                      l1579 02D2                        l1763 02A0                        l1755 0287  
                      l1691 0092                        l1771 0206                        l1667 0168  
                      l1659 0157                        l1819 0269                        l1931 047D  
                      l1923 0467                        l1915 0451                        l1907 043B  
                      l1685 011E                        l1677 0107                        l1597 0307  
                      l1589 02F1                        l1765 02A6                        l1757 028B  
                      l1749 027D                        l1781 019F                        l1693 0098  
                      l1773 0211                        l1669 016A                        l1941 04AE  
                      l1933 0483                        l1925 046D                        l1917 0457  
                      l1909 0441                        l1861 03B0                        l1853 039A  
                      l1687 0071                        l1679 010F                        l1599 0311  
                      l1767 02AC                        l1759 0294                        l1791 01B7  
                      l1783 01AD                        l1695 0099                        l1775 0220  
                      l1951 04D5                        l1943 04B5                        l1935 0488  
                      l1927 0472                        l1919 045C                        l1871 03D8  
                      l1863 03BE                        l1855 03A1                        l1689 0073  
                      l1769 02B2                        l1793 01BA                        l1785 01AE  
                      l1697 0079                        l1777 023A                        l1961 0513  
                      l1953 04DE                        l1945 04BE                        l1937 048E  
                      l1929 0478                        l1881 03F4                        l1873 03DE  
                      l1865 03C2                        l1857 03A6                        l1795 01BD  
                      l1787 01B1                        l1699 007D                        l1779 009D  
                      l1971 054D                        l1963 0518                        l1955 04E4  
                      l1947 04C5                        l1939 04A5                        l1891 040F  
                      l1883 03F9                        l1875 03E3                        l1867 03C7  
                      l1859 03AB                        l1797 01C0                        l1789 01B4  
                      l1981 0599                        l1973 0563                        l1965 052D  
                      l1957 04F9                        l1949 04CE                        l1893 0415  
                      l1885 03FF                        l1877 03E9                        l1869 03CE  
                      l1799 01C3                        l1991 05D5                        l1983 059E  
                      l1975 0568                        l1967 0532                        l1959 04FE  
                      l1895 041A                        l1887 0404                        l1879 03EE  
                      l1993 05DE                        l1985 05B4                        l1977 057E  
                      l1969 0548                        l1897 0420                        l1889 040A  
                      l1995 05E5                        l1987 05B9                        l1979 0583  
                      l1899 0425                        l1997 05EE                        l1989 05CF  
                      l1999 05F5                 main@atuador 0051                        STR_1 003A  
                      STR_2 0047                        STR_3 0029                        u1000 044C  
                      u1001 044B                        u1010 0457                        u1011 0456  
                      u1100 04DE                        u1020 0462                        u1101 04DD  
                      u1021 0461                        u1110 05DE                        u1030 046D  
                      u1111 05DD                        u1031 046C                        u1200 070A  
                      u1120 05EE                        u1040 0478                        u1201 0709  
                      u1121 05ED                        u1041 0477                        u1130 05FE  
                      u1050 0483                        u1131 05FD                        u1051 0482  
                      u1140 060E                        u1060 048E                        u1141 060D  
                      u1061 048D                        u1150 0699                        u1070 04AE  
                      u1151 0698                        u1071 04AD                        u1160 06A3  
                      u1080 04BE                        u1161 06A2                        u1217 04EC  
                      u1081 04BD                        u1170 06B6                        u1090 04CE  
                      u1307 0219                        u1171 06B5                        u1227 0506  
                      u1091 04CD                        u1180 06D2                        u1317 0234  
                      u1181 06D1                        u1237 0520                        u1190 06EE  
                      u1327 01E7                        u1191 06ED                        u1247 053A  
                      u1337 01FD                        u1257 0555                        u1347 028F  
                      u1267 0570                        u1357 02B6                        u1277 058B  
                      u1367 02DD                        u1287 05A6                        u1377 02E5  
                      u1297 05C1                        u1387 030B                        u1397 0313  
                      _WPUB 0095                        _fifo 0026                        _main 039A  
                      btemp 007E                        start 0000                       ?_main 0070  
             __CFG_WDTE$OFF 0000             __end_of_delFIFO 0140                       _PORTB 0006  
           __end_of_getFIFO 011F                       _TRISB 0086                       _TRISD 0088  
           __end_of_initLCD 02BC                       main@a 004D                       main@b 004E  
                     main@c 004F                       main@d 0050             __end_of_putFIFO 00B7  
                     pclath 000A                       status 0003                       wtemp0 007E  
            __CFG_MCLRE$OFF 0000             __initialization 07E5                __end_of_main 07E5  
             ?_initKeyboard 0070                      ??_main 004A               ?_initSerialIO 0070  
                    _ANSELH 0189                ?_screen_menu 0070               ?_keyboardScan 0070  
          __end_of_clearLCD 008A                      _cmdLCD 02BC              ??_initKeyboard 0070  
                 ??_delFIFO 0070                   ??_getFIFO 0070        __size_of_displayFIFO 0003  
                    _gotoxy 00EE                      _putLCD 01D2              ??_initSerialIO 0072  
                 ??_initLCD 0074                   ??_putFIFO 0070            __end_of_writeLCD 019E  
            ??_keyboardScan 0070                ?_previousKey 0070     __end_of__initialization 07FC  
         _serialIObyteShift 0140          ?_serialIObyteShift 0070              __pcstackCOMMON 0070  
              __pidataBANK0 00B7         ??_serialIObyteShift 0070              _OPTION_REGbits 0081  
         initSerialIO@ptrIn 0073                  delFIFO@ret 0072                  __pbssBANK0 0020  
 __end_of_serialIObyteShift 016B        __end_of_indicePassos 0028                  __pmaintext 039A  
              cmdLCD@nibble 0073                     ?_cmdLCD 0070          __size_of_resetFIFO 000B  
                   ?_gotoxy 0074                     ?_putLCD 0070     serialIObyteShift@dataIn 0071  
                 ?_clearLCD 0070        __end_of_initKeyboard 00DB                  __stringtab 0003  
             ?_serialIOload 0070               ?_serialIOscan 0070        __end_of_initSerialIO 01D2  
      __size_of_screen_menu 000C                  getFIFO@aux 0071             __size_of_cmdLCD 005F  
                   _delFIFO 011F                  _currentKey 0074                     _getFIFO 0106  
                 _ANSELbits 0188        __end_of_keyboardScan 039A             __size_of_gotoxy 0018  
                 ?_writeLCD 0078             __size_of_putLCD 0034                     __ptext1 0240  
                   __ptext2 007E                     __ptext3 0140                     __ptext4 009D  
                   __ptext5 0206                     __ptext6 016B                     __ptext7 01D2  
                   __ptext8 00EE                     __ptext9 0083                     _initLCD 027D  
                   _currKey 0023                  ??_clearLCD 0074                     _putFIFO 00A9  
           checktecla@F1329 0036                     _prevKey 0024                     clrloop0 008B  
      end_of_initialization 07FC           __end_of_resetFIFO 009D              ??_serialIOload 0070  
            ??_serialIOscan 0074  __size_of_serialIObyteShift 002B                     gotoxy@x 0077  
                   gotoxy@y 0074                  _screen_car 0206        __size_of_previousKey 0005  
                   putLCD@c 0072                  ??_writeLCD 007B                   _PORTAbits 0005  
     __end_of_indPassosSize 0029                _KEYBOARDbits 0006                   _TRISAbits 0085  
           keyboardScan@aux 0078                  main@estado 0054                  main@sensor 0052  
             ??_displayFIFO 0070              __end_of_cmdLCD 031B                 ?_currentKey 0070  
              _indicePassos 0023              __end_of_gotoxy 0106              __end_of_putLCD 0206  
       start_initialization 07E5       __size_of_initKeyboard 0013       __size_of_initSerialIO 0034  
        initSerialIO@length 0071                 ?_screen_car 0070          initSerialIO@ptrOut 0070  
  __CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_keyboardScan 007F                    ??_cmdLCD 0070  
                init_fetch0 00DB              _keyboardMatrix 0013                 __pdataBANK0 0036  
              _initKeyboard 00C8                    ??_gotoxy 0075                    ??_putLCD 0070  
      __end_of_serialIOload 0083        __end_of_serialIOscan 027D         __end_of_displayFIFO 0074  
              _initSerialIO 019E                 __pbssCOMMON 007D                   ___latbits 0002  
             __pcstackBANK0 0047           __size_of_clearLCD 0007         __size_of_currentKey 0005  
              _keyboardScan 031B      __end_of_keyboardMatrix 0023                   cmdLCD@cmd 0072  
                  ?_delFIFO 0070               serialIOscan@i 0078               serialIOscan@j 0077  
                  ?_getFIFO 0070                   __pstrings 0003                    ?_initLCD 0070  
         __size_of_writeLCD 0033         __size_of_screen_car 003A                    ?_putFIFO 0070  
  serialIObyteShift@dataBit 0073    serialIObyteShift@dataOut 0072                 writeLCD@ptr 0079  
             ??_screen_menu 007D                   clear_ram0 008A                   _resetFIFO 0092  
                  _SERIALIO 0005                 _displayFIFO 0071                 __stringbase 0012  
              putLCD@nibble 0073                 _lenSerialIO 0020                   main@tecla 0053  
             ??_previousKey 0070                  ?_resetFIFO 0070         __end_of_screen_menu 00A9  
     __size_of_serialIOload 0005       __size_of_serialIOscan 003D                ??_currentKey 0070  
          __size_of_delFIFO 0021            __size_of_getFIFO 0019          __end_of__stringtab 0013  
                  delFIFO@n 0071            __size_of_initLCD 003F                    _clearLCD 0083  
                  _fifoHead 007D            __size_of_putFIFO 000E                    _fifoTail 0025  
                  __ptext10 0092                    __ptext11 011F                    __ptext20 0071  
                  __ptext12 00A9                    __ptext21 0074                    __ptext13 0079  
                  __ptext14 031B                    __ptext15 019E                    __ptext16 027D  
                  __ptext17 02BC                    __ptext18 00C8                    __ptext19 0106  
              _serialIOload 007E                _serialIOscan 0240               __size_of_main 044B  
        __end_of_currentKey 0079                ??_screen_car 0047         __end_of_previousKey 007E  
             keyboardScan@i 0079               keyboardScan@j 007A                    main@rest 0056  
                  _writeLCD 016B          __end_of_screen_car 0240                    init_ram0 00DF  
               _screen_menu 009D                    putFIFO@c 0071                 ??_resetFIFO 0073  
                 writeLCD@x 007C                   writeLCD@y 0078                   stringcode 000D  
              _ptrSerialOut 0021               _indPassosSize 0028                    stringdir 000D  
                  stringtab 0003                 _ptrSerialIn 0022                 _previousKey 0079  
