

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Nov 25 12:59:29 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_clearLCD
  1180                           	FNCALL	_main,_currentKey
  1181                           	FNCALL	_main,_delFIFO
  1182                           	FNCALL	_main,_displayFIFO
  1183                           	FNCALL	_main,_getFIFO
  1184                           	FNCALL	_main,_initKeyboard
  1185                           	FNCALL	_main,_initLCD
  1186                           	FNCALL	_main,_initSerialIO
  1187                           	FNCALL	_main,_keyboardScan
  1188                           	FNCALL	_main,_previousKey
  1189                           	FNCALL	_main,_putFIFO
  1190                           	FNCALL	_main,_resetFIFO
  1191                           	FNCALL	_main,_restartFIFO
  1192                           	FNCALL	_main,_screen_car
  1193                           	FNCALL	_main,_screen_menu
  1194                           	FNCALL	_main,_serialIOscan
  1195                           	FNCALL	_main,_writeLCD
  1196                           	FNCALL	_serialIOscan,_serialIObyteShift
  1197                           	FNCALL	_serialIOscan,_serialIOload
  1198                           	FNCALL	_screen_menu,_writeLCD
  1199                           	FNCALL	_screen_car,_clearLCD
  1200                           	FNCALL	_screen_car,_writeLCD
  1201                           	FNCALL	_writeLCD,_gotoxy
  1202                           	FNCALL	_writeLCD,_putLCD
  1203                           	FNCALL	_gotoxy,_cmdLCD
  1204                           	FNCALL	_clearLCD,_cmdLCD
  1205                           	FNCALL	_resetFIFO,_delFIFO
  1206                           	FNCALL	_initLCD,_cmdLCD
  1207                           	FNROOT	_main
  1208                           	global	checktecla@F1330
  1209                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1210                           global __pidataBANK0
  1211                           __pidataBANK0:
  1212  00BC                     	file	"lcd.c"
  1213                           	line	110
  1214                           
  1215                           ;initializer for checktecla@F1330
  1216                           	retlw	020h
  1217  00BC  3420               	retlw	020h
  1218  00BD  3420               	retlw	020h
  1219  00BE  3420               	retlw	020h
  1220  00BF  3420               	retlw	020h
  1221  00C0  3420               	retlw	020h
  1222  00C1  3420               	retlw	05Bh
  1223  00C2  345B               	retlw	020h
  1224  00C3  3420               	retlw	020h
  1225  00C4  3420               	retlw	05Dh
  1226  00C5  345D               	retlw	020h
  1227  00C6  3420               	retlw	020h
  1228  00C7  3420               	retlw	020h
  1229  00C8  3420               	retlw	020h
  1230  00C9  3420               	retlw	020h
  1231  00CA  3420               	retlw	020h
  1232  00CB  3420               	retlw	low(0)
  1233  00CC  3400               	global	_keyboardMatrix
  1234                           psect	strings,class=STRING,delta=2,noexec
  1235                           global __pstrings
  1236                           __pstrings:
  1237  0003                     stringtab:
  1238  0003                     	global    __stringtab
  1239                           __stringtab:
  1240  0003                     ;	String table - string pointers are 1 byte each
  1241                           	btfsc	(btemp+1),7
  1242  0003  1BFF               	ljmp	stringcode
  1243  0004  280D               	bcf	status,7
  1244  0005  1383               	btfsc	(btemp+1),0
  1245  0006  187F               	bsf	status,7
  1246  0007  1783               	movf	indf,w
  1247  0008  0800               	incf fsr
  1248  0009  0A84               skipnz
  1249  000A  1903               incf btemp+1
  1250  000B  0AFF               	return
  1251  000C  0008               stringcode:stringdir:
  1252  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
  1253  000D  3000               movwf pclath
  1254  000E  008A               movf fsr,w
  1255  000F  0804               incf fsr
  1256  0010  0A84               	addwf pc
  1257  0011  0782               	global __stringbase
  1258                           __stringbase:
  1259  0012                     	retlw	0
  1260  0012  3400               psect	strings
  1261                           	global    __end_of__stringtab
  1262                           __end_of__stringtab:
  1263  0013                     	file	"keyboard.c"
  1264                           	line	39
  1265                           _keyboardMatrix:
  1266  0013                     	retlw	031h
  1267  0013  3431               	retlw	032h
  1268  0014  3432               	retlw	033h
  1269  0015  3433               	retlw	041h
  1270  0016  3441               	retlw	034h
  1271  0017  3434               	retlw	035h
  1272  0018  3435               	retlw	036h
  1273  0019  3436               	retlw	042h
  1274  001A  3442               	retlw	037h
  1275  001B  3437               	retlw	038h
  1276  001C  3438               	retlw	039h
  1277  001D  3439               	retlw	043h
  1278  001E  3443               	retlw	02Ah
  1279  001F  342A               	retlw	030h
  1280  0020  3430               	retlw	023h
  1281  0021  3423               	retlw	044h
  1282  0022  3444               	global __end_of_keyboardMatrix
  1283                           __end_of_keyboardMatrix:
  1284  0023                     psect	strings
  1285                           	file	"lcd.c"
  1286                           	line	17
  1287                           _indicePassos:
  1288  0023                     	retlw	low(0)
  1289  0023  3400               	retlw	03h
  1290  0024  3403               	retlw	07h
  1291  0025  3407               	retlw	0Bh
  1292  0026  340B               	retlw	0Eh
  1293  0027  340E               	global __end_of_indicePassos
  1294                           __end_of_indicePassos:
  1295  0028                     	global	_indPassosSize
  1296                           psect	strings
  1297                           	file	"lcd.c"
  1298                           	line	16
  1299                           _indPassosSize:
  1300  0028                     	retlw	05h
  1301  0028  3405               	global __end_of_indPassosSize
  1302                           __end_of_indPassosSize:
  1303  0029                     	global	_keyboardMatrix
  1304                           	global	_indPassosSize
  1305                           	global	_fifoHead
  1306                           	global	_lenSerialIO
  1307                           	global	_ptrSerialOut
  1308                           	global	_ptrSerialIn
  1309                           	global	_currKey
  1310                           	global	_prevKey
  1311                           	global	_fifoTail
  1312                           	global	_fifo
  1313                           	global	_SERIALIO
  1314                           _SERIALIO	set	5
  1315  0005                     	global	_PORTAbits
  1316                           _PORTAbits	set	0x5
  1317  0005                     	global	_LCD
  1318                           _LCD	set	8
  1319  0008                     	global	_PORTB
  1320                           _PORTB	set	0x6
  1321  0006                     	global	_KEYBOARDbits
  1322                           _KEYBOARDbits	set	0x6
  1323  0006                     	global	_TRISAbits
  1324                           _TRISAbits	set	0x85
  1325  0085                     	global	_TRISD
  1326                           _TRISD	set	0x88
  1327  0088                     	global	_OPTION_REGbits
  1328                           _OPTION_REGbits	set	0x81
  1329  0081                     	global	_WPUB
  1330                           _WPUB	set	0x95
  1331  0095                     	global	_TRISB
  1332                           _TRISB	set	0x86
  1333  0086                     	global	_ANSELbits
  1334                           _ANSELbits	set	0x188
  1335  0188                     	global	_ANSELH
  1336                           _ANSELH	set	0x189
  1337  0189                     	
  1338                           STR_3:	
  1339  0029                     	retlw	73	;'I'
  1340  0029  3449               	retlw	78	;'N'
  1341  002A  344E               	retlw	83	;'S'
  1342  002B  3453               	retlw	73	;'I'
  1343  002C  3449               	retlw	82	;'R'
  1344  002D  3452               	retlw	65	;'A'
  1345  002E  3441               	retlw	32	;' '
  1346  002F  3420               	retlw	65	;'A'
  1347  0030  3441               	retlw	32	;' '
  1348  0031  3420               	retlw	83	;'S'
  1349  0032  3453               	retlw	69	;'E'
  1350  0033  3445               	retlw	81	;'Q'
  1351  0034  3451               	retlw	85	;'U'
  1352  0035  3455               	retlw	69	;'E'
  1353  0036  3445               	retlw	78	;'N'
  1354  0037  344E               	retlw	46	;'.'
  1355  0038  342E               	retlw	0
  1356  0039  3400               psect	strings
  1357                           	
  1358                           STR_1:	
  1359  003A                     	retlw	83	;'S'
  1360  003A  3453               	retlw	69	;'E'
  1361  003B  3445               	retlw	81	;'Q'
  1362  003C  3451               	retlw	85	;'U'
  1363  003D  3455               	retlw	69	;'E'
  1364  003E  3445               	retlw	78	;'N'
  1365  003F  344E               	retlw	67	;'C'
  1366  0040  3443               	retlw	73	;'I'
  1367  0041  3449               	retlw	65	;'A'
  1368  0042  3441               	retlw	68	;'D'
  1369  0043  3444               	retlw	79	;'O'
  1370  0044  344F               	retlw	82	;'R'
  1371  0045  3452               	retlw	0
  1372  0046  3400               psect	strings
  1373                           	
  1374                           STR_2:	
  1375  0047                     	retlw	80	;'P'
  1376  0047  3450               	retlw	82	;'R'
  1377  0048  3452               	retlw	79	;'O'
  1378  0049  344F               	retlw	71	;'G'
  1379  004A  3447               	retlw	82	;'R'
  1380  004B  3452               	retlw	65	;'A'
  1381  004C  3441               	retlw	77	;'M'
  1382  004D  344D               	retlw	65	;'A'
  1383  004E  3441               	retlw	86	;'V'
  1384  004F  3456               	retlw	69	;'E'
  1385  0050  3445               	retlw	76	;'L'
  1386  0051  344C               	retlw	0
  1387  0052  3400               psect	strings
  1388                           ; #config settings
  1389                           global __CFG_FOSC$INTRC_NOCLKOUT
  1390                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1391  0000                     global __CFG_WDTE$OFF
  1392                           __CFG_WDTE$OFF equ 0x0
  1393  0000                     global __CFG_MCLRE$OFF
  1394                           __CFG_MCLRE$OFF equ 0x0
  1395  0000                     global __CFG_LVP$OFF
  1396                           __CFG_LVP$OFF equ 0x0
  1397  0000                     	file	"C:\Users\18175218\AppData\Local\Temp\sbng."
  1398                           	line	#
  1399                           psect cinit,class=CODE,delta=2
  1400                           global start_initialization
  1401                           start_initialization:
  1402  07E5                     
  1403                           global __initialization
  1404                           __initialization:
  1405  07E5                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1406                           global __pbssCOMMON
  1407                           __pbssCOMMON:
  1408  007D                     _fifoHead:
  1409  007D                            ds      1
  1410  007D                     
  1411                           psect	bssBANK0,class=BANK0,space=1,noexec
  1412                           global __pbssBANK0
  1413                           __pbssBANK0:
  1414  0020                     _lenSerialIO:
  1415  0020                            ds      1
  1416  0020                     
  1417                           _ptrSerialOut:
  1418  0021                            ds      1
  1419  0021                     
  1420                           _ptrSerialIn:
  1421  0022                            ds      1
  1422  0022                     
  1423                           _currKey:
  1424  0023                            ds      1
  1425  0023                     
  1426                           _prevKey:
  1427  0024                            ds      1
  1428  0024                     
  1429                           _fifoTail:
  1430  0025                            ds      1
  1431  0025                     
  1432                           _fifo:
  1433  0026                            ds      16
  1434  0026                     
  1435                           psect	dataBANK0,class=BANK0,space=1,noexec
  1436                           global __pdataBANK0
  1437                           __pdataBANK0:
  1438  0036                     	file	"lcd.c"
  1439                           	line	110
  1440                           checktecla@F1330:
  1441  0036                            ds      17
  1442  0036                     
  1443                           	file	"C:\Users\18175218\AppData\Local\Temp\sbng."
  1444                           	line	#
  1445                           global btemp
  1446                           psect inittext,class=CODE,delta=2
  1447                           global init_fetch0,btemp
  1448                           ;	Called with low address in FSR and high address in W
  1449                           init_fetch0:
  1450  00E0                     	movf btemp,w
  1451  00E0  087E               	movwf pclath
  1452  00E1  008A               	movf btemp+1,w
  1453  00E2  087F               	movwf pc
  1454  00E3  0082               global init_ram0
  1455                           ;Called with:
  1456                           ;	high address of idata address in btemp 
  1457                           ;	low address of idata address in btemp+1 
  1458                           ;	low address of data in FSR
  1459                           ;	high address + 1 of data in btemp-1
  1460                           init_ram0:
  1461  00E4                     	fcall init_fetch0
  1462  00E4  120A  118A  20E0  120A  118A  	movwf indf,f
  1463  00E9  0080               	incf fsr,f
  1464  00EA  0A84               	movf fsr,w
  1465  00EB  0804               	xorwf btemp-1,w
  1466  00EC  067D               	btfsc status,2
  1467  00ED  1903               	retlw 0
  1468  00EE  3400               	incf btemp+1,f
  1469  00EF  0AFF               	btfsc status,2
  1470  00F0  1903               	incf btemp,f
  1471  00F1  0AFE               	goto init_ram0
  1472  00F2  28E4               ; Initialize objects allocated to BANK0
  1473                           psect cinit,class=CODE,delta=2,merge=1
  1474                           global init_ram0, __pidataBANK0
  1475                           	bcf	status, 7	;select IRP bank0
  1476  07E5  1383               	movlw low(__pdataBANK0+17)
  1477  07E6  3047               	movwf btemp-1,f
  1478  07E7  00FD               	movlw high(__pidataBANK0)
  1479  07E8  3000               	movwf btemp,f
  1480  07E9  00FE               	movlw low(__pidataBANK0)
  1481  07EA  30BC               	movwf btemp+1,f
  1482  07EB  00FF               	movlw low(__pdataBANK0)
  1483  07EC  3036               	movwf fsr,f
  1484  07ED  0084               	fcall init_ram0
  1485  07EE  120A  118A  20E4  120A  118A  	line	#
  1486                           psect clrtext,class=CODE,delta=2
  1487                           global clear_ram0
  1488                           ;	Called with FSR containing the base address, and
  1489                           ;	W with the last address+1
  1490                           clear_ram0:
  1491  008F                     	clrwdt			;clear the watchdog before getting into this loop
  1492  008F  0064               clrloop0:
  1493  0090                     	clrf	indf		;clear RAM location pointed to by FSR
  1494  0090  0180               	incf	fsr,f		;increment pointer
  1495  0091  0A84               	xorwf	fsr,w		;XOR with final address
  1496  0092  0604               	btfsc	status,2	;have we reached the end yet?
  1497  0093  1903               	retlw	0		;all done for this memory range, return
  1498  0094  3400               	xorwf	fsr,w		;XOR again to restore value
  1499  0095  0604               	goto	clrloop0		;do the next byte
  1500  0096  2890               
  1501                           ; Clear objects allocated to BANK0
  1502                           psect cinit,class=CODE,delta=2,merge=1
  1503                           	movlw	low(__pbssBANK0)
  1504  07F3  3020               	movwf	fsr
  1505  07F4  0084               	movlw	low((__pbssBANK0)+016h)
  1506  07F5  3036               	fcall	clear_ram0
  1507  07F6  120A  118A  208F  120A  118A  ; Clear objects allocated to COMMON
  1508                           psect cinit,class=CODE,delta=2,merge=1
  1509                           	clrf	((__pbssCOMMON)+0)&07Fh
  1510  07FB  01FD               psect cinit,class=CODE,delta=2,merge=1
  1511                           global end_of_initialization,__end_of__initialization
  1512                           
  1513                           ;End of C runtime variable initialization code
  1514                           
  1515                           end_of_initialization:
  1516  07FC                     __end_of__initialization:
  1517  07FC                     clrf status
  1518  07FC  0183               ljmp _main	;jump to C main() function
  1519  07FD  120A  118A  2B9F   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1520                           global __pcstackCOMMON
  1521                           __pcstackCOMMON:
  1522  0070                     ?_displayFIFO:	; 1 bytes @ 0x0
  1523  0070                     ??_displayFIFO:	; 1 bytes @ 0x0
  1524  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1525  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1526  0070                     ?_initSerialIO:	; 1 bytes @ 0x0
  1527  0070                     ?_serialIOscan:	; 1 bytes @ 0x0
  1528  0070                     ?_putFIFO:	; 1 bytes @ 0x0
  1529  0070                     ??_putFIFO:	; 1 bytes @ 0x0
  1530  0070                     ?_getFIFO:	; 1 bytes @ 0x0
  1531  0070                     ??_getFIFO:	; 1 bytes @ 0x0
  1532  0070                     ?_delFIFO:	; 1 bytes @ 0x0
  1533  0070                     ??_delFIFO:	; 1 bytes @ 0x0
  1534  0070                     ?_resetFIFO:	; 1 bytes @ 0x0
  1535  0070                     ?_restartFIFO:	; 1 bytes @ 0x0
  1536  0070                     ??_restartFIFO:	; 1 bytes @ 0x0
  1537  0070                     ?_previousKey:	; 1 bytes @ 0x0
  1538  0070                     ??_previousKey:	; 1 bytes @ 0x0
  1539  0070                     ?_currentKey:	; 1 bytes @ 0x0
  1540  0070                     ??_currentKey:	; 1 bytes @ 0x0
  1541  0070                     ?_keyboardScan:	; 1 bytes @ 0x0
  1542  0070                     ??_keyboardScan:	; 1 bytes @ 0x0
  1543  0070                     ?_initKeyboard:	; 1 bytes @ 0x0
  1544  0070                     ??_initKeyboard:	; 1 bytes @ 0x0
  1545  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1546  0070                     ?_putLCD:	; 1 bytes @ 0x0
  1547  0070                     ??_putLCD:	; 1 bytes @ 0x0
  1548  0070                     ?_clearLCD:	; 1 bytes @ 0x0
  1549  0070                     ?_screen_car:	; 1 bytes @ 0x0
  1550  0070                     ?_screen_menu:	; 1 bytes @ 0x0
  1551  0070                     ?_main:	; 1 bytes @ 0x0
  1552  0070                     ?_serialIOload:	; 1 bytes @ 0x0
  1553  0070                     ??_serialIOload:	; 1 bytes @ 0x0
  1554  0070                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  1555  0070                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  1556  0070                     	global	initSerialIO@ptrOut
  1557                           initSerialIO@ptrOut:	; 1 bytes @ 0x0
  1558  0070                     	ds	1
  1559  0070                     	global	putFIFO@c
  1560                           putFIFO@c:	; 1 bytes @ 0x1
  1561  0071                     	global	getFIFO@aux
  1562                           getFIFO@aux:	; 1 bytes @ 0x1
  1563  0071                     	global	delFIFO@n
  1564                           delFIFO@n:	; 1 bytes @ 0x1
  1565  0071                     	global	serialIObyteShift@dataIn
  1566                           serialIObyteShift@dataIn:	; 1 bytes @ 0x1
  1567  0071                     	global	initSerialIO@length
  1568                           initSerialIO@length:	; 1 bytes @ 0x1
  1569  0071                     	ds	1
  1570  0071                     ??_initSerialIO:	; 1 bytes @ 0x2
  1571  0072                     	global	delFIFO@ret
  1572                           delFIFO@ret:	; 1 bytes @ 0x2
  1573  0072                     	global	cmdLCD@cmd
  1574                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1575  0072                     	global	putLCD@c
  1576                           putLCD@c:	; 1 bytes @ 0x2
  1577  0072                     	global	serialIObyteShift@dataOut
  1578                           serialIObyteShift@dataOut:	; 1 bytes @ 0x2
  1579  0072                     	ds	1
  1580  0072                     ??_resetFIFO:	; 1 bytes @ 0x3
  1581  0073                     	global	cmdLCD@nibble
  1582                           cmdLCD@nibble:	; 1 bytes @ 0x3
  1583  0073                     	global	putLCD@nibble
  1584                           putLCD@nibble:	; 1 bytes @ 0x3
  1585  0073                     	global	serialIObyteShift@dataBit
  1586                           serialIObyteShift@dataBit:	; 1 bytes @ 0x3
  1587  0073                     	global	initSerialIO@ptrIn
  1588                           initSerialIO@ptrIn:	; 1 bytes @ 0x3
  1589  0073                     	ds	1
  1590  0073                     ??_serialIOscan:	; 1 bytes @ 0x4
  1591  0074                     ??_initLCD:	; 1 bytes @ 0x4
  1592  0074                     ?_gotoxy:	; 1 bytes @ 0x4
  1593  0074                     ??_clearLCD:	; 1 bytes @ 0x4
  1594  0074                     	global	gotoxy@y
  1595                           gotoxy@y:	; 1 bytes @ 0x4
  1596  0074                     	ds	1
  1597  0074                     ??_gotoxy:	; 1 bytes @ 0x5
  1598  0075                     	ds	2
  1599  0075                     	global	gotoxy@x
  1600                           gotoxy@x:	; 1 bytes @ 0x7
  1601  0077                     	global	serialIOscan@j
  1602                           serialIOscan@j:	; 1 bytes @ 0x7
  1603  0077                     	ds	1
  1604  0077                     ?_writeLCD:	; 1 bytes @ 0x8
  1605  0078                     	global	keyboardScan@aux
  1606                           keyboardScan@aux:	; 1 bytes @ 0x8
  1607  0078                     	global	writeLCD@y
  1608                           writeLCD@y:	; 1 bytes @ 0x8
  1609  0078                     	global	serialIOscan@i
  1610                           serialIOscan@i:	; 1 bytes @ 0x8
  1611  0078                     	ds	1
  1612  0078                     	global	keyboardScan@i
  1613                           keyboardScan@i:	; 1 bytes @ 0x9
  1614  0079                     	global	writeLCD@ptr
  1615                           writeLCD@ptr:	; 2 bytes @ 0x9
  1616  0079                     	ds	1
  1617  0079                     	global	keyboardScan@j
  1618                           keyboardScan@j:	; 1 bytes @ 0xA
  1619  007A                     	ds	1
  1620  007A                     ??_writeLCD:	; 1 bytes @ 0xB
  1621  007B                     	ds	1
  1622  007B                     	global	writeLCD@x
  1623                           writeLCD@x:	; 1 bytes @ 0xC
  1624  007C                     	ds	1
  1625  007C                     ??_screen_menu:	; 1 bytes @ 0xD
  1626  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1627                           global __pcstackBANK0
  1628                           __pcstackBANK0:
  1629  0047                     ??_screen_car:	; 1 bytes @ 0x0
  1630  0047                     	ds	3
  1631  0047                     ??_main:	; 1 bytes @ 0x3
  1632  004A                     	ds	3
  1633  004A                     	global	main@a
  1634                           main@a:	; 1 bytes @ 0x6
  1635  004D                     	ds	1
  1636  004D                     	global	main@b
  1637                           main@b:	; 1 bytes @ 0x7
  1638  004E                     	ds	1
  1639  004E                     	global	main@c
  1640                           main@c:	; 1 bytes @ 0x8
  1641  004F                     	ds	1
  1642  004F                     	global	main@d
  1643                           main@d:	; 1 bytes @ 0x9
  1644  0050                     	ds	1
  1645  0050                     	global	main@atuador
  1646                           main@atuador:	; 1 bytes @ 0xA
  1647  0051                     	ds	1
  1648  0051                     	global	main@sensor
  1649                           main@sensor:	; 1 bytes @ 0xB
  1650  0052                     	ds	1
  1651  0052                     	global	main@tecla
  1652                           main@tecla:	; 1 bytes @ 0xC
  1653  0053                     	ds	1
  1654  0053                     	global	main@estado
  1655                           main@estado:	; 2 bytes @ 0xD
  1656  0054                     	ds	2
  1657  0054                     	global	main@rest
  1658                           main@rest:	; 1 bytes @ 0xF
  1659  0056                     	ds	1
  1660  0056                     ;!
  1661                           ;!Data Sizes:
  1662                           ;!    Strings     42
  1663                           ;!    Constant    22
  1664                           ;!    Data        17
  1665                           ;!    BSS         23
  1666                           ;!    Persistent  0
  1667                           ;!    Stack       0
  1668                           ;!
  1669                           ;!Auto Spaces:
  1670                           ;!    Space          Size  Autos    Used
  1671                           ;!    COMMON           14     13      14
  1672                           ;!    BANK0            80     16      55
  1673                           ;!    BANK1            80      0       0
  1674                           ;!    BANK3            96      0       0
  1675                           ;!    BANK2            96      0       0
  1676                           
  1677                           ;!
  1678                           ;!Pointer List with Targets:
  1679                           ;!
  1680                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
  1681                           ;!		 -> main@atuador(BANK0[1]), 
  1682                           ;!
  1683                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
  1684                           ;!		 -> main@sensor(BANK0[1]), 
  1685                           ;!
  1686                           ;!    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
  1687                           ;!		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 
  1688                           ;!
  1689                           ;!    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
  1690                           ;!		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 
  1691                           ;!
  1692                           ;!    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
  1693                           ;!		 -> STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), checktecla@linha2(BANK0[17]),
                                  
  1694                           ;!		 -> fifo(BANK0[16]), 
  1695                           ;!
  1696                           ;!    sp__displayFIFO	PTR void  size(1) Largest target is 16
  1697                           ;!		 -> fifo(BANK0[16]), 
  1698                           ;!
  1699                           
  1700                           
  1701                           ;!
  1702                           ;!Critical Paths under _main in COMMON
  1703                           ;!
  1704                           ;!    _main->_writeLCD
  1705                           ;!    _serialIOscan->_serialIObyteShift
  1706                           ;!    _screen_menu->_writeLCD
  1707                           ;!    _screen_car->_writeLCD
  1708                           ;!    _writeLCD->_gotoxy
  1709                           ;!    _gotoxy->_cmdLCD
  1710                           ;!    _clearLCD->_cmdLCD
  1711                           ;!    _resetFIFO->_delFIFO
  1712                           ;!    _initLCD->_cmdLCD
  1713                           ;!
  1714                           ;!Critical Paths under _main in BANK0
  1715                           ;!
  1716                           ;!    _main->_screen_car
  1717                           ;!
  1718                           ;!Critical Paths under _main in BANK1
  1719                           ;!
  1720                           ;!    None.
  1721                           ;!
  1722                           ;!Critical Paths under _main in BANK3
  1723                           ;!
  1724                           ;!    None.
  1725                           ;!
  1726                           ;!Critical Paths under _main in BANK2
  1727                           ;!
  1728                           ;!    None.
  1729                           
  1730 ;;
  1731 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1732 ;;
  1733                           
  1734                           ;!
  1735                           ;!Call Graph Tables:
  1736                           ;!
  1737                           ;! ---------------------------------------------------------------------------------
  1738                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1739                           ;! ---------------------------------------------------------------------------------
  1740                           ;! (0) _main                                                13    13      0    5942
  1741                           ;!                                              3 BANK0     13    13      0
  1742                           ;!                           _clearLCD
  1743                           ;!                         _currentKey
  1744                           ;!                            _delFIFO
  1745                           ;!                        _displayFIFO
  1746                           ;!                            _getFIFO
  1747                           ;!                       _initKeyboard
  1748                           ;!                            _initLCD
  1749                           ;!                       _initSerialIO
  1750                           ;!                       _keyboardScan
  1751                           ;!                        _previousKey
  1752                           ;!                            _putFIFO
  1753                           ;!                          _resetFIFO
  1754                           ;!                        _restartFIFO
  1755                           ;!                         _screen_car
  1756                           ;!                        _screen_menu
  1757                           ;!                       _serialIOscan
  1758                           ;!                           _writeLCD
  1759                           ;! ---------------------------------------------------------------------------------
  1760                           ;! (1) _serialIOscan                                         5     5      0     205
  1761                           ;!                                              4 COMMON     5     5      0
  1762                           ;!                  _serialIObyteShift
  1763                           ;!                       _serialIOload
  1764                           ;! ---------------------------------------------------------------------------------
  1765                           ;! (2) _serialIOload                                         0     0      0       0
  1766                           ;! ---------------------------------------------------------------------------------
  1767                           ;! (2) _serialIObyteShift                                    4     4      0     114
  1768                           ;!                                              0 COMMON     4     4      0
  1769                           ;! ---------------------------------------------------------------------------------
  1770                           ;! (1) _screen_menu                                          0     0      0    1213
  1771                           ;!                           _writeLCD
  1772                           ;! ---------------------------------------------------------------------------------
  1773                           ;! (1) _screen_car                                           3     3      0    1390
  1774                           ;!                                              0 BANK0      3     3      0
  1775                           ;!                           _clearLCD
  1776                           ;!                           _writeLCD
  1777                           ;! ---------------------------------------------------------------------------------
  1778                           ;! (1) _writeLCD                                             5     2      3    1213
  1779                           ;!                                              8 COMMON     5     2      3
  1780                           ;!                        _displayFIFO (ARG)
  1781                           ;!                             _gotoxy
  1782                           ;!                             _putLCD
  1783                           ;! ---------------------------------------------------------------------------------
  1784                           ;! (2) _putLCD                                               4     4      0      67
  1785                           ;!                                              0 COMMON     4     4      0
  1786                           ;! ---------------------------------------------------------------------------------
  1787                           ;! (2) _gotoxy                                               4     3      1     297
  1788                           ;!                                              4 COMMON     4     3      1
  1789                           ;!                             _cmdLCD
  1790                           ;! ---------------------------------------------------------------------------------
  1791                           ;! (2) _clearLCD                                             0     0      0     177
  1792                           ;!                             _cmdLCD
  1793                           ;! ---------------------------------------------------------------------------------
  1794                           ;! (1) _restartFIFO                                          0     0      0       0
  1795                           ;! ---------------------------------------------------------------------------------
  1796                           ;! (1) _resetFIFO                                            0     0      0      46
  1797                           ;!                            _delFIFO
  1798                           ;! ---------------------------------------------------------------------------------
  1799                           ;! (2) _delFIFO                                              3     3      0      46
  1800                           ;!                                              0 COMMON     3     3      0
  1801                           ;! ---------------------------------------------------------------------------------
  1802                           ;! (1) _putFIFO                                              2     2      0      22
  1803                           ;!                                              0 COMMON     2     2      0
  1804                           ;! ---------------------------------------------------------------------------------
  1805                           ;! (1) _previousKey                                          0     0      0       0
  1806                           ;! ---------------------------------------------------------------------------------
  1807                           ;! (2) _keyboardScan                                        11    11      0     210
  1808                           ;!                                              0 COMMON    11    11      0
  1809                           ;! ---------------------------------------------------------------------------------
  1810                           ;! (1) _initSerialIO                                         4     2      2     251
  1811                           ;!                                              0 COMMON     4     2      2
  1812                           ;! ---------------------------------------------------------------------------------
  1813                           ;! (1) _initLCD                                              2     2      0     177
  1814                           ;!                                              4 COMMON     2     2      0
  1815                           ;!                             _cmdLCD
  1816                           ;! ---------------------------------------------------------------------------------
  1817                           ;! (3) _cmdLCD                                               4     4      0     177
  1818                           ;!                                              0 COMMON     4     4      0
  1819                           ;! ---------------------------------------------------------------------------------
  1820                           ;! (1) _initKeyboard                                         0     0      0       0
  1821                           ;! ---------------------------------------------------------------------------------
  1822                           ;! (1) _getFIFO                                              2     2      0      24
  1823                           ;!                                              0 COMMON     2     2      0
  1824                           ;! ---------------------------------------------------------------------------------
  1825                           ;! (1) _displayFIFO                                          0     0      0       0
  1826                           ;! ---------------------------------------------------------------------------------
  1827                           ;! (1) _currentKey                                           0     0      0       0
  1828                           ;! ---------------------------------------------------------------------------------
  1829                           ;! Estimated maximum stack depth 3
  1830                           ;! ---------------------------------------------------------------------------------
  1831                           ;!
  1832                           ;! Call Graph Graphs:
  1833                           ;!
  1834                           ;! _main (ROOT)
  1835                           ;!   _clearLCD
  1836                           ;!     _cmdLCD
  1837                           ;!   _currentKey
  1838                           ;!   _delFIFO
  1839                           ;!   _displayFIFO
  1840                           ;!   _getFIFO
  1841                           ;!   _initKeyboard
  1842                           ;!   _initLCD
  1843                           ;!     _cmdLCD
  1844                           ;!   _initSerialIO
  1845                           ;!   _keyboardScan
  1846                           ;!   _previousKey
  1847                           ;!   _putFIFO
  1848                           ;!   _resetFIFO
  1849                           ;!     _delFIFO
  1850                           ;!   _restartFIFO
  1851                           ;!   _screen_car
  1852                           ;!     _clearLCD
  1853                           ;!       _cmdLCD
  1854                           ;!     _writeLCD
  1855                           ;!       _displayFIFO (ARG)
  1856                           ;!       _gotoxy (ARG)
  1857                           ;!         _cmdLCD
  1858                           ;!       _putLCD (ARG)
  1859                           ;!   _screen_menu
  1860                           ;!     _writeLCD
  1861                           ;!       _displayFIFO (ARG)
  1862                           ;!       _gotoxy (ARG)
  1863                           ;!         _cmdLCD
  1864                           ;!       _putLCD (ARG)
  1865                           ;!   _serialIOscan
  1866                           ;!     _serialIObyteShift
  1867                           ;!     _serialIOload
  1868                           ;!   _writeLCD
  1869                           ;!     _displayFIFO (ARG)
  1870                           ;!     _gotoxy (ARG)
  1871                           ;!       _cmdLCD
  1872                           ;!     _putLCD (ARG)
  1873                           ;!
  1874                           
  1875                           ;! Address spaces:
  1876                           
  1877                           ;!Name               Size   Autos  Total    Cost      Usage
  1878                           ;!BANK3               60      0       0       9        0.0%
  1879                           ;!BITBANK3            60      0       0       8        0.0%
  1880                           ;!SFR3                 0      0       0       4        0.0%
  1881                           ;!BITSFR3              0      0       0       4        0.0%
  1882                           ;!BANK2               60      0       0      11        0.0%
  1883                           ;!BITBANK2            60      0       0      10        0.0%
  1884                           ;!SFR2                 0      0       0       5        0.0%
  1885                           ;!BITSFR2              0      0       0       5        0.0%
  1886                           ;!BANK1               50      0       0       7        0.0%
  1887                           ;!BITBANK1            50      0       0       6        0.0%
  1888                           ;!SFR1                 0      0       0       2        0.0%
  1889                           ;!BITSFR1              0      0       0       2        0.0%
  1890                           ;!BANK0               50     10      37       5       68.8%
  1891                           ;!BITBANK0            50      0       0       4        0.0%
  1892                           ;!SFR0                 0      0       0       1        0.0%
  1893                           ;!BITSFR0              0      0       0       1        0.0%
  1894                           ;!COMMON               E      D       E       1      100.0%
  1895                           ;!BITCOMMON            E      0       0       0        0.0%
  1896                           ;!CODE                 0      0       0       0        0.0%
  1897                           ;!DATA                 0      0      45      12        0.0%
  1898                           ;!ABS                  0      0      45       3        0.0%
  1899                           ;!NULL                 0      0       0       0        0.0%
  1900                           ;!STACK                0      0       0       2        0.0%
  1901                           ;!EEDATA             100      0       0       0        0.0%
  1902                           
  1903                           	global	_main
  1904                           
  1905 ;; *************** function _main *****************
  1906 ;; Defined at:
  1907 ;;		line 48 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  estado          2   13[BANK0 ] int 
  1912 ;;  rest            1   15[BANK0 ] unsigned char 
  1913 ;;  tecla           1   12[BANK0 ] unsigned char 
  1914 ;;  sensor          1   11[BANK0 ] struct .
  1915 ;;  atuador         1   10[BANK0 ] struct .
  1916 ;;  d               1    9[BANK0 ] unsigned char 
  1917 ;;  c               1    8[BANK0 ] unsigned char 
  1918 ;;  b               1    7[BANK0 ] unsigned char 
  1919 ;;  a               1    6[BANK0 ] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : B00/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1929 ;;      Params:         0       0       0       0       0
  1930 ;;      Locals:         0      10       0       0       0
  1931 ;;      Temps:          0       3       0       0       0
  1932 ;;      Totals:         0      13       0       0       0
  1933 ;;Total ram usage:       13 bytes
  1934 ;; Hardware stack levels required when called:    4
  1935 ;; This function calls:
  1936 ;;		_clearLCD
  1937 ;;		_currentKey
  1938 ;;		_delFIFO
  1939 ;;		_displayFIFO
  1940 ;;		_getFIFO
  1941 ;;		_initKeyboard
  1942 ;;		_initLCD
  1943 ;;		_initSerialIO
  1944 ;;		_keyboardScan
  1945 ;;		_previousKey
  1946 ;;		_putFIFO
  1947 ;;		_resetFIFO
  1948 ;;		_restartFIFO
  1949 ;;		_screen_car
  1950 ;;		_screen_menu
  1951 ;;		_serialIOscan
  1952 ;;		_writeLCD
  1953 ;; This function is called by:
  1954 ;;		Startup code after reset
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1958                           	file	"main.c"
  1959                           	line	48
  1960                           global __pmaintext
  1961                           __pmaintext:	;psect for function _main
  1962  039F                     psect	maintext
  1963                           	file	"main.c"
  1964                           	line	48
  1965                           	global	__size_of_main
  1966                           	__size_of_main	equ	__end_of_main-_main
  1967  0446                     	
  1968                           _main:	
  1969  039F                     ;incstack = 0
  1970                           	opt	stack 4
  1971                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1972                           	line	50
  1973                           	
  1974                           l1862:	
  1975  039F                     ;main.c: 50:     unsigned char tecla = 0;
  1976                           	bcf	status, 5	;RP0=0, select bank0
  1977  039F  1283               	bcf	status, 6	;RP1=0, select bank0
  1978  03A0  1303               	clrf	(main@tecla)
  1979  03A1  01D3               	line	51
  1980                           ;main.c: 51:     unsigned char a,b,c,d = 0;
  1981                           	clrf	(main@d)
  1982  03A2  01D0               	line	52
  1983                           ;main.c: 52:     unsigned char rest = 0;
  1984                           	clrf	(main@rest)
  1985  03A3  01D6               	line	55
  1986                           ;main.c: 53:     SENSORESbits_t sensor;;main.c: 54:     ATUADORESbits_t atuador;;main.c:
                                  55:     int estado = 0;
  1987                           	clrf	(main@estado)
  1988  03A4  01D4               	clrf	(main@estado+1)
  1989  03A5  01D5               	line	56
  1990                           	
  1991                           l1864:	
  1992  03A6                     ;main.c: 56:     initLCD();
  1993                           	fcall	_initLCD
  1994  03A6  120A  118A  2282  120A  118A  	line	57
  1995                           	
  1996                           l1866:	
  1997  03AB                     ;main.c: 57:     screen_car();
  1998                           	fcall	_screen_car
  1999  03AB  120A  118A  220B  120A  118A  	line	58
  2000                           	
  2001                           l1868:	
  2002  03B0                     ;main.c: 58:     initKeyboard();
  2003                           	fcall	_initKeyboard
  2004  03B0  120A  118A  20CD  120A  118A  	line	59
  2005                           	
  2006                           l1870:	
  2007  03B5                     ;main.c: 59:     initSerialIO( &sensor, &atuador, 1 );
  2008                           	movlw	(low(main@atuador|((0x0)<<8)))&0ffh
  2009  03B5  3051               	bcf	status, 5	;RP0=0, select bank0
  2010  03B6  1283               	bcf	status, 6	;RP1=0, select bank0
  2011  03B7  1303               	movwf	(??_main+0)+0
  2012  03B8  00CA               	movf	(??_main+0)+0,w
  2013  03B9  084A               	movwf	(initSerialIO@ptrOut)
  2014  03BA  00F0               	clrf	(initSerialIO@length)
  2015  03BB  01F1               	incf	(initSerialIO@length),f
  2016  03BC  0AF1               	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  2017  03BD  3052               	fcall	_initSerialIO
  2018  03BE  120A  118A  21A3  120A  118A  	line	60
  2019                           	
  2020                           l1872:	
  2021  03C3                     ;main.c: 60:     atuador.ABCD = 0x00;
  2022                           	bcf	status, 5	;RP0=0, select bank0
  2023  03C3  1283               	bcf	status, 6	;RP1=0, select bank0
  2024  03C4  1303               	clrf	(main@atuador)
  2025  03C5  01D1               	goto	l1874
  2026  03C6  2BC7               	line	65
  2027                           ;main.c: 65:     while( 1 )
  2028                           	
  2029                           l177:	
  2030  03C7                     	line	71
  2031                           	
  2032                           l1874:	
  2033  03C7                     ;main.c: 66:     {;main.c: 71:         keyboardScan();
  2034                           	fcall	_keyboardScan
  2035  03C7  120A  118A  2320  120A  118A  	line	72
  2036                           	
  2037                           l1876:	
  2038  03CC                     ;main.c: 72:         screen_menu ();
  2039                           	fcall	_screen_menu
  2040  03CC  120A  118A  20A2  120A  118A  	line	73
  2041                           ;main.c: 73:         switch( estado )
  2042                           	goto	l2018
  2043  03D1  2E10               	line	75
  2044                           ;main.c: 74:         {;main.c: 75:             case 0:
  2045                           	
  2046                           l179:	
  2047  03D2                     	line	76
  2048                           ;main.c: 76:                     break;
  2049                           	goto	l2020
  2050  03D2  2E8A               	line	77
  2051                           ;main.c: 77:             case 10:
  2052                           	
  2053                           l181:	
  2054  03D3                     	line	78
  2055                           	
  2056                           l1878:	
  2057  03D3                     ;main.c: 78:                     rest = getFIFO();
  2058                           	fcall	_getFIFO
  2059  03D3  120A  118A  210B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2060  03D8  1283               	bcf	status, 6	;RP1=0, select bank0
  2061  03D9  1303               	movwf	(??_main+0)+0
  2062  03DA  00CA               	movf	(??_main+0)+0,w
  2063  03DB  084A               	movwf	(main@rest)
  2064  03DC  00D6               	line	79
  2065                           	
  2066                           l1880:	
  2067  03DD                     ;main.c: 79:                     if( rest == 'A' )
  2068                           		movlw	65
  2069  03DD  3041               	xorwf	((main@rest)),w
  2070  03DE  0656               	btfss	status,2
  2071  03DF  1D03               	goto	u881
  2072  03E0  2BE2               	goto	u880
  2073  03E1  2BE3               u881:
  2074  03E2                     	goto	l1884
  2075  03E2  2BE8               u880:
  2076  03E3                     	line	80
  2077                           	
  2078                           l1882:	
  2079  03E3                     ;main.c: 80:                         estado = 100;
  2080                           	movlw	064h
  2081  03E3  3064               	movwf	(main@estado)
  2082  03E4  00D4               	movlw	0
  2083  03E5  3000               	movwf	((main@estado))+1
  2084  03E6  00D5               	goto	l2020
  2085  03E7  2E8A               	line	81
  2086                           ;main.c: 81:                     else if( rest == 'B' )
  2087                           	
  2088                           l182:	
  2089  03E8                     	
  2090                           l1884:	
  2091  03E8                     		movlw	66
  2092  03E8  3042               	xorwf	((main@rest)),w
  2093  03E9  0656               	btfss	status,2
  2094  03EA  1D03               	goto	u891
  2095  03EB  2BED               	goto	u890
  2096  03EC  2BEE               u891:
  2097  03ED                     	goto	l1888
  2098  03ED  2BF3               u890:
  2099  03EE                     	line	82
  2100                           	
  2101                           l1886:	
  2102  03EE                     ;main.c: 82:                         estado = 110;
  2103                           	movlw	06Eh
  2104  03EE  306E               	movwf	(main@estado)
  2105  03EF  00D4               	movlw	0
  2106  03F0  3000               	movwf	((main@estado))+1
  2107  03F1  00D5               	goto	l2020
  2108  03F2  2E8A               	line	83
  2109                           ;main.c: 83:                     else if( rest == 'C' )
  2110                           	
  2111                           l184:	
  2112  03F3                     	
  2113                           l1888:	
  2114  03F3                     		movlw	67
  2115  03F3  3043               	xorwf	((main@rest)),w
  2116  03F4  0656               	btfss	status,2
  2117  03F5  1D03               	goto	u901
  2118  03F6  2BF8               	goto	u900
  2119  03F7  2BF9               u901:
  2120  03F8                     	goto	l1892
  2121  03F8  2BFE               u900:
  2122  03F9                     	line	84
  2123                           	
  2124                           l1890:	
  2125  03F9                     ;main.c: 84:                         estado = 120;
  2126                           	movlw	078h
  2127  03F9  3078               	movwf	(main@estado)
  2128  03FA  00D4               	movlw	0
  2129  03FB  3000               	movwf	((main@estado))+1
  2130  03FC  00D5               	goto	l2020
  2131  03FD  2E8A               	line	85
  2132                           ;main.c: 85:                     else if( rest == 'D' )
  2133                           	
  2134                           l186:	
  2135  03FE                     	
  2136                           l1892:	
  2137  03FE                     		movlw	68
  2138  03FE  3044               	xorwf	((main@rest)),w
  2139  03FF  0656               	btfss	status,2
  2140  0400  1D03               	goto	u911
  2141  0401  2C03               	goto	u910
  2142  0402  2C04               u911:
  2143  0403                     	goto	l1896
  2144  0403  2C09               u910:
  2145  0404                     	line	86
  2146                           	
  2147                           l1894:	
  2148  0404                     ;main.c: 86:                         estado = 130;
  2149                           	movlw	082h
  2150  0404  3082               	movwf	(main@estado)
  2151  0405  00D4               	movlw	0
  2152  0406  3000               	movwf	((main@estado))+1
  2153  0407  00D5               	goto	l2020
  2154  0408  2E8A               	line	87
  2155                           ;main.c: 87:                     else if( rest == '1' )
  2156                           	
  2157                           l188:	
  2158  0409                     	
  2159                           l1896:	
  2160  0409                     		movlw	49
  2161  0409  3031               	xorwf	((main@rest)),w
  2162  040A  0656               	btfss	status,2
  2163  040B  1D03               	goto	u921
  2164  040C  2C0E               	goto	u920
  2165  040D  2C0F               u921:
  2166  040E                     	goto	l1900
  2167  040E  2C14               u920:
  2168  040F                     	line	88
  2169                           	
  2170                           l1898:	
  2171  040F                     ;main.c: 88:                         estado = 140;
  2172                           	movlw	08Ch
  2173  040F  308C               	movwf	(main@estado)
  2174  0410  00D4               	movlw	0
  2175  0411  3000               	movwf	((main@estado))+1
  2176  0412  00D5               	goto	l2020
  2177  0413  2E8A               	line	89
  2178                           ;main.c: 89:                     else if( rest == '2' )
  2179                           	
  2180                           l190:	
  2181  0414                     	
  2182                           l1900:	
  2183  0414                     		movlw	50
  2184  0414  3032               	xorwf	((main@rest)),w
  2185  0415  0656               	btfss	status,2
  2186  0416  1D03               	goto	u931
  2187  0417  2C19               	goto	u930
  2188  0418  2C1A               u931:
  2189  0419                     	goto	l1904
  2190  0419  2C1F               u930:
  2191  041A                     	line	90
  2192                           	
  2193                           l1902:	
  2194  041A                     ;main.c: 90:                         estado = 150;
  2195                           	movlw	096h
  2196  041A  3096               	movwf	(main@estado)
  2197  041B  00D4               	movlw	0
  2198  041C  3000               	movwf	((main@estado))+1
  2199  041D  00D5               	goto	l2020
  2200  041E  2E8A               	line	91
  2201                           ;main.c: 91:                     else if( rest == '3' )
  2202                           	
  2203                           l192:	
  2204  041F                     	
  2205                           l1904:	
  2206  041F                     		movlw	51
  2207  041F  3033               	xorwf	((main@rest)),w
  2208  0420  0656               	btfss	status,2
  2209  0421  1D03               	goto	u941
  2210  0422  2C24               	goto	u940
  2211  0423  2C25               u941:
  2212  0424                     	goto	l1908
  2213  0424  2C2A               u940:
  2214  0425                     	line	92
  2215                           	
  2216                           l1906:	
  2217  0425                     ;main.c: 92:                         estado = 160;
  2218                           	movlw	0A0h
  2219  0425  30A0               	movwf	(main@estado)
  2220  0426  00D4               	movlw	0
  2221  0427  3000               	movwf	((main@estado))+1
  2222  0428  00D5               	goto	l2020
  2223  0429  2E8A               	line	93
  2224                           ;main.c: 93:                     else if( rest == '4' )
  2225                           	
  2226                           l194:	
  2227  042A                     	
  2228                           l1908:	
  2229  042A                     		movlw	52
  2230  042A  3034               	xorwf	((main@rest)),w
  2231  042B  0656               	btfss	status,2
  2232  042C  1D03               	goto	u951
  2233  042D  2C2F               	goto	u950
  2234  042E  2C30               u951:
  2235  042F                     	goto	l1912
  2236  042F  2C35               u950:
  2237  0430                     	line	94
  2238                           	
  2239                           l1910:	
  2240  0430                     ;main.c: 94:                         estado = 170;
  2241                           	movlw	0AAh
  2242  0430  30AA               	movwf	(main@estado)
  2243  0431  00D4               	movlw	0
  2244  0432  3000               	movwf	((main@estado))+1
  2245  0433  00D5               	goto	l2020
  2246  0434  2E8A               	line	95
  2247                           ;main.c: 95:                     else if( rest == '5' )
  2248                           	
  2249                           l196:	
  2250  0435                     	
  2251                           l1912:	
  2252  0435                     		movlw	53
  2253  0435  3035               	xorwf	((main@rest)),w
  2254  0436  0656               	btfss	status,2
  2255  0437  1D03               	goto	u961
  2256  0438  2C3A               	goto	u960
  2257  0439  2C3B               u961:
  2258  043A                     	goto	l1916
  2259  043A  2C40               u960:
  2260  043B                     	line	96
  2261                           	
  2262                           l1914:	
  2263  043B                     ;main.c: 96:                         estado = 180;
  2264                           	movlw	0B4h
  2265  043B  30B4               	movwf	(main@estado)
  2266  043C  00D4               	movlw	0
  2267  043D  3000               	movwf	((main@estado))+1
  2268  043E  00D5               	goto	l2020
  2269  043F  2E8A               	line	97
  2270                           ;main.c: 97:                     else if( rest == '6' )
  2271                           	
  2272                           l198:	
  2273  0440                     	
  2274                           l1916:	
  2275  0440                     		movlw	54
  2276  0440  3036               	xorwf	((main@rest)),w
  2277  0441  0656               	btfss	status,2
  2278  0442  1D03               	goto	u971
  2279  0443  2C45               	goto	u970
  2280  0444  2C46               u971:
  2281  0445                     	goto	l1920
  2282  0445  2C4B               u970:
  2283  0446                     	line	98
  2284                           	
  2285                           l1918:	
  2286  0446                     ;main.c: 98:                         estado = 190;
  2287                           	movlw	0BEh
  2288  0446  30BE               	movwf	(main@estado)
  2289  0447  00D4               	movlw	0
  2290  0448  3000               	movwf	((main@estado))+1
  2291  0449  00D5               	goto	l2020
  2292  044A  2E8A               	line	99
  2293                           ;main.c: 99:                     else if( rest == '7' )
  2294                           	
  2295                           l200:	
  2296  044B                     	
  2297                           l1920:	
  2298  044B                     		movlw	55
  2299  044B  3037               	xorwf	((main@rest)),w
  2300  044C  0656               	btfss	status,2
  2301  044D  1D03               	goto	u981
  2302  044E  2C50               	goto	u980
  2303  044F  2C51               u981:
  2304  0450                     	goto	l1924
  2305  0450  2C56               u980:
  2306  0451                     	line	100
  2307                           	
  2308                           l1922:	
  2309  0451                     ;main.c: 100:                         estado = 200;
  2310                           	movlw	0C8h
  2311  0451  30C8               	movwf	(main@estado)
  2312  0452  00D4               	movlw	0
  2313  0453  3000               	movwf	((main@estado))+1
  2314  0454  00D5               	goto	l2020
  2315  0455  2E8A               	line	101
  2316                           ;main.c: 101:                     else if( rest == '8' )
  2317                           	
  2318                           l202:	
  2319  0456                     	
  2320                           l1924:	
  2321  0456                     		movlw	56
  2322  0456  3038               	xorwf	((main@rest)),w
  2323  0457  0656               	btfss	status,2
  2324  0458  1D03               	goto	u991
  2325  0459  2C5B               	goto	u990
  2326  045A  2C5C               u991:
  2327  045B                     	goto	l1928
  2328  045B  2C61               u990:
  2329  045C                     	line	102
  2330                           	
  2331                           l1926:	
  2332  045C                     ;main.c: 102:                         estado = 210;
  2333                           	movlw	0D2h
  2334  045C  30D2               	movwf	(main@estado)
  2335  045D  00D4               	movlw	0
  2336  045E  3000               	movwf	((main@estado))+1
  2337  045F  00D5               	goto	l2020
  2338  0460  2E8A               	line	103
  2339                           ;main.c: 103:                     else if( rest == '9' )
  2340                           	
  2341                           l204:	
  2342  0461                     	
  2343                           l1928:	
  2344  0461                     		movlw	57
  2345  0461  3039               	xorwf	((main@rest)),w
  2346  0462  0656               	btfss	status,2
  2347  0463  1D03               	goto	u1001
  2348  0464  2C66               	goto	u1000
  2349  0465  2C67               u1001:
  2350  0466                     	goto	l1932
  2351  0466  2C6C               u1000:
  2352  0467                     	line	104
  2353                           	
  2354                           l1930:	
  2355  0467                     ;main.c: 104:                         estado = 220;
  2356                           	movlw	0DCh
  2357  0467  30DC               	movwf	(main@estado)
  2358  0468  00D4               	movlw	0
  2359  0469  3000               	movwf	((main@estado))+1
  2360  046A  00D5               	goto	l2020
  2361  046B  2E8A               	line	105
  2362                           ;main.c: 105:                     else if( rest == 'a' )
  2363                           	
  2364                           l206:	
  2365  046C                     	
  2366                           l1932:	
  2367  046C                     		movlw	97
  2368  046C  3061               	xorwf	((main@rest)),w
  2369  046D  0656               	btfss	status,2
  2370  046E  1D03               	goto	u1011
  2371  046F  2C71               	goto	u1010
  2372  0470  2C72               u1011:
  2373  0471                     	goto	l1936
  2374  0471  2C77               u1010:
  2375  0472                     	line	106
  2376                           	
  2377                           l1934:	
  2378  0472                     ;main.c: 106:                         estado = 230;
  2379                           	movlw	0E6h
  2380  0472  30E6               	movwf	(main@estado)
  2381  0473  00D4               	movlw	0
  2382  0474  3000               	movwf	((main@estado))+1
  2383  0475  00D5               	goto	l2020
  2384  0476  2E8A               	line	107
  2385                           ;main.c: 107:                     else if( rest == 'b' )
  2386                           	
  2387                           l208:	
  2388  0477                     	
  2389                           l1936:	
  2390  0477                     		movlw	98
  2391  0477  3062               	xorwf	((main@rest)),w
  2392  0478  0656               	btfss	status,2
  2393  0479  1D03               	goto	u1021
  2394  047A  2C7C               	goto	u1020
  2395  047B  2C7D               u1021:
  2396  047C                     	goto	l1940
  2397  047C  2C82               u1020:
  2398  047D                     	line	108
  2399                           	
  2400                           l1938:	
  2401  047D                     ;main.c: 108:                         estado = 240;
  2402                           	movlw	0F0h
  2403  047D  30F0               	movwf	(main@estado)
  2404  047E  00D4               	movlw	0
  2405  047F  3000               	movwf	((main@estado))+1
  2406  0480  00D5               	goto	l2020
  2407  0481  2E8A               	line	109
  2408                           ;main.c: 109:                     else if( rest == 'c' )
  2409                           	
  2410                           l210:	
  2411  0482                     	
  2412                           l1940:	
  2413  0482                     		movlw	99
  2414  0482  3063               	xorwf	((main@rest)),w
  2415  0483  0656               	btfss	status,2
  2416  0484  1D03               	goto	u1031
  2417  0485  2C87               	goto	u1030
  2418  0486  2C88               u1031:
  2419  0487                     	goto	l1944
  2420  0487  2C8D               u1030:
  2421  0488                     	line	110
  2422                           	
  2423                           l1942:	
  2424  0488                     ;main.c: 110:                         estado = 250;
  2425                           	movlw	0FAh
  2426  0488  30FA               	movwf	(main@estado)
  2427  0489  00D4               	movlw	0
  2428  048A  3000               	movwf	((main@estado))+1
  2429  048B  00D5               	goto	l2020
  2430  048C  2E8A               	line	111
  2431                           ;main.c: 111:                     else if( rest == 'd' )
  2432                           	
  2433                           l212:	
  2434  048D                     	
  2435                           l1944:	
  2436  048D                     		movlw	100
  2437  048D  3064               	xorwf	((main@rest)),w
  2438  048E  0656               	btfss	status,2
  2439  048F  1D03               	goto	u1041
  2440  0490  2C92               	goto	u1040
  2441  0491  2C93               u1041:
  2442  0492                     	goto	l2020
  2443  0492  2E8A               u1040:
  2444  0493                     	line	112
  2445                           	
  2446                           l1946:	
  2447  0493                     ;main.c: 112:                         estado = 260;
  2448                           	movlw	04h
  2449  0493  3004               	movwf	(main@estado)
  2450  0494  00D4               	movlw	01h
  2451  0495  3001               	movwf	((main@estado))+1
  2452  0496  00D5               	goto	l2020
  2453  0497  2E8A               	
  2454                           l214:	
  2455  0498                     	goto	l2020
  2456  0498  2E8A               	
  2457                           l213:	
  2458  0499                     	goto	l2020
  2459  0499  2E8A               	
  2460                           l211:	
  2461  049A                     	goto	l2020
  2462  049A  2E8A               	
  2463                           l209:	
  2464  049B                     	goto	l2020
  2465  049B  2E8A               	
  2466                           l207:	
  2467  049C                     	goto	l2020
  2468  049C  2E8A               	
  2469                           l205:	
  2470  049D                     	goto	l2020
  2471  049D  2E8A               	
  2472                           l203:	
  2473  049E                     	goto	l2020
  2474  049E  2E8A               	
  2475                           l201:	
  2476  049F                     	goto	l2020
  2477  049F  2E8A               	
  2478                           l199:	
  2479  04A0                     	goto	l2020
  2480  04A0  2E8A               	
  2481                           l197:	
  2482  04A1                     	goto	l2020
  2483  04A1  2E8A               	
  2484                           l195:	
  2485  04A2                     	goto	l2020
  2486  04A2  2E8A               	
  2487                           l193:	
  2488  04A3                     	goto	l2020
  2489  04A3  2E8A               	
  2490                           l191:	
  2491  04A4                     	goto	l2020
  2492  04A4  2E8A               	
  2493                           l189:	
  2494  04A5                     	goto	l2020
  2495  04A5  2E8A               	
  2496                           l187:	
  2497  04A6                     	goto	l2020
  2498  04A6  2E8A               	
  2499                           l185:	
  2500  04A7                     	goto	l2020
  2501  04A7  2E8A               	
  2502                           l183:	
  2503  04A8                     	line	113
  2504                           ;main.c: 113:                     break;
  2505                           	goto	l2020
  2506  04A8  2E8A               	line	114
  2507                           ;main.c: 114:             case 100:
  2508                           	
  2509                           l215:	
  2510  04A9                     	line	115
  2511                           ;main.c: 115:                     atuador.A = 1;
  2512                           	bsf	(main@atuador),0
  2513  04A9  1451               	line	116
  2514                           	
  2515                           l1948:	
  2516  04AA                     ;main.c: 116:                     estado = 101;
  2517                           	movlw	065h
  2518  04AA  3065               	movwf	(main@estado)
  2519  04AB  00D4               	movlw	0
  2520  04AC  3000               	movwf	((main@estado))+1
  2521  04AD  00D5               	line	117
  2522                           ;main.c: 117:                     break;
  2523                           	goto	l2020
  2524  04AE  2E8A               	line	118
  2525                           ;main.c: 118:             case 101:
  2526                           	
  2527                           l216:	
  2528  04AF                     	line	119
  2529                           ;main.c: 119:                     if( sensor.A1 == 1)
  2530                           	btfss	(main@sensor),1
  2531  04AF  1CD2               	goto	u1051
  2532  04B0  2CB2               	goto	u1050
  2533  04B1  2CB3               u1051:
  2534  04B2                     	goto	l2020
  2535  04B2  2E8A               u1050:
  2536  04B3                     	line	120
  2537                           	
  2538                           l1950:	
  2539  04B3                     ;main.c: 120:                         estado = 10;
  2540                           	movlw	0Ah
  2541  04B3  300A               	movwf	(main@estado)
  2542  04B4  00D4               	movlw	0
  2543  04B5  3000               	movwf	((main@estado))+1
  2544  04B6  00D5               	goto	l2020
  2545  04B7  2E8A               	
  2546                           l217:	
  2547  04B8                     	line	121
  2548                           ;main.c: 121:                     break;
  2549                           	goto	l2020
  2550  04B8  2E8A               	line	122
  2551                           ;main.c: 122:             case 110:
  2552                           	
  2553                           l218:	
  2554  04B9                     	line	123
  2555                           ;main.c: 123:                     atuador.B = 1;
  2556                           	bsf	(main@atuador),1
  2557  04B9  14D1               	line	124
  2558                           	
  2559                           l1952:	
  2560  04BA                     ;main.c: 124:                     estado = 111;
  2561                           	movlw	06Fh
  2562  04BA  306F               	movwf	(main@estado)
  2563  04BB  00D4               	movlw	0
  2564  04BC  3000               	movwf	((main@estado))+1
  2565  04BD  00D5               	line	125
  2566                           ;main.c: 125:                     break;
  2567                           	goto	l2020
  2568  04BE  2E8A               	line	126
  2569                           ;main.c: 126:             case 111:
  2570                           	
  2571                           l219:	
  2572  04BF                     	line	127
  2573                           ;main.c: 127:                     if( sensor.B1 == 1)
  2574                           	btfss	(main@sensor),3
  2575  04BF  1DD2               	goto	u1061
  2576  04C0  2CC2               	goto	u1060
  2577  04C1  2CC3               u1061:
  2578  04C2                     	goto	l2020
  2579  04C2  2E8A               u1060:
  2580  04C3                     	line	128
  2581                           	
  2582                           l1954:	
  2583  04C3                     ;main.c: 128:                         estado = 10;
  2584                           	movlw	0Ah
  2585  04C3  300A               	movwf	(main@estado)
  2586  04C4  00D4               	movlw	0
  2587  04C5  3000               	movwf	((main@estado))+1
  2588  04C6  00D5               	goto	l2020
  2589  04C7  2E8A               	
  2590                           l220:	
  2591  04C8                     	line	129
  2592                           ;main.c: 129:                     break;
  2593                           	goto	l2020
  2594  04C8  2E8A               	line	130
  2595                           ;main.c: 130:             case 120:
  2596                           	
  2597                           l221:	
  2598  04C9                     	line	131
  2599                           ;main.c: 131:                     atuador.C = 1;
  2600                           	bsf	(main@atuador),2
  2601  04C9  1551               	line	132
  2602                           	
  2603                           l1956:	
  2604  04CA                     ;main.c: 132:                     estado = 121;
  2605                           	movlw	079h
  2606  04CA  3079               	movwf	(main@estado)
  2607  04CB  00D4               	movlw	0
  2608  04CC  3000               	movwf	((main@estado))+1
  2609  04CD  00D5               	line	133
  2610                           ;main.c: 133:                     break;
  2611                           	goto	l2020
  2612  04CE  2E8A               	line	134
  2613                           ;main.c: 134:             case 121:
  2614                           	
  2615                           l222:	
  2616  04CF                     	line	135
  2617                           ;main.c: 135:                     if( sensor.C1 == 1)
  2618                           	btfss	(main@sensor),5
  2619  04CF  1ED2               	goto	u1071
  2620  04D0  2CD2               	goto	u1070
  2621  04D1  2CD3               u1071:
  2622  04D2                     	goto	l2020
  2623  04D2  2E8A               u1070:
  2624  04D3                     	line	136
  2625                           	
  2626                           l1958:	
  2627  04D3                     ;main.c: 136:                         estado = 10;
  2628                           	movlw	0Ah
  2629  04D3  300A               	movwf	(main@estado)
  2630  04D4  00D4               	movlw	0
  2631  04D5  3000               	movwf	((main@estado))+1
  2632  04D6  00D5               	goto	l2020
  2633  04D7  2E8A               	
  2634                           l223:	
  2635  04D8                     	line	137
  2636                           ;main.c: 137:                     break;
  2637                           	goto	l2020
  2638  04D8  2E8A               	line	138
  2639                           ;main.c: 138:             case 130:
  2640                           	
  2641                           l224:	
  2642  04D9                     	line	139
  2643                           ;main.c: 139:                     atuador.D = 1;
  2644                           	bsf	(main@atuador),3
  2645  04D9  15D1               	line	140
  2646                           	
  2647                           l1960:	
  2648  04DA                     ;main.c: 140:                     estado = 131;
  2649                           	movlw	083h
  2650  04DA  3083               	movwf	(main@estado)
  2651  04DB  00D4               	movlw	0
  2652  04DC  3000               	movwf	((main@estado))+1
  2653  04DD  00D5               	line	141
  2654                           ;main.c: 141:                     break;
  2655                           	goto	l2020
  2656  04DE  2E8A               	line	142
  2657                           ;main.c: 142:             case 131:
  2658                           	
  2659                           l225:	
  2660  04DF                     	line	143
  2661                           	
  2662                           l1962:	
  2663  04DF                     ;main.c: 143:                     estado = 10;
  2664                           	movlw	0Ah
  2665  04DF  300A               	movwf	(main@estado)
  2666  04E0  00D4               	movlw	0
  2667  04E1  3000               	movwf	((main@estado))+1
  2668  04E2  00D5               	line	144
  2669                           ;main.c: 144:                     break;
  2670                           	goto	l2020
  2671  04E3  2E8A               	line	145
  2672                           ;main.c: 145:             case 140:
  2673                           	
  2674                           l226:	
  2675  04E4                     	line	146
  2676                           	
  2677                           l1964:	
  2678  04E4                     ;main.c: 146:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2679                           	opt asmopt_push
  2680                           opt asmopt_off
  2681                           movlw  6
  2682  04E4  3006               	bcf	status, 5	;RP0=0, select bank0
  2683  04E5  1283               	bcf	status, 6	;RP1=0, select bank0
  2684  04E6  1303               movwf	((??_main+0)+0+2),f
  2685  04E7  00CC               movlw	19
  2686  04E8  3013               movwf	((??_main+0)+0+1),f
  2687  04E9  00CB               	movlw	173
  2688  04EA  30AD               movwf	((??_main+0)+0),f
  2689  04EB  00CA               	u1177:
  2690  04EC                     decfsz	((??_main+0)+0),f
  2691  04EC  0BCA               	goto	u1177
  2692  04ED  2CEC               	decfsz	((??_main+0)+0+1),f
  2693  04EE  0BCB               	goto	u1177
  2694  04EF  2CEC               	decfsz	((??_main+0)+0+2),f
  2695  04F0  0BCC               	goto	u1177
  2696  04F1  2CEC               opt asmopt_pop
  2697                           
  2698                           	line	147
  2699                           ;main.c: 147:                     estado = 141;
  2700                           	movlw	08Dh
  2701  04F2  308D               	bcf	status, 5	;RP0=0, select bank0
  2702  04F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2703  04F4  1303               	movwf	(main@estado)
  2704  04F5  00D4               	movlw	0
  2705  04F6  3000               	movwf	((main@estado))+1
  2706  04F7  00D5               	line	148
  2707                           ;main.c: 148:                     break;
  2708                           	goto	l2020
  2709  04F8  2E8A               	line	149
  2710                           ;main.c: 149:             case 141:
  2711                           	
  2712                           l227:	
  2713  04F9                     	line	150
  2714                           	
  2715                           l1966:	
  2716  04F9                     ;main.c: 150:                     estado = 10;
  2717                           	movlw	0Ah
  2718  04F9  300A               	movwf	(main@estado)
  2719  04FA  00D4               	movlw	0
  2720  04FB  3000               	movwf	((main@estado))+1
  2721  04FC  00D5               	line	151
  2722                           ;main.c: 151:                     break;
  2723                           	goto	l2020
  2724  04FD  2E8A               	line	152
  2725                           ;main.c: 152:             case 150:
  2726                           	
  2727                           l228:	
  2728  04FE                     	line	153
  2729                           	
  2730                           l1968:	
  2731  04FE                     ;main.c: 153:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2732                           	opt asmopt_push
  2733                           opt asmopt_off
  2734                           movlw  11
  2735  04FE  300B               	bcf	status, 5	;RP0=0, select bank0
  2736  04FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2737  0500  1303               movwf	((??_main+0)+0+2),f
  2738  0501  00CC               movlw	38
  2739  0502  3026               movwf	((??_main+0)+0+1),f
  2740  0503  00CB               	movlw	93
  2741  0504  305D               movwf	((??_main+0)+0),f
  2742  0505  00CA               	u1187:
  2743  0506                     decfsz	((??_main+0)+0),f
  2744  0506  0BCA               	goto	u1187
  2745  0507  2D06               	decfsz	((??_main+0)+0+1),f
  2746  0508  0BCB               	goto	u1187
  2747  0509  2D06               	decfsz	((??_main+0)+0+2),f
  2748  050A  0BCC               	goto	u1187
  2749  050B  2D06               opt asmopt_pop
  2750                           
  2751                           	line	154
  2752                           ;main.c: 154:                     estado = 151;
  2753                           	movlw	097h
  2754  050C  3097               	bcf	status, 5	;RP0=0, select bank0
  2755  050D  1283               	bcf	status, 6	;RP1=0, select bank0
  2756  050E  1303               	movwf	(main@estado)
  2757  050F  00D4               	movlw	0
  2758  0510  3000               	movwf	((main@estado))+1
  2759  0511  00D5               	line	155
  2760                           ;main.c: 155:                     break;
  2761                           	goto	l2020
  2762  0512  2E8A               	line	156
  2763                           ;main.c: 156:             case 151:
  2764                           	
  2765                           l229:	
  2766  0513                     	line	157
  2767                           	
  2768                           l1970:	
  2769  0513                     ;main.c: 157:                     estado = 10;
  2770                           	movlw	0Ah
  2771  0513  300A               	movwf	(main@estado)
  2772  0514  00D4               	movlw	0
  2773  0515  3000               	movwf	((main@estado))+1
  2774  0516  00D5               	line	158
  2775                           ;main.c: 158:                     break;
  2776                           	goto	l2020
  2777  0517  2E8A               	line	159
  2778                           ;main.c: 159:             case 160:
  2779                           	
  2780                           l230:	
  2781  0518                     	line	160
  2782                           	
  2783                           l1972:	
  2784  0518                     ;main.c: 160:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  2785                           	opt asmopt_push
  2786                           opt asmopt_off
  2787                           movlw  16
  2788  0518  3010               	bcf	status, 5	;RP0=0, select bank0
  2789  0519  1283               	bcf	status, 6	;RP1=0, select bank0
  2790  051A  1303               movwf	((??_main+0)+0+2),f
  2791  051B  00CC               movlw	57
  2792  051C  3039               movwf	((??_main+0)+0+1),f
  2793  051D  00CB               	movlw	13
  2794  051E  300D               movwf	((??_main+0)+0),f
  2795  051F  00CA               	u1197:
  2796  0520                     decfsz	((??_main+0)+0),f
  2797  0520  0BCA               	goto	u1197
  2798  0521  2D20               	decfsz	((??_main+0)+0+1),f
  2799  0522  0BCB               	goto	u1197
  2800  0523  2D20               	decfsz	((??_main+0)+0+2),f
  2801  0524  0BCC               	goto	u1197
  2802  0525  2D20               opt asmopt_pop
  2803                           
  2804                           	line	161
  2805                           ;main.c: 161:                     estado = 161;
  2806                           	movlw	0A1h
  2807  0526  30A1               	bcf	status, 5	;RP0=0, select bank0
  2808  0527  1283               	bcf	status, 6	;RP1=0, select bank0
  2809  0528  1303               	movwf	(main@estado)
  2810  0529  00D4               	movlw	0
  2811  052A  3000               	movwf	((main@estado))+1
  2812  052B  00D5               	line	162
  2813                           ;main.c: 162:                     break;
  2814                           	goto	l2020
  2815  052C  2E8A               	line	163
  2816                           ;main.c: 163:             case 161:
  2817                           	
  2818                           l231:	
  2819  052D                     	line	164
  2820                           	
  2821                           l1974:	
  2822  052D                     ;main.c: 164:                     estado = 10;
  2823                           	movlw	0Ah
  2824  052D  300A               	movwf	(main@estado)
  2825  052E  00D4               	movlw	0
  2826  052F  3000               	movwf	((main@estado))+1
  2827  0530  00D5               	line	165
  2828                           ;main.c: 165:                     break;
  2829                           	goto	l2020
  2830  0531  2E8A               	line	166
  2831                           ;main.c: 166:             case 170:
  2832                           	
  2833                           l232:	
  2834  0532                     	line	167
  2835                           	
  2836                           l1976:	
  2837  0532                     ;main.c: 167:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  2838                           	opt asmopt_push
  2839                           opt asmopt_off
  2840                           movlw  21
  2841  0532  3015               	bcf	status, 5	;RP0=0, select bank0
  2842  0533  1283               	bcf	status, 6	;RP1=0, select bank0
  2843  0534  1303               movwf	((??_main+0)+0+2),f
  2844  0535  00CC               movlw	75
  2845  0536  304B               movwf	((??_main+0)+0+1),f
  2846  0537  00CB               	movlw	189
  2847  0538  30BD               movwf	((??_main+0)+0),f
  2848  0539  00CA               	u1207:
  2849  053A                     decfsz	((??_main+0)+0),f
  2850  053A  0BCA               	goto	u1207
  2851  053B  2D3A               	decfsz	((??_main+0)+0+1),f
  2852  053C  0BCB               	goto	u1207
  2853  053D  2D3A               	decfsz	((??_main+0)+0+2),f
  2854  053E  0BCC               	goto	u1207
  2855  053F  2D3A               	nop2
  2856  0540  2D41               opt asmopt_pop
  2857                           
  2858                           	line	168
  2859                           ;main.c: 168:                     estado = 171;
  2860                           	movlw	0ABh
  2861  0541  30AB               	bcf	status, 5	;RP0=0, select bank0
  2862  0542  1283               	bcf	status, 6	;RP1=0, select bank0
  2863  0543  1303               	movwf	(main@estado)
  2864  0544  00D4               	movlw	0
  2865  0545  3000               	movwf	((main@estado))+1
  2866  0546  00D5               	line	169
  2867                           ;main.c: 169:                     break;
  2868                           	goto	l2020
  2869  0547  2E8A               	line	170
  2870                           ;main.c: 170:             case 171:
  2871                           	
  2872                           l233:	
  2873  0548                     	line	171
  2874                           	
  2875                           l1978:	
  2876  0548                     ;main.c: 171:                     estado = 10;
  2877                           	movlw	0Ah
  2878  0548  300A               	movwf	(main@estado)
  2879  0549  00D4               	movlw	0
  2880  054A  3000               	movwf	((main@estado))+1
  2881  054B  00D5               	line	172
  2882                           ;main.c: 172:                     break;
  2883                           	goto	l2020
  2884  054C  2E8A               	line	173
  2885                           ;main.c: 173:             case 180:
  2886                           	
  2887                           l234:	
  2888  054D                     	line	174
  2889                           	
  2890                           l1980:	
  2891  054D                     ;main.c: 174:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
  2892                           	opt asmopt_push
  2893                           opt asmopt_off
  2894                           movlw  26
  2895  054D  301A               	bcf	status, 5	;RP0=0, select bank0
  2896  054E  1283               	bcf	status, 6	;RP1=0, select bank0
  2897  054F  1303               movwf	((??_main+0)+0+2),f
  2898  0550  00CC               movlw	94
  2899  0551  305E               movwf	((??_main+0)+0+1),f
  2900  0552  00CB               	movlw	109
  2901  0553  306D               movwf	((??_main+0)+0),f
  2902  0554  00CA               	u1217:
  2903  0555                     decfsz	((??_main+0)+0),f
  2904  0555  0BCA               	goto	u1217
  2905  0556  2D55               	decfsz	((??_main+0)+0+1),f
  2906  0557  0BCB               	goto	u1217
  2907  0558  2D55               	decfsz	((??_main+0)+0+2),f
  2908  0559  0BCC               	goto	u1217
  2909  055A  2D55               	nop2
  2910  055B  2D5C               opt asmopt_pop
  2911                           
  2912                           	line	175
  2913                           ;main.c: 175:                     estado = 181;
  2914                           	movlw	0B5h
  2915  055C  30B5               	bcf	status, 5	;RP0=0, select bank0
  2916  055D  1283               	bcf	status, 6	;RP1=0, select bank0
  2917  055E  1303               	movwf	(main@estado)
  2918  055F  00D4               	movlw	0
  2919  0560  3000               	movwf	((main@estado))+1
  2920  0561  00D5               	line	176
  2921                           ;main.c: 176:                     break;
  2922                           	goto	l2020
  2923  0562  2E8A               	line	177
  2924                           ;main.c: 177:             case 181:
  2925                           	
  2926                           l235:	
  2927  0563                     	line	178
  2928                           	
  2929                           l1982:	
  2930  0563                     ;main.c: 178:                     estado = 10;
  2931                           	movlw	0Ah
  2932  0563  300A               	movwf	(main@estado)
  2933  0564  00D4               	movlw	0
  2934  0565  3000               	movwf	((main@estado))+1
  2935  0566  00D5               	line	179
  2936                           ;main.c: 179:                     break;
  2937                           	goto	l2020
  2938  0567  2E8A               	line	180
  2939                           ;main.c: 180:             case 190:
  2940                           	
  2941                           l236:	
  2942  0568                     	line	181
  2943                           	
  2944                           l1984:	
  2945  0568                     ;main.c: 181:                     _delay((unsigned long)((6000)*(4000000/4000.0)));
  2946                           	opt asmopt_push
  2947                           opt asmopt_off
  2948                           movlw  31
  2949  0568  301F               	bcf	status, 5	;RP0=0, select bank0
  2950  0569  1283               	bcf	status, 6	;RP1=0, select bank0
  2951  056A  1303               movwf	((??_main+0)+0+2),f
  2952  056B  00CC               movlw	113
  2953  056C  3071               movwf	((??_main+0)+0+1),f
  2954  056D  00CB               	movlw	29
  2955  056E  301D               movwf	((??_main+0)+0),f
  2956  056F  00CA               	u1227:
  2957  0570                     decfsz	((??_main+0)+0),f
  2958  0570  0BCA               	goto	u1227
  2959  0571  2D70               	decfsz	((??_main+0)+0+1),f
  2960  0572  0BCB               	goto	u1227
  2961  0573  2D70               	decfsz	((??_main+0)+0+2),f
  2962  0574  0BCC               	goto	u1227
  2963  0575  2D70               	nop2
  2964  0576  2D77               opt asmopt_pop
  2965                           
  2966                           	line	182
  2967                           ;main.c: 182:                     estado = 191;
  2968                           	movlw	0BFh
  2969  0577  30BF               	bcf	status, 5	;RP0=0, select bank0
  2970  0578  1283               	bcf	status, 6	;RP1=0, select bank0
  2971  0579  1303               	movwf	(main@estado)
  2972  057A  00D4               	movlw	0
  2973  057B  3000               	movwf	((main@estado))+1
  2974  057C  00D5               	line	183
  2975                           ;main.c: 183:                     break;
  2976                           	goto	l2020
  2977  057D  2E8A               	line	184
  2978                           ;main.c: 184:             case 191:
  2979                           	
  2980                           l237:	
  2981  057E                     	line	185
  2982                           	
  2983                           l1986:	
  2984  057E                     ;main.c: 185:                     estado = 10;
  2985                           	movlw	0Ah
  2986  057E  300A               	movwf	(main@estado)
  2987  057F  00D4               	movlw	0
  2988  0580  3000               	movwf	((main@estado))+1
  2989  0581  00D5               	line	186
  2990                           ;main.c: 186:                     break;
  2991                           	goto	l2020
  2992  0582  2E8A               	line	187
  2993                           ;main.c: 187:             case 200:
  2994                           	
  2995                           l238:	
  2996  0583                     	line	188
  2997                           	
  2998                           l1988:	
  2999  0583                     ;main.c: 188:                     _delay((unsigned long)((7000)*(4000000/4000.0)));
  3000                           	opt asmopt_push
  3001                           opt asmopt_off
  3002                           movlw  36
  3003  0583  3024               	bcf	status, 5	;RP0=0, select bank0
  3004  0584  1283               	bcf	status, 6	;RP1=0, select bank0
  3005  0585  1303               movwf	((??_main+0)+0+2),f
  3006  0586  00CC               movlw	131
  3007  0587  3083               movwf	((??_main+0)+0+1),f
  3008  0588  00CB               	movlw	206
  3009  0589  30CE               movwf	((??_main+0)+0),f
  3010  058A  00CA               	u1237:
  3011  058B                     decfsz	((??_main+0)+0),f
  3012  058B  0BCA               	goto	u1237
  3013  058C  2D8B               	decfsz	((??_main+0)+0+1),f
  3014  058D  0BCB               	goto	u1237
  3015  058E  2D8B               	decfsz	((??_main+0)+0+2),f
  3016  058F  0BCC               	goto	u1237
  3017  0590  2D8B               	nop
  3018  0591  0000               opt asmopt_pop
  3019                           
  3020                           	line	189
  3021                           ;main.c: 189:                     estado = 201;
  3022                           	movlw	0C9h
  3023  0592  30C9               	bcf	status, 5	;RP0=0, select bank0
  3024  0593  1283               	bcf	status, 6	;RP1=0, select bank0
  3025  0594  1303               	movwf	(main@estado)
  3026  0595  00D4               	movlw	0
  3027  0596  3000               	movwf	((main@estado))+1
  3028  0597  00D5               	line	190
  3029                           ;main.c: 190:                     break;
  3030                           	goto	l2020
  3031  0598  2E8A               	line	191
  3032                           ;main.c: 191:             case 201:
  3033                           	
  3034                           l239:	
  3035  0599                     	line	192
  3036                           	
  3037                           l1990:	
  3038  0599                     ;main.c: 192:                     estado = 10;
  3039                           	movlw	0Ah
  3040  0599  300A               	movwf	(main@estado)
  3041  059A  00D4               	movlw	0
  3042  059B  3000               	movwf	((main@estado))+1
  3043  059C  00D5               	line	193
  3044                           ;main.c: 193:                     break;
  3045                           	goto	l2020
  3046  059D  2E8A               	line	194
  3047                           ;main.c: 194:             case 210:
  3048                           	
  3049                           l240:	
  3050  059E                     	line	195
  3051                           	
  3052                           l1992:	
  3053  059E                     ;main.c: 195:                     _delay((unsigned long)((8000)*(4000000/4000.0)));
  3054                           	opt asmopt_push
  3055                           opt asmopt_off
  3056                           movlw  41
  3057  059E  3029               	bcf	status, 5	;RP0=0, select bank0
  3058  059F  1283               	bcf	status, 6	;RP1=0, select bank0
  3059  05A0  1303               movwf	((??_main+0)+0+2),f
  3060  05A1  00CC               movlw	150
  3061  05A2  3096               movwf	((??_main+0)+0+1),f
  3062  05A3  00CB               	movlw	126
  3063  05A4  307E               movwf	((??_main+0)+0),f
  3064  05A5  00CA               	u1247:
  3065  05A6                     decfsz	((??_main+0)+0),f
  3066  05A6  0BCA               	goto	u1247
  3067  05A7  2DA6               	decfsz	((??_main+0)+0+1),f
  3068  05A8  0BCB               	goto	u1247
  3069  05A9  2DA6               	decfsz	((??_main+0)+0+2),f
  3070  05AA  0BCC               	goto	u1247
  3071  05AB  2DA6               	nop
  3072  05AC  0000               opt asmopt_pop
  3073                           
  3074                           	line	196
  3075                           ;main.c: 196:                     estado = 211;
  3076                           	movlw	0D3h
  3077  05AD  30D3               	bcf	status, 5	;RP0=0, select bank0
  3078  05AE  1283               	bcf	status, 6	;RP1=0, select bank0
  3079  05AF  1303               	movwf	(main@estado)
  3080  05B0  00D4               	movlw	0
  3081  05B1  3000               	movwf	((main@estado))+1
  3082  05B2  00D5               	line	197
  3083                           ;main.c: 197:                     break;
  3084                           	goto	l2020
  3085  05B3  2E8A               	line	198
  3086                           ;main.c: 198:             case 211:
  3087                           	
  3088                           l241:	
  3089  05B4                     	line	199
  3090                           	
  3091                           l1994:	
  3092  05B4                     ;main.c: 199:                     estado = 10;
  3093                           	movlw	0Ah
  3094  05B4  300A               	movwf	(main@estado)
  3095  05B5  00D4               	movlw	0
  3096  05B6  3000               	movwf	((main@estado))+1
  3097  05B7  00D5               	line	200
  3098                           ;main.c: 200:                     break;
  3099                           	goto	l2020
  3100  05B8  2E8A               	line	201
  3101                           ;main.c: 201:             case 220:
  3102                           	
  3103                           l242:	
  3104  05B9                     	line	202
  3105                           	
  3106                           l1996:	
  3107  05B9                     ;main.c: 202:                     _delay((unsigned long)((9000)*(4000000/4000.0)));
  3108                           	opt asmopt_push
  3109                           opt asmopt_off
  3110                           movlw  46
  3111  05B9  302E               	bcf	status, 5	;RP0=0, select bank0
  3112  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  3113  05BB  1303               movwf	((??_main+0)+0+2),f
  3114  05BC  00CC               movlw	169
  3115  05BD  30A9               movwf	((??_main+0)+0+1),f
  3116  05BE  00CB               	movlw	46
  3117  05BF  302E               movwf	((??_main+0)+0),f
  3118  05C0  00CA               	u1257:
  3119  05C1                     decfsz	((??_main+0)+0),f
  3120  05C1  0BCA               	goto	u1257
  3121  05C2  2DC1               	decfsz	((??_main+0)+0+1),f
  3122  05C3  0BCB               	goto	u1257
  3123  05C4  2DC1               	decfsz	((??_main+0)+0+2),f
  3124  05C5  0BCC               	goto	u1257
  3125  05C6  2DC1               	nop
  3126  05C7  0000               opt asmopt_pop
  3127                           
  3128                           	line	203
  3129                           ;main.c: 203:                     estado = 221;
  3130                           	movlw	0DDh
  3131  05C8  30DD               	bcf	status, 5	;RP0=0, select bank0
  3132  05C9  1283               	bcf	status, 6	;RP1=0, select bank0
  3133  05CA  1303               	movwf	(main@estado)
  3134  05CB  00D4               	movlw	0
  3135  05CC  3000               	movwf	((main@estado))+1
  3136  05CD  00D5               	line	204
  3137                           ;main.c: 204:                     break;
  3138                           	goto	l2020
  3139  05CE  2E8A               	line	205
  3140                           ;main.c: 205:             case 221:
  3141                           	
  3142                           l243:	
  3143  05CF                     	line	206
  3144                           	
  3145                           l1998:	
  3146  05CF                     ;main.c: 206:                     estado = 10;
  3147                           	movlw	0Ah
  3148  05CF  300A               	movwf	(main@estado)
  3149  05D0  00D4               	movlw	0
  3150  05D1  3000               	movwf	((main@estado))+1
  3151  05D2  00D5               	line	207
  3152                           ;main.c: 207:                     break;
  3153                           	goto	l2020
  3154  05D3  2E8A               	line	209
  3155                           ;main.c: 209:             case 230:
  3156                           	
  3157                           l244:	
  3158  05D4                     	line	210
  3159                           ;main.c: 210:                     atuador.A = 0;
  3160                           	bcf	(main@atuador),0
  3161  05D4  1051               	line	211
  3162                           	
  3163                           l2000:	
  3164  05D5                     ;main.c: 211:                     estado = 231;
  3165                           	movlw	0E7h
  3166  05D5  30E7               	movwf	(main@estado)
  3167  05D6  00D4               	movlw	0
  3168  05D7  3000               	movwf	((main@estado))+1
  3169  05D8  00D5               	line	212
  3170                           ;main.c: 212:                     break;
  3171                           	goto	l2020
  3172  05D9  2E8A               	line	213
  3173                           ;main.c: 213:             case 231:
  3174                           	
  3175                           l245:	
  3176  05DA                     	line	214
  3177                           ;main.c: 214:                     if( sensor.A0 == 1)
  3178                           	btfss	(main@sensor),0
  3179  05DA  1C52               	goto	u1081
  3180  05DB  2DDD               	goto	u1080
  3181  05DC  2DDE               u1081:
  3182  05DD                     	goto	l2020
  3183  05DD  2E8A               u1080:
  3184  05DE                     	line	215
  3185                           	
  3186                           l2002:	
  3187  05DE                     ;main.c: 215:                         estado = 10;
  3188                           	movlw	0Ah
  3189  05DE  300A               	movwf	(main@estado)
  3190  05DF  00D4               	movlw	0
  3191  05E0  3000               	movwf	((main@estado))+1
  3192  05E1  00D5               	goto	l2020
  3193  05E2  2E8A               	
  3194                           l246:	
  3195  05E3                     	line	216
  3196                           ;main.c: 216:                     break;
  3197                           	goto	l2020
  3198  05E3  2E8A               	line	217
  3199                           ;main.c: 217:             case 240:
  3200                           	
  3201                           l247:	
  3202  05E4                     	line	218
  3203                           ;main.c: 218:                     atuador.B = 0;
  3204                           	bcf	(main@atuador),1
  3205  05E4  10D1               	line	219
  3206                           	
  3207                           l2004:	
  3208  05E5                     ;main.c: 219:                     estado = 241;
  3209                           	movlw	0F1h
  3210  05E5  30F1               	movwf	(main@estado)
  3211  05E6  00D4               	movlw	0
  3212  05E7  3000               	movwf	((main@estado))+1
  3213  05E8  00D5               	line	220
  3214                           ;main.c: 220:                     break;
  3215                           	goto	l2020
  3216  05E9  2E8A               	line	221
  3217                           ;main.c: 221:             case 241:
  3218                           	
  3219                           l248:	
  3220  05EA                     	line	222
  3221                           ;main.c: 222:                     if( sensor.B0 == 1)
  3222                           	btfss	(main@sensor),2
  3223  05EA  1D52               	goto	u1091
  3224  05EB  2DED               	goto	u1090
  3225  05EC  2DEE               u1091:
  3226  05ED                     	goto	l2020
  3227  05ED  2E8A               u1090:
  3228  05EE                     	line	223
  3229                           	
  3230                           l2006:	
  3231  05EE                     ;main.c: 223:                         estado = 10;
  3232                           	movlw	0Ah
  3233  05EE  300A               	movwf	(main@estado)
  3234  05EF  00D4               	movlw	0
  3235  05F0  3000               	movwf	((main@estado))+1
  3236  05F1  00D5               	goto	l2020
  3237  05F2  2E8A               	
  3238                           l249:	
  3239  05F3                     	line	224
  3240                           ;main.c: 224:                     break;
  3241                           	goto	l2020
  3242  05F3  2E8A               	line	225
  3243                           ;main.c: 225:             case 250:
  3244                           	
  3245                           l250:	
  3246  05F4                     	line	226
  3247                           ;main.c: 226:                     atuador.C = 0;
  3248                           	bcf	(main@atuador),2
  3249  05F4  1151               	line	227
  3250                           	
  3251                           l2008:	
  3252  05F5                     ;main.c: 227:                     estado = 251;
  3253                           	movlw	0FBh
  3254  05F5  30FB               	movwf	(main@estado)
  3255  05F6  00D4               	movlw	0
  3256  05F7  3000               	movwf	((main@estado))+1
  3257  05F8  00D5               	line	228
  3258                           ;main.c: 228:                     break;
  3259                           	goto	l2020
  3260  05F9  2E8A               	line	229
  3261                           ;main.c: 229:             case 251:
  3262                           	
  3263                           l251:	
  3264  05FA                     	line	230
  3265                           ;main.c: 230:                     if( sensor.C0 == 1)
  3266                           	btfss	(main@sensor),4
  3267  05FA  1E52               	goto	u1101
  3268  05FB  2DFD               	goto	u1100
  3269  05FC  2DFE               u1101:
  3270  05FD                     	goto	l2020
  3271  05FD  2E8A               u1100:
  3272  05FE                     	line	231
  3273                           	
  3274                           l2010:	
  3275  05FE                     ;main.c: 231:                         estado = 10;
  3276                           	movlw	0Ah
  3277  05FE  300A               	movwf	(main@estado)
  3278  05FF  00D4               	movlw	0
  3279  0600  3000               	movwf	((main@estado))+1
  3280  0601  00D5               	goto	l2020
  3281  0602  2E8A               	
  3282                           l252:	
  3283  0603                     	line	232
  3284                           ;main.c: 232:                     break;
  3285                           	goto	l2020
  3286  0603  2E8A               	line	233
  3287                           ;main.c: 233:             case 260:
  3288                           	
  3289                           l253:	
  3290  0604                     	line	234
  3291                           ;main.c: 234:                     atuador.D = 0;
  3292                           	bcf	(main@atuador),3
  3293  0604  11D1               	line	235
  3294                           	
  3295                           l2012:	
  3296  0605                     ;main.c: 235:                     estado = 261;
  3297                           	movlw	05h
  3298  0605  3005               	movwf	(main@estado)
  3299  0606  00D4               	movlw	01h
  3300  0607  3001               	movwf	((main@estado))+1
  3301  0608  00D5               	line	236
  3302                           ;main.c: 236:                     break;
  3303                           	goto	l2020
  3304  0609  2E8A               	line	237
  3305                           ;main.c: 237:             case 261:
  3306                           	
  3307                           l254:	
  3308  060A                     	line	238
  3309                           	
  3310                           l2014:	
  3311  060A                     ;main.c: 238:                     estado = 10;
  3312                           	movlw	0Ah
  3313  060A  300A               	movwf	(main@estado)
  3314  060B  00D4               	movlw	0
  3315  060C  3000               	movwf	((main@estado))+1
  3316  060D  00D5               	line	239
  3317                           ;main.c: 239:                     break;
  3318                           	goto	l2020
  3319  060E  2E8A               	line	241
  3320                           	
  3321                           l2016:	
  3322  060F                     ;main.c: 241:         }
  3323                           	goto	l2020
  3324  060F  2E8A               	
  3325                           l178:	
  3326  0610                     	
  3327                           l2018:	
  3328  0610                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  3329                           ; Switch size 1, requested type "space"
  3330                           ; Number of cases is 2, Range of values is 0 to 1
  3331                           ; switch strategies available:
  3332                           ; Name         Instructions Cycles
  3333                           ; simple_byte            7     4 (average)
  3334                           ; direct_byte           14     8 (fixed)
  3335                           ; jumptable            260     6 (fixed)
  3336                           ;	Chosen strategy is simple_byte
  3337                           
  3338                           	bcf	status, 5	;RP0=0, select bank0
  3339  0610  1283               	bcf	status, 6	;RP1=0, select bank0
  3340  0611  1303               	movf (main@estado+1),w
  3341  0612  0855               	opt asmopt_push
  3342                           	opt asmopt_off
  3343                           	xorlw	0^0	; case 0
  3344  0613  3A00               	skipnz
  3345  0614  1903               	goto	l2240
  3346  0615  2E1A               	xorlw	1^0	; case 1
  3347  0616  3A01               	skipnz
  3348  0617  1903               	goto	l2242
  3349  0618  2E82               	goto	l2020
  3350  0619  2E8A               	opt asmopt_pop
  3351                           	
  3352                           l2240:	
  3353  061A                     ; Switch size 1, requested type "space"
  3354                           ; Number of cases is 34, Range of values is 0 to 251
  3355                           ; switch strategies available:
  3356                           ; Name         Instructions Cycles
  3357                           ; simple_byte          103    52 (average)
  3358                           ; jumptable            260     6 (fixed)
  3359                           ;	Chosen strategy is simple_byte
  3360                           
  3361                           	movf (main@estado),w
  3362  061A  0854               	opt asmopt_push
  3363                           	opt asmopt_off
  3364                           	xorlw	0^0	; case 0
  3365  061B  3A00               	skipnz
  3366  061C  1903               	goto	l2020
  3367  061D  2E8A               	xorlw	10^0	; case 10
  3368  061E  3A0A               	skipnz
  3369  061F  1903               	goto	l1878
  3370  0620  2BD3               	xorlw	100^10	; case 100
  3371  0621  3A6E               	skipnz
  3372  0622  1903               	goto	l215
  3373  0623  2CA9               	xorlw	101^100	; case 101
  3374  0624  3A01               	skipnz
  3375  0625  1903               	goto	l216
  3376  0626  2CAF               	xorlw	110^101	; case 110
  3377  0627  3A0B               	skipnz
  3378  0628  1903               	goto	l218
  3379  0629  2CB9               	xorlw	111^110	; case 111
  3380  062A  3A01               	skipnz
  3381  062B  1903               	goto	l219
  3382  062C  2CBF               	xorlw	120^111	; case 120
  3383  062D  3A17               	skipnz
  3384  062E  1903               	goto	l221
  3385  062F  2CC9               	xorlw	121^120	; case 121
  3386  0630  3A01               	skipnz
  3387  0631  1903               	goto	l222
  3388  0632  2CCF               	xorlw	130^121	; case 130
  3389  0633  3AFB               	skipnz
  3390  0634  1903               	goto	l224
  3391  0635  2CD9               	xorlw	131^130	; case 131
  3392  0636  3A01               	skipnz
  3393  0637  1903               	goto	l1962
  3394  0638  2CDF               	xorlw	140^131	; case 140
  3395  0639  3A0F               	skipnz
  3396  063A  1903               	goto	l1964
  3397  063B  2CE4               	xorlw	141^140	; case 141
  3398  063C  3A01               	skipnz
  3399  063D  1903               	goto	l1966
  3400  063E  2CF9               	xorlw	150^141	; case 150
  3401  063F  3A1B               	skipnz
  3402  0640  1903               	goto	l1968
  3403  0641  2CFE               	xorlw	151^150	; case 151
  3404  0642  3A01               	skipnz
  3405  0643  1903               	goto	l1970
  3406  0644  2D13               	xorlw	160^151	; case 160
  3407  0645  3A37               	skipnz
  3408  0646  1903               	goto	l1972
  3409  0647  2D18               	xorlw	161^160	; case 161
  3410  0648  3A01               	skipnz
  3411  0649  1903               	goto	l1974
  3412  064A  2D2D               	xorlw	170^161	; case 170
  3413  064B  3A0B               	skipnz
  3414  064C  1903               	goto	l1976
  3415  064D  2D32               	xorlw	171^170	; case 171
  3416  064E  3A01               	skipnz
  3417  064F  1903               	goto	l1978
  3418  0650  2D48               	xorlw	180^171	; case 180
  3419  0651  3A1F               	skipnz
  3420  0652  1903               	goto	l1980
  3421  0653  2D4D               	xorlw	181^180	; case 181
  3422  0654  3A01               	skipnz
  3423  0655  1903               	goto	l1982
  3424  0656  2D63               	xorlw	190^181	; case 190
  3425  0657  3A0B               	skipnz
  3426  0658  1903               	goto	l1984
  3427  0659  2D68               	xorlw	191^190	; case 191
  3428  065A  3A01               	skipnz
  3429  065B  1903               	goto	l1986
  3430  065C  2D7E               	xorlw	200^191	; case 200
  3431  065D  3A77               	skipnz
  3432  065E  1903               	goto	l1988
  3433  065F  2D83               	xorlw	201^200	; case 201
  3434  0660  3A01               	skipnz
  3435  0661  1903               	goto	l1990
  3436  0662  2D99               	xorlw	210^201	; case 210
  3437  0663  3A1B               	skipnz
  3438  0664  1903               	goto	l1992
  3439  0665  2D9E               	xorlw	211^210	; case 211
  3440  0666  3A01               	skipnz
  3441  0667  1903               	goto	l1994
  3442  0668  2DB4               	xorlw	220^211	; case 220
  3443  0669  3A0F               	skipnz
  3444  066A  1903               	goto	l1996
  3445  066B  2DB9               	xorlw	221^220	; case 221
  3446  066C  3A01               	skipnz
  3447  066D  1903               	goto	l1998
  3448  066E  2DCF               	xorlw	230^221	; case 230
  3449  066F  3A3B               	skipnz
  3450  0670  1903               	goto	l244
  3451  0671  2DD4               	xorlw	231^230	; case 231
  3452  0672  3A01               	skipnz
  3453  0673  1903               	goto	l245
  3454  0674  2DDA               	xorlw	240^231	; case 240
  3455  0675  3A17               	skipnz
  3456  0676  1903               	goto	l247
  3457  0677  2DE4               	xorlw	241^240	; case 241
  3458  0678  3A01               	skipnz
  3459  0679  1903               	goto	l248
  3460  067A  2DEA               	xorlw	250^241	; case 250
  3461  067B  3A0B               	skipnz
  3462  067C  1903               	goto	l250
  3463  067D  2DF4               	xorlw	251^250	; case 251
  3464  067E  3A01               	skipnz
  3465  067F  1903               	goto	l251
  3466  0680  2DFA               	goto	l2020
  3467  0681  2E8A               	opt asmopt_pop
  3468                           	
  3469                           l2242:	
  3470  0682                     ; Switch size 1, requested type "space"
  3471                           ; Number of cases is 2, Range of values is 4 to 5
  3472                           ; switch strategies available:
  3473                           ; Name         Instructions Cycles
  3474                           ; simple_byte            7     4 (average)
  3475                           ; direct_byte           17    11 (fixed)
  3476                           ; jumptable            263     9 (fixed)
  3477                           ;	Chosen strategy is simple_byte
  3478                           
  3479                           	movf (main@estado),w
  3480  0682  0854               	opt asmopt_push
  3481                           	opt asmopt_off
  3482                           	xorlw	4^0	; case 4
  3483  0683  3A04               	skipnz
  3484  0684  1903               	goto	l253
  3485  0685  2E04               	xorlw	5^4	; case 5
  3486  0686  3A01               	skipnz
  3487  0687  1903               	goto	l2014
  3488  0688  2E0A               	goto	l2020
  3489  0689  2E8A               	opt asmopt_pop
  3490                           
  3491                           	
  3492                           l180:	
  3493  068A                     	line	242
  3494                           	
  3495                           l2020:	
  3496  068A                     ;main.c: 242:         if( currentKey() && !previousKey() )
  3497                           	fcall	_currentKey
  3498  068A  120A  118A  2079  120A  118A  	xorlw	0
  3499  068F  3A00               	skipnz
  3500  0690  1903               	goto	u1111
  3501  0691  2E93               	goto	u1110
  3502  0692  2E94               u1111:
  3503  0693                     	goto	l2094
  3504  0693  2FDB               u1110:
  3505  0694                     	
  3506                           l2022:	
  3507  0694                     	fcall	_previousKey
  3508  0694  120A  118A  207E  120A  118A  	xorlw	0
  3509  0699  3A00               	skipz
  3510  069A  1D03               	goto	u1121
  3511  069B  2E9D               	goto	u1120
  3512  069C  2E9E               u1121:
  3513  069D                     	goto	l2094
  3514  069D  2FDB               u1120:
  3515  069E                     	line	244
  3516                           	
  3517                           l2024:	
  3518  069E                     ;main.c: 243:         {;main.c: 244:             tecla = currentKey();
  3519                           	fcall	_currentKey
  3520  069E  120A  118A  2079  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3521  06A3  1283               	bcf	status, 6	;RP1=0, select bank0
  3522  06A4  1303               	movwf	(??_main+0)+0
  3523  06A5  00CA               	movf	(??_main+0)+0,w
  3524  06A6  084A               	movwf	(main@tecla)
  3525  06A7  00D3               	line	245
  3526                           ;main.c: 245:             switch(tecla)
  3527                           	goto	l2090
  3528  06A8  2F90               	line	247
  3529                           ;main.c: 246:             {;main.c: 247:                 case 'A':
  3530                           	
  3531                           l257:	
  3532  06A9                     	line	248
  3533                           	
  3534                           l2026:	
  3535  06A9                     ;main.c: 248:                         ++a;
  3536                           	movlw	low(01h)
  3537  06A9  3001               	movwf	(??_main+0)+0
  3538  06AA  00CA               	movf	(??_main+0)+0,w
  3539  06AB  084A               	addwf	(main@a),f
  3540  06AC  07CD               	line	249
  3541                           	
  3542                           l2028:	
  3543  06AD                     ;main.c: 249:                         if( a % 2 )
  3544                           	btfss	(main@a),(0)&7
  3545  06AD  1C4D               	goto	u1131
  3546  06AE  2EB0               	goto	u1130
  3547  06AF  2EB1               u1131:
  3548  06B0                     	goto	l2032
  3549  06B0  2EB8               u1130:
  3550  06B1                     	line	250
  3551                           	
  3552                           l2030:	
  3553  06B1                     ;main.c: 250:                             putFIFO( tecla );
  3554                           	movf	(main@tecla),w
  3555  06B1  0853               	fcall	_putFIFO
  3556  06B2  120A  118A  20AE  120A  118A  	goto	l2092
  3557  06B7  2FCA               	line	251
  3558                           ;main.c: 251:                         else
  3559                           	
  3560                           l258:	
  3561  06B8                     	line	252
  3562                           	
  3563                           l2032:	
  3564  06B8                     ;main.c: 252:                             putFIFO( tecla | 0x20 );
  3565                           	bcf	status, 5	;RP0=0, select bank0
  3566  06B8  1283               	bcf	status, 6	;RP1=0, select bank0
  3567  06B9  1303               	movf	(main@tecla),w
  3568  06BA  0853               	iorlw	020h
  3569  06BB  3820               	fcall	_putFIFO
  3570  06BC  120A  118A  20AE  120A  118A  	goto	l2092
  3571  06C1  2FCA               	
  3572                           l259:	
  3573  06C2                     	line	253
  3574                           ;main.c: 253:                         break;
  3575                           	goto	l2092
  3576  06C2  2FCA               	line	254
  3577                           ;main.c: 254:                 case 'B':
  3578                           	
  3579                           l261:	
  3580  06C3                     	line	255
  3581                           	
  3582                           l2034:	
  3583  06C3                     ;main.c: 255:                         ++b;
  3584                           	movlw	low(01h)
  3585  06C3  3001               	bcf	status, 5	;RP0=0, select bank0
  3586  06C4  1283               	bcf	status, 6	;RP1=0, select bank0
  3587  06C5  1303               	movwf	(??_main+0)+0
  3588  06C6  00CA               	movf	(??_main+0)+0,w
  3589  06C7  084A               	addwf	(main@b),f
  3590  06C8  07CE               	line	256
  3591                           	
  3592                           l2036:	
  3593  06C9                     ;main.c: 256:                         if( b % 2 )
  3594                           	btfss	(main@b),(0)&7
  3595  06C9  1C4E               	goto	u1141
  3596  06CA  2ECC               	goto	u1140
  3597  06CB  2ECD               u1141:
  3598  06CC                     	goto	l2040
  3599  06CC  2ED4               u1140:
  3600  06CD                     	line	257
  3601                           	
  3602                           l2038:	
  3603  06CD                     ;main.c: 257:                             putFIFO( tecla );
  3604                           	movf	(main@tecla),w
  3605  06CD  0853               	fcall	_putFIFO
  3606  06CE  120A  118A  20AE  120A  118A  	goto	l2092
  3607  06D3  2FCA               	line	258
  3608                           ;main.c: 258:                         else
  3609                           	
  3610                           l262:	
  3611  06D4                     	line	259
  3612                           	
  3613                           l2040:	
  3614  06D4                     ;main.c: 259:                             putFIFO( tecla | 0x20 );
  3615                           	bcf	status, 5	;RP0=0, select bank0
  3616  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
  3617  06D5  1303               	movf	(main@tecla),w
  3618  06D6  0853               	iorlw	020h
  3619  06D7  3820               	fcall	_putFIFO
  3620  06D8  120A  118A  20AE  120A  118A  	goto	l2092
  3621  06DD  2FCA               	
  3622                           l263:	
  3623  06DE                     	line	260
  3624                           ;main.c: 260:                         break;
  3625                           	goto	l2092
  3626  06DE  2FCA               	line	261
  3627                           ;main.c: 261:                 case 'C':
  3628                           	
  3629                           l264:	
  3630  06DF                     	line	262
  3631                           	
  3632                           l2042:	
  3633  06DF                     ;main.c: 262:                         ++c;
  3634                           	movlw	low(01h)
  3635  06DF  3001               	bcf	status, 5	;RP0=0, select bank0
  3636  06E0  1283               	bcf	status, 6	;RP1=0, select bank0
  3637  06E1  1303               	movwf	(??_main+0)+0
  3638  06E2  00CA               	movf	(??_main+0)+0,w
  3639  06E3  084A               	addwf	(main@c),f
  3640  06E4  07CF               	line	263
  3641                           	
  3642                           l2044:	
  3643  06E5                     ;main.c: 263:                         if( c % 2 )
  3644                           	btfss	(main@c),(0)&7
  3645  06E5  1C4F               	goto	u1151
  3646  06E6  2EE8               	goto	u1150
  3647  06E7  2EE9               u1151:
  3648  06E8                     	goto	l2048
  3649  06E8  2EF0               u1150:
  3650  06E9                     	line	264
  3651                           	
  3652                           l2046:	
  3653  06E9                     ;main.c: 264:                             putFIFO( tecla );
  3654                           	movf	(main@tecla),w
  3655  06E9  0853               	fcall	_putFIFO
  3656  06EA  120A  118A  20AE  120A  118A  	goto	l2092
  3657  06EF  2FCA               	line	265
  3658                           ;main.c: 265:                         else
  3659                           	
  3660                           l265:	
  3661  06F0                     	line	266
  3662                           	
  3663                           l2048:	
  3664  06F0                     ;main.c: 266:                             putFIFO( tecla | 0x20 );
  3665                           	bcf	status, 5	;RP0=0, select bank0
  3666  06F0  1283               	bcf	status, 6	;RP1=0, select bank0
  3667  06F1  1303               	movf	(main@tecla),w
  3668  06F2  0853               	iorlw	020h
  3669  06F3  3820               	fcall	_putFIFO
  3670  06F4  120A  118A  20AE  120A  118A  	goto	l2092
  3671  06F9  2FCA               	
  3672                           l266:	
  3673  06FA                     	line	267
  3674                           ;main.c: 267:                         break;
  3675                           	goto	l2092
  3676  06FA  2FCA               	line	268
  3677                           ;main.c: 268:                 case 'D':
  3678                           	
  3679                           l267:	
  3680  06FB                     	line	269
  3681                           	
  3682                           l2050:	
  3683  06FB                     ;main.c: 269:                         ++d;
  3684                           	movlw	low(01h)
  3685  06FB  3001               	bcf	status, 5	;RP0=0, select bank0
  3686  06FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3687  06FD  1303               	movwf	(??_main+0)+0
  3688  06FE  00CA               	movf	(??_main+0)+0,w
  3689  06FF  084A               	addwf	(main@d),f
  3690  0700  07D0               	line	270
  3691                           	
  3692                           l2052:	
  3693  0701                     ;main.c: 270:                         if( d % 2 )
  3694                           	btfss	(main@d),(0)&7
  3695  0701  1C50               	goto	u1161
  3696  0702  2F04               	goto	u1160
  3697  0703  2F05               u1161:
  3698  0704                     	goto	l2056
  3699  0704  2F0C               u1160:
  3700  0705                     	line	271
  3701                           	
  3702                           l2054:	
  3703  0705                     ;main.c: 271:                             putFIFO( tecla );
  3704                           	movf	(main@tecla),w
  3705  0705  0853               	fcall	_putFIFO
  3706  0706  120A  118A  20AE  120A  118A  	goto	l2092
  3707  070B  2FCA               	line	272
  3708                           ;main.c: 272:                         else
  3709                           	
  3710                           l268:	
  3711  070C                     	line	273
  3712                           	
  3713                           l2056:	
  3714  070C                     ;main.c: 273:                             putFIFO( tecla | 0x20 );
  3715                           	bcf	status, 5	;RP0=0, select bank0
  3716  070C  1283               	bcf	status, 6	;RP1=0, select bank0
  3717  070D  1303               	movf	(main@tecla),w
  3718  070E  0853               	iorlw	020h
  3719  070F  3820               	fcall	_putFIFO
  3720  0710  120A  118A  20AE  120A  118A  	goto	l2092
  3721  0715  2FCA               	
  3722                           l269:	
  3723  0716                     	line	274
  3724                           ;main.c: 274:                         break;
  3725                           	goto	l2092
  3726  0716  2FCA               	line	275
  3727                           ;main.c: 275:                 case '0':
  3728                           	
  3729                           l270:	
  3730  0717                     	line	276
  3731                           	
  3732                           l2058:	
  3733  0717                     ;main.c: 276:                         clearLCD();
  3734                           	fcall	_clearLCD
  3735  0717  120A  118A  2088  120A  118A  	line	277
  3736                           	
  3737                           l2060:	
  3738  071C                     ;main.c: 277:                         a = b = c = d = 0;
  3739                           	bcf	status, 5	;RP0=0, select bank0
  3740  071C  1283               	bcf	status, 6	;RP1=0, select bank0
  3741  071D  1303               	clrf	(main@d)
  3742  071E  01D0               	clrf	(main@c)
  3743  071F  01CF               	clrf	(main@b)
  3744  0720  01CE               	clrf	(main@a)
  3745  0721  01CD               	line	278
  3746                           	
  3747                           l2062:	
  3748  0722                     ;main.c: 278:                         atuador.ABCD = 0;
  3749                           	clrf	(main@atuador)
  3750  0722  01D1               	line	279
  3751                           	
  3752                           l2064:	
  3753  0723                     ;main.c: 279:                         resetFIFO();
  3754                           	fcall	_resetFIFO
  3755  0723  120A  118A  2097  120A  118A  	line	280
  3756                           	
  3757                           l2066:	
  3758  0728                     ;main.c: 280:                         estado = 0;
  3759                           	bcf	status, 5	;RP0=0, select bank0
  3760  0728  1283               	bcf	status, 6	;RP1=0, select bank0
  3761  0729  1303               	clrf	(main@estado)
  3762  072A  01D4               	clrf	(main@estado+1)
  3763  072B  01D5               	line	281
  3764                           ;main.c: 281:                         break;
  3765                           	goto	l2092
  3766  072C  2FCA               	line	282
  3767                           ;main.c: 282:                 case '1':
  3768                           	
  3769                           l271:	
  3770  072D                     	goto	l2068
  3771  072D  2F35               	line	283
  3772                           ;main.c: 283:                 case '2':
  3773                           	
  3774                           l272:	
  3775  072E                     	goto	l2068
  3776  072E  2F35               	line	284
  3777                           ;main.c: 284:                 case '3':
  3778                           	
  3779                           l273:	
  3780  072F                     	goto	l2068
  3781  072F  2F35               	line	285
  3782                           ;main.c: 285:                 case '4':
  3783                           	
  3784                           l274:	
  3785  0730                     	goto	l2068
  3786  0730  2F35               	line	286
  3787                           ;main.c: 286:                 case '5':
  3788                           	
  3789                           l275:	
  3790  0731                     	goto	l2068
  3791  0731  2F35               	line	287
  3792                           ;main.c: 287:                 case '6':
  3793                           	
  3794                           l276:	
  3795  0732                     	goto	l2068
  3796  0732  2F35               	line	288
  3797                           ;main.c: 288:                 case '7':
  3798                           	
  3799                           l277:	
  3800  0733                     	goto	l2068
  3801  0733  2F35               	line	289
  3802                           ;main.c: 289:                 case '8':
  3803                           	
  3804                           l278:	
  3805  0734                     	goto	l2068
  3806  0734  2F35               	line	290
  3807                           ;main.c: 290:                 case '9':
  3808                           	
  3809                           l279:	
  3810  0735                     	line	291
  3811                           	
  3812                           l2068:	
  3813  0735                     ;main.c: 291:                         putFIFO(tecla);
  3814                           	movf	(main@tecla),w
  3815  0735  0853               	fcall	_putFIFO
  3816  0736  120A  118A  20AE  120A  118A  	line	292
  3817                           ;main.c: 292:                         break;
  3818                           	goto	l2092
  3819  073B  2FCA               	line	293
  3820                           ;main.c: 293:                 case '*':
  3821                           	
  3822                           l280:	
  3823  073C                     	line	294
  3824                           ;main.c: 294:                         switch( delFIFO(1) )
  3825                           	goto	l2080
  3826  073C  2F54               	line	296
  3827                           ;main.c: 295:                         {;main.c: 296:                             case 'A
                                 ': a = 0; break;
  3828                           	
  3829                           l282:	
  3830  073D                     	
  3831                           l2070:	
  3832  073D                     	bcf	status, 5	;RP0=0, select bank0
  3833  073D  1283               	bcf	status, 6	;RP1=0, select bank0
  3834  073E  1303               	clrf	(main@a)
  3835  073F  01CD               	goto	l2082
  3836  0740  2F7D               	line	297
  3837                           ;main.c: 297:                             case 'a': a = 1; break;
  3838                           	
  3839                           l284:	
  3840  0741                     	clrf	(main@a)
  3841  0741  01CD               	incf	(main@a),f
  3842  0742  0ACD               	goto	l2082
  3843  0743  2F7D               	line	298
  3844                           ;main.c: 298:                             case 'B': b = 0; break;
  3845                           	
  3846                           l285:	
  3847  0744                     	
  3848                           l2072:	
  3849  0744                     	clrf	(main@b)
  3850  0744  01CE               	goto	l2082
  3851  0745  2F7D               	line	299
  3852                           ;main.c: 299:                             case 'b': b = 1; break;
  3853                           	
  3854                           l286:	
  3855  0746                     	clrf	(main@b)
  3856  0746  01CE               	incf	(main@b),f
  3857  0747  0ACE               	goto	l2082
  3858  0748  2F7D               	line	300
  3859                           ;main.c: 300:                             case 'C': c = 0; break;
  3860                           	
  3861                           l287:	
  3862  0749                     	
  3863                           l2074:	
  3864  0749                     	clrf	(main@c)
  3865  0749  01CF               	goto	l2082
  3866  074A  2F7D               	line	301
  3867                           ;main.c: 301:                             case 'c': c = 1; break;
  3868                           	
  3869                           l288:	
  3870  074B                     	clrf	(main@c)
  3871  074B  01CF               	incf	(main@c),f
  3872  074C  0ACF               	goto	l2082
  3873  074D  2F7D               	line	302
  3874                           ;main.c: 302:                             case 'D': d = 0; break;
  3875                           	
  3876                           l289:	
  3877  074E                     	
  3878                           l2076:	
  3879  074E                     	clrf	(main@d)
  3880  074E  01D0               	goto	l2082
  3881  074F  2F7D               	line	303
  3882                           ;main.c: 303:                             case 'd': d = 1; break;
  3883                           	
  3884                           l290:	
  3885  0750                     	clrf	(main@d)
  3886  0750  01D0               	incf	(main@d),f
  3887  0751  0AD0               	goto	l2082
  3888  0752  2F7D               	line	304
  3889                           	
  3890                           l2078:	
  3891  0753                     ;main.c: 304:                         }
  3892                           	goto	l2082
  3893  0753  2F7D               	
  3894                           l281:	
  3895  0754                     	
  3896                           l2080:	
  3897  0754                     	movlw	low(01h)
  3898  0754  3001               	fcall	_delFIFO
  3899  0755  120A  118A  2124  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3900  075A  1283               	bcf	status, 6	;RP1=0, select bank0
  3901  075B  1303               	movwf	(??_main+0)+0
  3902  075C  00CA               	clrf	(??_main+0)+0+1
  3903  075D  01CB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3904                           ; Switch size 1, requested type "space"
  3905                           ; Number of cases is 1, Range of values is 0 to 0
  3906                           ; switch strategies available:
  3907                           ; Name         Instructions Cycles
  3908                           ; simple_byte            4     3 (average)
  3909                           ; direct_byte           11     8 (fixed)
  3910                           ; jumptable            260     6 (fixed)
  3911                           ;	Chosen strategy is simple_byte
  3912                           
  3913                           	movf 1+(??_main+0)+0,w
  3914  075E  084B               	opt asmopt_push
  3915                           	opt asmopt_off
  3916                           	xorlw	0^0	; case 0
  3917  075F  3A00               	skipnz
  3918  0760  1903               	goto	l2244
  3919  0761  2F63               	goto	l2082
  3920  0762  2F7D               	opt asmopt_pop
  3921                           	
  3922                           l2244:	
  3923  0763                     ; Switch size 1, requested type "space"
  3924                           ; Number of cases is 8, Range of values is 65 to 100
  3925                           ; switch strategies available:
  3926                           ; Name         Instructions Cycles
  3927                           ; simple_byte           25    13 (average)
  3928                           ; direct_byte          119    11 (fixed)
  3929                           ; jumptable            263     9 (fixed)
  3930                           ;	Chosen strategy is simple_byte
  3931                           
  3932                           	movf 0+(??_main+0)+0,w
  3933  0763  084A               	opt asmopt_push
  3934                           	opt asmopt_off
  3935                           	xorlw	65^0	; case 65
  3936  0764  3A41               	skipnz
  3937  0765  1903               	goto	l2070
  3938  0766  2F3D               	xorlw	66^65	; case 66
  3939  0767  3A03               	skipnz
  3940  0768  1903               	goto	l2072
  3941  0769  2F44               	xorlw	67^66	; case 67
  3942  076A  3A01               	skipnz
  3943  076B  1903               	goto	l2074
  3944  076C  2F49               	xorlw	68^67	; case 68
  3945  076D  3A07               	skipnz
  3946  076E  1903               	goto	l2076
  3947  076F  2F4E               	xorlw	97^68	; case 97
  3948  0770  3A25               	skipnz
  3949  0771  1903               	goto	l284
  3950  0772  2F41               	xorlw	98^97	; case 98
  3951  0773  3A03               	skipnz
  3952  0774  1903               	goto	l286
  3953  0775  2F46               	xorlw	99^98	; case 99
  3954  0776  3A01               	skipnz
  3955  0777  1903               	goto	l288
  3956  0778  2F4B               	xorlw	100^99	; case 100
  3957  0779  3A07               	skipnz
  3958  077A  1903               	goto	l290
  3959  077B  2F50               	goto	l2082
  3960  077C  2F7D               	opt asmopt_pop
  3961                           
  3962                           	
  3963                           l283:	
  3964  077D                     	line	305
  3965                           	
  3966                           l2082:	
  3967  077D                     ;main.c: 305:                         clearLCD();
  3968                           	fcall	_clearLCD
  3969  077D  120A  118A  2088  120A  118A  	line	306
  3970                           ;main.c: 306:                         break;
  3971                           	goto	l2092
  3972  0782  2FCA               	line	307
  3973                           ;main.c: 307:                 case '#':
  3974                           	
  3975                           l291:	
  3976  0783                     	line	308
  3977                           	
  3978                           l2084:	
  3979  0783                     ;main.c: 308:                         restartFIFO();
  3980                           	fcall	_restartFIFO
  3981  0783  120A  118A  2075  120A  118A  	line	309
  3982                           	
  3983                           l2086:	
  3984  0788                     ;main.c: 309:                         estado = 10;
  3985                           	movlw	0Ah
  3986  0788  300A               	bcf	status, 5	;RP0=0, select bank0
  3987  0789  1283               	bcf	status, 6	;RP1=0, select bank0
  3988  078A  1303               	movwf	(main@estado)
  3989  078B  00D4               	movlw	0
  3990  078C  3000               	movwf	((main@estado))+1
  3991  078D  00D5               	line	310
  3992                           ;main.c: 310:                         break;
  3993                           	goto	l2092
  3994  078E  2FCA               	line	311
  3995                           	
  3996                           l2088:	
  3997  078F                     ;main.c: 311:             }
  3998                           	goto	l2092
  3999  078F  2FCA               	
  4000                           l256:	
  4001  0790                     	
  4002                           l2090:	
  4003  0790                     	movf	(main@tecla),w
  4004  0790  0853               	movwf	(??_main+0)+0
  4005  0791  00CA               	clrf	(??_main+0)+0+1
  4006  0792  01CB               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4007                           ; Switch size 1, requested type "space"
  4008                           ; Number of cases is 1, Range of values is 0 to 0
  4009                           ; switch strategies available:
  4010                           ; Name         Instructions Cycles
  4011                           ; simple_byte            4     3 (average)
  4012                           ; direct_byte           11     8 (fixed)
  4013                           ; jumptable            260     6 (fixed)
  4014                           ;	Chosen strategy is simple_byte
  4015                           
  4016                           	movf 1+(??_main+0)+0,w
  4017  0793  084B               	opt asmopt_push
  4018                           	opt asmopt_off
  4019                           	xorlw	0^0	; case 0
  4020  0794  3A00               	skipnz
  4021  0795  1903               	goto	l2246
  4022  0796  2F98               	goto	l2092
  4023  0797  2FCA               	opt asmopt_pop
  4024                           	
  4025                           l2246:	
  4026  0798                     ; Switch size 1, requested type "space"
  4027                           ; Number of cases is 16, Range of values is 35 to 68
  4028                           ; switch strategies available:
  4029                           ; Name         Instructions Cycles
  4030                           ; simple_byte           49    25 (average)
  4031                           ; direct_byte          113    11 (fixed)
  4032                           ; jumptable            263     9 (fixed)
  4033                           ;	Chosen strategy is simple_byte
  4034                           
  4035                           	movf 0+(??_main+0)+0,w
  4036  0798  084A               	opt asmopt_push
  4037                           	opt asmopt_off
  4038                           	xorlw	35^0	; case 35
  4039  0799  3A23               	skipnz
  4040  079A  1903               	goto	l2084
  4041  079B  2F83               	xorlw	42^35	; case 42
  4042  079C  3A09               	skipnz
  4043  079D  1903               	goto	l2080
  4044  079E  2F54               	xorlw	48^42	; case 48
  4045  079F  3A1A               	skipnz
  4046  07A0  1903               	goto	l2058
  4047  07A1  2F17               	xorlw	49^48	; case 49
  4048  07A2  3A01               	skipnz
  4049  07A3  1903               	goto	l2068
  4050  07A4  2F35               	xorlw	50^49	; case 50
  4051  07A5  3A03               	skipnz
  4052  07A6  1903               	goto	l2068
  4053  07A7  2F35               	xorlw	51^50	; case 51
  4054  07A8  3A01               	skipnz
  4055  07A9  1903               	goto	l2068
  4056  07AA  2F35               	xorlw	52^51	; case 52
  4057  07AB  3A07               	skipnz
  4058  07AC  1903               	goto	l2068
  4059  07AD  2F35               	xorlw	53^52	; case 53
  4060  07AE  3A01               	skipnz
  4061  07AF  1903               	goto	l2068
  4062  07B0  2F35               	xorlw	54^53	; case 54
  4063  07B1  3A03               	skipnz
  4064  07B2  1903               	goto	l2068
  4065  07B3  2F35               	xorlw	55^54	; case 55
  4066  07B4  3A01               	skipnz
  4067  07B5  1903               	goto	l2068
  4068  07B6  2F35               	xorlw	56^55	; case 56
  4069  07B7  3A0F               	skipnz
  4070  07B8  1903               	goto	l2068
  4071  07B9  2F35               	xorlw	57^56	; case 57
  4072  07BA  3A01               	skipnz
  4073  07BB  1903               	goto	l2068
  4074  07BC  2F35               	xorlw	65^57	; case 65
  4075  07BD  3A78               	skipnz
  4076  07BE  1903               	goto	l2026
  4077  07BF  2EA9               	xorlw	66^65	; case 66
  4078  07C0  3A03               	skipnz
  4079  07C1  1903               	goto	l2034
  4080  07C2  2EC3               	xorlw	67^66	; case 67
  4081  07C3  3A01               	skipnz
  4082  07C4  1903               	goto	l2042
  4083  07C5  2EDF               	xorlw	68^67	; case 68
  4084  07C6  3A07               	skipnz
  4085  07C7  1903               	goto	l2050
  4086  07C8  2EFB               	goto	l2092
  4087  07C9  2FCA               	opt asmopt_pop
  4088                           
  4089                           	
  4090                           l260:	
  4091  07CA                     	line	312
  4092                           	
  4093                           l2092:	
  4094  07CA                     ;main.c: 312:             writeLCD(0,1, displayFIFO() );
  4095                           	clrf	(writeLCD@y)
  4096  07CA  01F8               	incf	(writeLCD@y),f
  4097  07CB  0AF8               	fcall	_displayFIFO
  4098  07CC  120A  118A  2072  120A  118A  	movwf	(writeLCD@ptr)
  4099  07D1  00F9               	movlw	(0x0)
  4100  07D2  3000               	movwf	(writeLCD@ptr+1)
  4101  07D3  00FA               	movlw	low(0)
  4102  07D4  3000               	fcall	_writeLCD
  4103  07D5  120A  118A  2170  120A  118A  	goto	l2094
  4104  07DA  2FDB               	line	313
  4105                           ;main.c: 313:         }
  4106                           	
  4107                           l255:	
  4108  07DB                     	line	314
  4109                           	
  4110                           l2094:	
  4111  07DB                     ;main.c: 314:         serialIOscan();
  4112                           	fcall	_serialIOscan
  4113  07DB  120A  118A  2245  120A  118A  	goto	l1874
  4114  07E0  2BC7               	line	315
  4115                           ;main.c: 315:     }
  4116                           	
  4117                           l292:	
  4118  07E1                     	goto	l1874
  4119  07E1  2BC7               	
  4120                           l293:	
  4121  07E2                     	line	316
  4122                           	
  4123                           l294:	
  4124  07E2                     	global	start
  4125                           	ljmp	start
  4126  07E2  120A  118A  2800   	opt stack 0
  4127                           GLOBAL	__end_of_main
  4128                           	__end_of_main:
  4129  07E5                     	signat	_main,89
  4130                           	global	_serialIOscan
  4131                           
  4132 ;; *************** function _serialIOscan *****************
  4133 ;; Defined at:
  4134 ;;		line 76 in file "serialIO.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  i               1    8[COMMON] unsigned char 
  4139 ;;  j               1    7[COMMON] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4149 ;;      Params:         0       0       0       0       0
  4150 ;;      Locals:         2       0       0       0       0
  4151 ;;      Temps:          3       0       0       0       0
  4152 ;;      Totals:         5       0       0       0       0
  4153 ;;Total ram usage:        5 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    1
  4156 ;; This function calls:
  4157 ;;		_serialIObyteShift
  4158 ;;		_serialIOload
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4164                           	file	"serialIO.c"
  4165                           	line	76
  4166                           global __ptext1
  4167                           __ptext1:	;psect for function _serialIOscan
  4168  0245                     psect	text1
  4169                           	file	"serialIO.c"
  4170                           	line	76
  4171                           	global	__size_of_serialIOscan
  4172                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
  4173  003D                     	
  4174                           _serialIOscan:	
  4175  0245                     ;incstack = 0
  4176                           	opt	stack 6
  4177                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4178                           	line	79
  4179                           	
  4180                           l1820:	
  4181  0245                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  4182                           	bcf	status, 5	;RP0=0, select bank0
  4183  0245  1283               	bcf	status, 6	;RP1=0, select bank0
  4184  0246  1303               	movf	(_lenSerialIO),w
  4185  0247  0820               	addlw	0FFh
  4186  0248  3EFF               	movwf	(??_serialIOscan+0)+0
  4187  0249  00F4               	movf	(??_serialIOscan+0)+0,w
  4188  024A  0874               	movwf	(serialIOscan@j)
  4189  024B  00F7               	line	80
  4190                           	
  4191                           l1822:	
  4192  024C                     ;serialIO.c: 80:     serialIOload();
  4193                           	fcall	_serialIOload
  4194  024C  120A  118A  2083  120A  118A  	line	81
  4195                           	
  4196                           l1824:	
  4197  0251                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  4198                           	clrf	(serialIOscan@i)
  4199  0251  01F8               	goto	l1830
  4200  0252  2A73               	
  4201                           l324:	
  4202  0253                     	line	83
  4203                           	
  4204                           l1826:	
  4205  0253                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
  4206                           	decf	(serialIOscan@i),w
  4207  0253  0378               	xorlw	0ffh
  4208  0254  3AFF               	addwf	(serialIOscan@j),w
  4209  0255  0777               	bcf	status, 5	;RP0=0, select bank0
  4210  0256  1283               	bcf	status, 6	;RP1=0, select bank0
  4211  0257  1303               	addwf	(_ptrSerialOut),w
  4212  0258  0721               	movwf	(??_serialIOscan+0)+0
  4213  0259  00F4               	movf	0+(??_serialIOscan+0)+0,w
  4214  025A  0874               	movwf	fsr0
  4215  025B  0084               	bcf	status, 7	;select IRP bank0
  4216  025C  1383               	movf	indf,w
  4217  025D  0800               	fcall	_serialIObyteShift
  4218  025E  120A  118A  2145  120A  118A  	movwf	(??_serialIOscan+1)+0
  4219  0263  00F5               	movf	(serialIOscan@i),w
  4220  0264  0878               	bcf	status, 5	;RP0=0, select bank0
  4221  0265  1283               	bcf	status, 6	;RP1=0, select bank0
  4222  0266  1303               	addwf	(_ptrSerialIn),w
  4223  0267  0722               	movwf	(??_serialIOscan+2)+0
  4224  0268  00F6               	movf	0+(??_serialIOscan+2)+0,w
  4225  0269  0876               	movwf	fsr0
  4226  026A  0084               	movf	(??_serialIOscan+1)+0,w
  4227  026B  0875               	bcf	status, 7	;select IRP bank0
  4228  026C  1383               	movwf	indf
  4229  026D  0080               	line	84
  4230                           	
  4231                           l1828:	
  4232  026E                     ;serialIO.c: 84:     }
  4233                           	movlw	low(01h)
  4234  026E  3001               	movwf	(??_serialIOscan+0)+0
  4235  026F  00F4               	movf	(??_serialIOscan+0)+0,w
  4236  0270  0874               	addwf	(serialIOscan@i),f
  4237  0271  07F8               	goto	l1830
  4238  0272  2A73               	
  4239                           l323:	
  4240  0273                     	
  4241                           l1830:	
  4242  0273                     	bcf	status, 5	;RP0=0, select bank0
  4243  0273  1283               	bcf	status, 6	;RP1=0, select bank0
  4244  0274  1303               	movf	(_lenSerialIO),w
  4245  0275  0820               	subwf	(serialIOscan@i),w
  4246  0276  0278               	skipc
  4247  0277  1C03               	goto	u801
  4248  0278  2A7A               	goto	u800
  4249  0279  2A7B               u801:
  4250  027A                     	goto	l1826
  4251  027A  2A53               u800:
  4252  027B                     	goto	l1832
  4253  027B  2A7C               	
  4254                           l325:	
  4255  027C                     	line	85
  4256                           	
  4257                           l1832:	
  4258  027C                     ;serialIO.c: 85:     serialIOload();
  4259                           	fcall	_serialIOload
  4260  027C  120A  118A  2083  120A  118A  	line	86
  4261                           	
  4262                           l326:	
  4263  0281                     	return
  4264  0281  0008               	opt stack 0
  4265                           GLOBAL	__end_of_serialIOscan
  4266                           	__end_of_serialIOscan:
  4267  0282                     	signat	_serialIOscan,89
  4268                           	global	_serialIOload
  4269                           
  4270 ;; *************** function _serialIOload *****************
  4271 ;; Defined at:
  4272 ;;		line 45 in file "serialIO.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		None
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4286 ;;      Params:         0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0
  4289 ;;      Totals:         0       0       0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_serialIOscan
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4299                           	line	45
  4300                           global __ptext2
  4301                           __ptext2:	;psect for function _serialIOload
  4302  0083                     psect	text2
  4303                           	file	"serialIO.c"
  4304                           	line	45
  4305                           	global	__size_of_serialIOload
  4306                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
  4307  0005                     	
  4308                           _serialIOload:	
  4309  0083                     ;incstack = 0
  4310                           	opt	stack 6
  4311                           ; Regs used in _serialIOload: []
  4312                           	line	47
  4313                           	
  4314                           l1656:	
  4315  0083                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  4316                           	bcf	status, 5	;RP0=0, select bank0
  4317  0083  1283               	bcf	status, 6	;RP1=0, select bank0
  4318  0084  1303               	bcf	(5),3	;volatile
  4319  0085  1185               	line	48
  4320                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  4321                           	bsf	(5),3	;volatile
  4322  0086  1585               	line	49
  4323                           	
  4324                           l311:	
  4325  0087                     	return
  4326  0087  0008               	opt stack 0
  4327                           GLOBAL	__end_of_serialIOload
  4328                           	__end_of_serialIOload:
  4329  0088                     	signat	_serialIOload,89
  4330                           	global	_serialIObyteShift
  4331                           
  4332 ;; *************** function _serialIObyteShift *****************
  4333 ;; Defined at:
  4334 ;;		line 50 in file "serialIO.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  dataIn          1    wreg     unsigned char 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  dataIn          1    1[COMMON] unsigned char 
  4339 ;;  dataBit         1    3[COMMON] unsigned char 
  4340 ;;  dataOut         1    2[COMMON] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      unsigned char 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4350 ;;      Params:         0       0       0       0       0
  4351 ;;      Locals:         3       0       0       0       0
  4352 ;;      Temps:          1       0       0       0       0
  4353 ;;      Totals:         4       0       0       0       0
  4354 ;;Total ram usage:        4 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_serialIOscan
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4363                           	line	50
  4364                           global __ptext3
  4365                           __ptext3:	;psect for function _serialIObyteShift
  4366  0145                     psect	text3
  4367                           	file	"serialIO.c"
  4368                           	line	50
  4369                           	global	__size_of_serialIObyteShift
  4370                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
  4371  002B                     	
  4372                           _serialIObyteShift:	
  4373  0145                     ;incstack = 0
  4374                           	opt	stack 6
  4375                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  4376                           ;serialIObyteShift@dataIn stored from wreg
  4377                           	movwf	(serialIObyteShift@dataIn)
  4378  0145  00F1               	line	55
  4379                           	
  4380                           l1658:	
  4381  0146                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
  4382                           	movlw	low(080h)
  4383  0146  3080               	movwf	(??_serialIObyteShift+0)+0
  4384  0147  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4385  0148  0870               	movwf	(serialIObyteShift@dataBit)
  4386  0149  00F3               	line	56
  4387                           	
  4388                           l1660:	
  4389  014A                     ;serialIO.c: 56:     dataOut = 0;
  4390                           	clrf	(serialIObyteShift@dataOut)
  4391  014A  01F2               	line	58
  4392                           ;serialIO.c: 58:     while( dataBit )
  4393                           	goto	l1672
  4394  014B  2965               	
  4395                           l315:	
  4396  014C                     	line	60
  4397                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  4398                           	bcf	status, 5	;RP0=0, select bank0
  4399  014C  1283               	bcf	status, 6	;RP1=0, select bank0
  4400  014D  1303               	bcf	(5),2	;volatile
  4401  014E  1105               	line	61
  4402                           	
  4403                           l1662:	
  4404  014F                     ;serialIO.c: 61:         if( dataIn & dataBit )
  4405                           	movf	(serialIObyteShift@dataIn),w
  4406  014F  0871               	andwf	(serialIObyteShift@dataBit),w
  4407  0150  0573               	btfsc	status,2
  4408  0151  1903               	goto	u681
  4409  0152  2954               	goto	u680
  4410  0153  2955               u681:
  4411  0154                     	goto	l316
  4412  0154  2957               u680:
  4413  0155                     	line	62
  4414                           	
  4415                           l1664:	
  4416  0155                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
  4417                           	bsf	(5),0	;volatile
  4418  0155  1405               	goto	l317
  4419  0156  2958               	line	63
  4420                           ;serialIO.c: 63:         else
  4421                           	
  4422                           l316:	
  4423  0157                     	line	64
  4424                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  4425                           	bcf	(5),0	;volatile
  4426  0157  1005               	
  4427                           l317:	
  4428  0158                     	line	66
  4429                           ;serialIO.c: 66:         if( SERIALIO.IN)
  4430                           	btfss	(5),1	;volatile
  4431  0158  1C85               	goto	u691
  4432  0159  295B               	goto	u690
  4433  015A  295C               u691:
  4434  015B                     	goto	l1668
  4435  015B  2961               u690:
  4436  015C                     	line	67
  4437                           	
  4438                           l1666:	
  4439  015C                     ;serialIO.c: 67:             dataOut |= dataBit;
  4440                           	movf	(serialIObyteShift@dataBit),w
  4441  015C  0873               	movwf	(??_serialIObyteShift+0)+0
  4442  015D  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4443  015E  0870               	iorwf	(serialIObyteShift@dataOut),f
  4444  015F  04F2               	goto	l1668
  4445  0160  2961               	
  4446                           l318:	
  4447  0161                     	line	68
  4448                           	
  4449                           l1668:	
  4450  0161                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
  4451                           	bsf	(5),2	;volatile
  4452  0161  1505               	line	69
  4453                           	
  4454                           l1670:	
  4455  0162                     ;serialIO.c: 69:         dataBit >>= 1;
  4456                           	clrc
  4457  0162  1003               	rrf	(serialIObyteShift@dataBit),f
  4458  0163  0CF3               
  4459                           	goto	l1672
  4460  0164  2965               	line	70
  4461                           ;serialIO.c: 70:     }
  4462                           	
  4463                           l314:	
  4464  0165                     	line	58
  4465                           	
  4466                           l1672:	
  4467  0165                     ;serialIO.c: 58:     while( dataBit )
  4468                           	movf	((serialIObyteShift@dataBit)),w
  4469  0165  0873               	btfss	status,2
  4470  0166  1D03               	goto	u701
  4471  0167  2969               	goto	u700
  4472  0168  296A               u701:
  4473  0169                     	goto	l315
  4474  0169  294C               u700:
  4475  016A                     	
  4476                           l319:	
  4477  016A                     	line	71
  4478                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  4479                           	bcf	status, 5	;RP0=0, select bank0
  4480  016A  1283               	bcf	status, 6	;RP1=0, select bank0
  4481  016B  1303               	bcf	(5),2	;volatile
  4482  016C  1105               	line	72
  4483                           	
  4484                           l1674:	
  4485  016D                     ;serialIO.c: 72:     return( dataOut );
  4486                           	movf	(serialIObyteShift@dataOut),w
  4487  016D  0872               	goto	l320
  4488  016E  296F               	
  4489                           l1676:	
  4490  016F                     	line	73
  4491                           	
  4492                           l320:	
  4493  016F                     	return
  4494  016F  0008               	opt stack 0
  4495                           GLOBAL	__end_of_serialIObyteShift
  4496                           	__end_of_serialIObyteShift:
  4497  0170                     	signat	_serialIObyteShift,4217
  4498                           	global	_screen_menu
  4499                           
  4500 ;; *************** function _screen_menu *****************
  4501 ;; Defined at:
  4502 ;;		line 144 in file "lcd.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;		None
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;		None
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  1    wreg      void 
  4509 ;; Registers used:
  4510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4516 ;;      Params:         0       0       0       0       0
  4517 ;;      Locals:         0       0       0       0       0
  4518 ;;      Temps:          0       0       0       0       0
  4519 ;;      Totals:         0       0       0       0       0
  4520 ;;Total ram usage:        0 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    3
  4523 ;; This function calls:
  4524 ;;		_writeLCD
  4525 ;; This function is called by:
  4526 ;;		_main
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4530                           	file	"lcd.c"
  4531                           	line	144
  4532                           global __ptext4
  4533                           __ptext4:	;psect for function _screen_menu
  4534  00A2                     psect	text4
  4535                           	file	"lcd.c"
  4536                           	line	144
  4537                           	global	__size_of_screen_menu
  4538                           	__size_of_screen_menu	equ	__end_of_screen_menu-_screen_menu
  4539  000C                     	
  4540                           _screen_menu:	
  4541  00A2                     ;incstack = 0
  4542                           	opt	stack 4
  4543                           ; Regs used in _screen_menu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4544                           	line	146
  4545                           	
  4546                           l1788:	
  4547  00A2                     ;lcd.c: 146:     writeLCD(0,0,"INSIRA A SEQUEN.");
  4548                           	clrf	(writeLCD@y)
  4549  00A2  01F8               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  4550  00A3  3017               	movwf	(writeLCD@ptr)
  4551  00A4  00F9               	movlw	80h
  4552  00A5  3080               	movwf	(writeLCD@ptr+1)
  4553  00A6  00FA               	movlw	low(0)
  4554  00A7  3000               	fcall	_writeLCD
  4555  00A8  120A  118A  2170  120A  118A  	line	147
  4556                           	
  4557                           l136:	
  4558  00AD                     	return
  4559  00AD  0008               	opt stack 0
  4560                           GLOBAL	__end_of_screen_menu
  4561                           	__end_of_screen_menu:
  4562  00AE                     	signat	_screen_menu,89
  4563                           	global	_screen_car
  4564                           
  4565 ;; *************** function _screen_car *****************
  4566 ;; Defined at:
  4567 ;;		line 135 in file "lcd.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4581 ;;      Params:         0       0       0       0       0
  4582 ;;      Locals:         0       0       0       0       0
  4583 ;;      Temps:          0       3       0       0       0
  4584 ;;      Totals:         0       3       0       0       0
  4585 ;;Total ram usage:        3 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    3
  4588 ;; This function calls:
  4589 ;;		_clearLCD
  4590 ;;		_writeLCD
  4591 ;; This function is called by:
  4592 ;;		_main
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4596                           	line	135
  4597                           global __ptext5
  4598                           __ptext5:	;psect for function _screen_car
  4599  020B                     psect	text5
  4600                           	file	"lcd.c"
  4601                           	line	135
  4602                           	global	__size_of_screen_car
  4603                           	__size_of_screen_car	equ	__end_of_screen_car-_screen_car
  4604  003A                     	
  4605                           _screen_car:	
  4606  020B                     ;incstack = 0
  4607                           	opt	stack 4
  4608                           ; Regs used in _screen_car: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4609                           	line	137
  4610                           	
  4611                           l1780:	
  4612  020B                     ;lcd.c: 137:     writeLCD(2,0,"SEQUENCIADOR");
  4613                           	clrf	(writeLCD@y)
  4614  020B  01F8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  4615  020C  3028               	movwf	(writeLCD@ptr)
  4616  020D  00F9               	movlw	80h
  4617  020E  3080               	movwf	(writeLCD@ptr+1)
  4618  020F  00FA               	movlw	low(02h)
  4619  0210  3002               	fcall	_writeLCD
  4620  0211  120A  118A  2170  120A  118A  	line	138
  4621                           	
  4622                           l1782:	
  4623  0216                     ;lcd.c: 138:     _delay((unsigned long)((200)*(4000000/4000.0)));
  4624                           	opt asmopt_push
  4625                           opt asmopt_off
  4626                           movlw  2
  4627  0216  3002               	bcf	status, 5	;RP0=0, select bank0
  4628  0217  1283               	bcf	status, 6	;RP1=0, select bank0
  4629  0218  1303               movwf	((??_screen_car+0)+0+2),f
  4630  0219  00C9               movlw	4
  4631  021A  3004               movwf	((??_screen_car+0)+0+1),f
  4632  021B  00C8               	movlw	185
  4633  021C  30B9               movwf	((??_screen_car+0)+0),f
  4634  021D  00C7               	u1267:
  4635  021E                     decfsz	((??_screen_car+0)+0),f
  4636  021E  0BC7               	goto	u1267
  4637  021F  2A1E               	decfsz	((??_screen_car+0)+0+1),f
  4638  0220  0BC8               	goto	u1267
  4639  0221  2A1E               	decfsz	((??_screen_car+0)+0+2),f
  4640  0222  0BC9               	goto	u1267
  4641  0223  2A1E               	nop2
  4642  0224  2A25               opt asmopt_pop
  4643                           
  4644                           	line	139
  4645                           	
  4646                           l1784:	
  4647  0225                     ;lcd.c: 139:     writeLCD(2,1,"PROGRAMAVEL");
  4648                           	clrf	(writeLCD@y)
  4649  0225  01F8               	incf	(writeLCD@y),f
  4650  0226  0AF8               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  4651  0227  3035               	movwf	(writeLCD@ptr)
  4652  0228  00F9               	movlw	80h
  4653  0229  3080               	movwf	(writeLCD@ptr+1)
  4654  022A  00FA               	movlw	low(02h)
  4655  022B  3002               	fcall	_writeLCD
  4656  022C  120A  118A  2170  120A  118A  	line	140
  4657                           ;lcd.c: 140:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  4658                           	opt asmopt_push
  4659                           opt asmopt_off
  4660                           movlw  11
  4661  0231  300B               	bcf	status, 5	;RP0=0, select bank0
  4662  0232  1283               	bcf	status, 6	;RP1=0, select bank0
  4663  0233  1303               movwf	((??_screen_car+0)+0+2),f
  4664  0234  00C9               movlw	38
  4665  0235  3026               movwf	((??_screen_car+0)+0+1),f
  4666  0236  00C8               	movlw	93
  4667  0237  305D               movwf	((??_screen_car+0)+0),f
  4668  0238  00C7               	u1277:
  4669  0239                     decfsz	((??_screen_car+0)+0),f
  4670  0239  0BC7               	goto	u1277
  4671  023A  2A39               	decfsz	((??_screen_car+0)+0+1),f
  4672  023B  0BC8               	goto	u1277
  4673  023C  2A39               	decfsz	((??_screen_car+0)+0+2),f
  4674  023D  0BC9               	goto	u1277
  4675  023E  2A39               opt asmopt_pop
  4676                           
  4677                           	line	141
  4678                           	
  4679                           l1786:	
  4680  023F                     ;lcd.c: 141:     clearLCD();
  4681                           	fcall	_clearLCD
  4682  023F  120A  118A  2088  120A  118A  	line	142
  4683                           	
  4684                           l133:	
  4685  0244                     	return
  4686  0244  0008               	opt stack 0
  4687                           GLOBAL	__end_of_screen_car
  4688                           	__end_of_screen_car:
  4689  0245                     	signat	_screen_car,89
  4690                           	global	_writeLCD
  4691                           
  4692 ;; *************** function _writeLCD *****************
  4693 ;; Defined at:
  4694 ;;		line 87 in file "lcd.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  x               1    wreg     unsigned char 
  4697 ;;  y               1    8[COMMON] unsigned char 
  4698 ;;  ptr             2    9[COMMON] PTR const unsigned char 
  4699 ;;		 -> STR_3(17), STR_2(12), STR_1(13), checktecla@linha2(17), 
  4700 ;;		 -> fifo(16), 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  x               1   12[COMMON] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         3       0       0       0       0
  4713 ;;      Locals:         1       0       0       0       0
  4714 ;;      Temps:          1       0       0       0       0
  4715 ;;      Totals:         5       0       0       0       0
  4716 ;;Total ram usage:        5 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    2
  4719 ;; This function calls:
  4720 ;;		_gotoxy
  4721 ;;		_putLCD
  4722 ;; This function is called by:
  4723 ;;		_screen_car
  4724 ;;		_screen_menu
  4725 ;;		_main
  4726 ;;		_checktecla
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4730                           	line	87
  4731                           global __ptext6
  4732                           __ptext6:	;psect for function _writeLCD
  4733  0170                     psect	text6
  4734                           	file	"lcd.c"
  4735                           	line	87
  4736                           	global	__size_of_writeLCD
  4737                           	__size_of_writeLCD	equ	__end_of_writeLCD-_writeLCD
  4738  0033                     	
  4739                           _writeLCD:	
  4740  0170                     ;incstack = 0
  4741                           	opt	stack 5
  4742                           ; Regs used in _writeLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4743                           ;writeLCD@x stored from wreg
  4744                           	movwf	(writeLCD@x)
  4745  0170  00FC               	line	89
  4746                           	
  4747                           l1646:	
  4748  0171                     ;lcd.c: 87: void writeLCD( unsigned char x, unsigned char y, const char * ptr );lcd.c: 8
                                 8: {;lcd.c: 89:         gotoxy(x,y);
  4749                           	movf	(writeLCD@y),w
  4750  0171  0878               	movwf	(??_writeLCD+0)+0
  4751  0172  00FB               	movf	(??_writeLCD+0)+0,w
  4752  0173  087B               	movwf	(gotoxy@y)
  4753  0174  00F4               	movf	(writeLCD@x),w
  4754  0175  087C               	fcall	_gotoxy
  4755  0176  120A  118A  20F3  120A  118A  	line	90
  4756                           ;lcd.c: 90:         while( *ptr )
  4757                           	goto	l1652
  4758  017B  2991               	
  4759                           l107:	
  4760  017C                     	line	91
  4761                           	
  4762                           l1648:	
  4763  017C                     ;lcd.c: 91:         putLCD( *ptr++ );
  4764                           	movf	(writeLCD@ptr+1),w
  4765  017C  087A               	bcf	status, 5	;RP0=0, select bank0
  4766  017D  1283               	bcf	status, 6	;RP1=0, select bank0
  4767  017E  1303               	movwf	btemp+1
  4768  017F  00FF               	movf	(writeLCD@ptr),w
  4769  0180  0879               	movwf	fsr0
  4770  0181  0084               	fcall	stringtab
  4771  0182  120A  118A  2003  120A  118A  	fcall	_putLCD
  4772  0187  120A  118A  21D7  120A  118A  	
  4773                           l1650:	
  4774  018C                     	movlw	01h
  4775  018C  3001               	addwf	(writeLCD@ptr),f
  4776  018D  07F9               	skipnc
  4777  018E  1803               	incf	(writeLCD@ptr+1),f
  4778  018F  0AFA               	goto	l1652
  4779  0190  2991               	
  4780                           l106:	
  4781  0191                     	line	90
  4782                           	
  4783                           l1652:	
  4784  0191                     ;lcd.c: 90:         while( *ptr )
  4785                           	movf	(writeLCD@ptr+1),w
  4786  0191  087A               	bcf	status, 5	;RP0=0, select bank0
  4787  0192  1283               	bcf	status, 6	;RP1=0, select bank0
  4788  0193  1303               	movwf	btemp+1
  4789  0194  00FF               	movf	(writeLCD@ptr),w
  4790  0195  0879               	movwf	fsr0
  4791  0196  0084               	fcall	stringtab
  4792  0197  120A  118A  2003  120A  118A  	xorlw	0
  4793  019C  3A00               	skipz
  4794  019D  1D03               	goto	u671
  4795  019E  29A0               	goto	u670
  4796  019F  29A1               u671:
  4797  01A0                     	goto	l1648
  4798  01A0  297C               u670:
  4799  01A1                     	goto	l109
  4800  01A1  29A2               	
  4801                           l108:	
  4802  01A2                     	line	92
  4803                           	
  4804                           l109:	
  4805  01A2                     	return
  4806  01A2  0008               	opt stack 0
  4807                           GLOBAL	__end_of_writeLCD
  4808                           	__end_of_writeLCD:
  4809  01A3                     	signat	_writeLCD,12409
  4810                           	global	_putLCD
  4811                           
  4812 ;; *************** function _putLCD *****************
  4813 ;; Defined at:
  4814 ;;		line 66 in file "lcd.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  c               1    wreg     unsigned char 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  c               1    2[COMMON] unsigned char 
  4819 ;;  nibble          1    3[COMMON] volatile struct .
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4829 ;;      Params:         0       0       0       0       0
  4830 ;;      Locals:         2       0       0       0       0
  4831 ;;      Temps:          2       0       0       0       0
  4832 ;;      Totals:         4       0       0       0       0
  4833 ;;Total ram usage:        4 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_writeLCD
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4842                           	line	66
  4843                           global __ptext7
  4844                           __ptext7:	;psect for function _putLCD
  4845  01D7                     psect	text7
  4846                           	file	"lcd.c"
  4847                           	line	66
  4848                           	global	__size_of_putLCD
  4849                           	__size_of_putLCD	equ	__end_of_putLCD-_putLCD
  4850  0034                     	
  4851                           _putLCD:	
  4852  01D7                     ;incstack = 0
  4853                           	opt	stack 6
  4854                           ; Regs used in _putLCD: [wreg+status,2+status,0]
  4855                           ;putLCD@c stored from wreg
  4856                           	movwf	(putLCD@c)
  4857  01D7  00F2               	line	70
  4858                           	
  4859                           l1610:	
  4860  01D8                     ;lcd.c: 66: void putLCD( unsigned char c );lcd.c: 67:  {;lcd.c: 68:         volatile REG
                                 nibble_t nibble;;lcd.c: 70:         nibble.HILO = c;
  4861                           	movf	(putLCD@c),w
  4862  01D8  0872               	movwf	(??_putLCD+0)+0
  4863  01D9  00F0               	movf	(??_putLCD+0)+0,w
  4864  01DA  0870               	movwf	(putLCD@nibble)	;volatile
  4865  01DB  00F3               	line	71
  4866                           	
  4867                           l1612:	
  4868  01DC                     ;lcd.c: 71:         LCD.RS = 1;
  4869                           	bcf	status, 5	;RP0=0, select bank0
  4870  01DC  1283               	bcf	status, 6	;RP1=0, select bank0
  4871  01DD  1303               	bsf	(8),4	;volatile
  4872  01DE  1608               	line	72
  4873                           	
  4874                           l1614:	
  4875  01DF                     ;lcd.c: 72:         LCD.BUS= nibble.HI;
  4876                           	swapf	(putLCD@nibble),w	;volatile
  4877  01DF  0E73               	andlw	(1<<4)-1
  4878  01E0  390F               	movwf	(??_putLCD+0)+0
  4879  01E1  00F0               	movf	(8),w	;volatile
  4880  01E2  0808               	xorwf	(??_putLCD+0)+0,w
  4881  01E3  0670               	andlw	not ((1<<4)-1)
  4882  01E4  39F0               	xorwf	(??_putLCD+0)+0,w
  4883  01E5  0670               	movwf	(8)	;volatile
  4884  01E6  0088               	line	73
  4885                           	
  4886                           l1616:	
  4887  01E7                     ;lcd.c: 73:         LCD.EN = 0;
  4888                           	bcf	(8),5	;volatile
  4889  01E7  1288               	line	74
  4890                           	
  4891                           l1618:	
  4892  01E8                     ;lcd.c: 74:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4893                           	opt asmopt_push
  4894                           opt asmopt_off
  4895                           movlw	3
  4896  01E8  3003               movwf	((??_putLCD+0)+0+1),f
  4897  01E9  00F1               	movlw	151
  4898  01EA  3097               movwf	((??_putLCD+0)+0),f
  4899  01EB  00F0               	u1287:
  4900  01EC                     decfsz	((??_putLCD+0)+0),f
  4901  01EC  0BF0               	goto	u1287
  4902  01ED  29EC               	decfsz	((??_putLCD+0)+0+1),f
  4903  01EE  0BF1               	goto	u1287
  4904  01EF  29EC               	nop2
  4905  01F0  29F1               opt asmopt_pop
  4906                           
  4907                           	line	75
  4908                           	
  4909                           l1620:	
  4910  01F1                     ;lcd.c: 75:         LCD.EN = 1;
  4911                           	bcf	status, 5	;RP0=0, select bank0
  4912  01F1  1283               	bcf	status, 6	;RP1=0, select bank0
  4913  01F2  1303               	bsf	(8),5	;volatile
  4914  01F3  1688               	line	77
  4915                           	
  4916                           l1622:	
  4917  01F4                     ;lcd.c: 77:         LCD.RS = 1;
  4918                           	bsf	(8),4	;volatile
  4919  01F4  1608               	line	78
  4920                           ;lcd.c: 78:         LCD.BUS = nibble.LO;
  4921                           	movf	(putLCD@nibble),w	;volatile
  4922  01F5  0873               	andlw	(1<<4)-1
  4923  01F6  390F               	movwf	(??_putLCD+0)+0
  4924  01F7  00F0               	movf	(8),w	;volatile
  4925  01F8  0808               	xorwf	(??_putLCD+0)+0,w
  4926  01F9  0670               	andlw	not ((1<<4)-1)
  4927  01FA  39F0               	xorwf	(??_putLCD+0)+0,w
  4928  01FB  0670               	movwf	(8)	;volatile
  4929  01FC  0088               	line	79
  4930                           	
  4931                           l1624:	
  4932  01FD                     ;lcd.c: 79:         LCD.EN = 0;
  4933                           	bcf	(8),5	;volatile
  4934  01FD  1288               	line	80
  4935                           	
  4936                           l1626:	
  4937  01FE                     ;lcd.c: 80:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4938                           	opt asmopt_push
  4939                           opt asmopt_off
  4940                           movlw	3
  4941  01FE  3003               movwf	((??_putLCD+0)+0+1),f
  4942  01FF  00F1               	movlw	151
  4943  0200  3097               movwf	((??_putLCD+0)+0),f
  4944  0201  00F0               	u1297:
  4945  0202                     decfsz	((??_putLCD+0)+0),f
  4946  0202  0BF0               	goto	u1297
  4947  0203  2A02               	decfsz	((??_putLCD+0)+0+1),f
  4948  0204  0BF1               	goto	u1297
  4949  0205  2A02               	nop2
  4950  0206  2A07               opt asmopt_pop
  4951                           
  4952                           	line	81
  4953                           	
  4954                           l1628:	
  4955  0207                     ;lcd.c: 81:         LCD.EN = 1;
  4956                           	bcf	status, 5	;RP0=0, select bank0
  4957  0207  1283               	bcf	status, 6	;RP1=0, select bank0
  4958  0208  1303               	bsf	(8),5	;volatile
  4959  0209  1688               	line	82
  4960                           	
  4961                           l100:	
  4962  020A                     	return
  4963  020A  0008               	opt stack 0
  4964                           GLOBAL	__end_of_putLCD
  4965                           	__end_of_putLCD:
  4966  020B                     	signat	_putLCD,4217
  4967                           	global	_gotoxy
  4968                           
  4969 ;; *************** function _gotoxy *****************
  4970 ;; Defined at:
  4971 ;;		line 83 in file "lcd.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  x               1    wreg     unsigned char 
  4974 ;;  y               1    4[COMMON] unsigned char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  x               1    7[COMMON] unsigned char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, status,2, status,0, pclath, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4986 ;;      Params:         1       0       0       0       0
  4987 ;;      Locals:         1       0       0       0       0
  4988 ;;      Temps:          2       0       0       0       0
  4989 ;;      Totals:         4       0       0       0       0
  4990 ;;Total ram usage:        4 bytes
  4991 ;; Hardware stack levels used:    1
  4992 ;; Hardware stack levels required when called:    1
  4993 ;; This function calls:
  4994 ;;		_cmdLCD
  4995 ;; This function is called by:
  4996 ;;		_writeLCD
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5000                           	line	83
  5001                           global __ptext8
  5002                           __ptext8:	;psect for function _gotoxy
  5003  00F3                     psect	text8
  5004                           	file	"lcd.c"
  5005                           	line	83
  5006                           	global	__size_of_gotoxy
  5007                           	__size_of_gotoxy	equ	__end_of_gotoxy-_gotoxy
  5008  0018                     	
  5009                           _gotoxy:	
  5010  00F3                     ;incstack = 0
  5011                           	opt	stack 5
  5012                           ; Regs used in _gotoxy: [wreg+status,2+status,0+pclath+cstack]
  5013                           ;gotoxy@x stored from wreg
  5014                           	movwf	(gotoxy@x)
  5015  00F3  00F7               	line	85
  5016                           	
  5017                           l1630:	
  5018  00F4                     ;lcd.c: 83: void gotoxy( unsigned char x, unsigned char y );lcd.c: 84: {;lcd.c: 85:     
                                     cmdLCD((0x80 | 0xC0 * y) + (x & 0X3F));
  5019                           	movlw	low(03Fh)
  5020  00F4  303F               	andwf	(gotoxy@x),w
  5021  00F5  0577               	movwf	(??_gotoxy+0)+0
  5022  00F6  00F5               	movf	(gotoxy@y),w
  5023  00F7  0874               	movwf	(??_gotoxy+1)+0
  5024  00F8  00F6               	movlw	(06h)-1
  5025  00F9  3005               u645:
  5026  00FA                     	clrc
  5027  00FA  1003               	rlf	(??_gotoxy+1)+0,f
  5028  00FB  0DF6               	addlw	-1
  5029  00FC  3EFF               	skipz
  5030  00FD  1D03               	goto	u645
  5031  00FE  28FA               	clrc
  5032  00FF  1003               	rlf	(??_gotoxy+1)+0,w
  5033  0100  0D76               	xorlw	0ffh
  5034  0101  3AFF               	addlw	1
  5035  0102  3E01               	iorlw	080h
  5036  0103  3880               	addwf	0+(??_gotoxy+0)+0,w
  5037  0104  0775               	fcall	_cmdLCD
  5038  0105  120A  118A  22C1  120A  118A  	line	86
  5039                           	
  5040                           l103:	
  5041  010A                     	return
  5042  010A  0008               	opt stack 0
  5043                           GLOBAL	__end_of_gotoxy
  5044                           	__end_of_gotoxy:
  5045  010B                     	signat	_gotoxy,8313
  5046                           	global	_clearLCD
  5047                           
  5048 ;; *************** function _clearLCD *****************
  5049 ;; Defined at:
  5050 ;;		line 103 in file "lcd.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0, pclath, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5064 ;;      Params:         0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0
  5067 ;;      Totals:         0       0       0       0       0
  5068 ;;Total ram usage:        0 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    1
  5071 ;; This function calls:
  5072 ;;		_cmdLCD
  5073 ;; This function is called by:
  5074 ;;		_screen_car
  5075 ;;		_main
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5079                           	line	103
  5080                           global __ptext9
  5081                           __ptext9:	;psect for function _clearLCD
  5082  0088                     psect	text9
  5083                           	file	"lcd.c"
  5084                           	line	103
  5085                           	global	__size_of_clearLCD
  5086                           	__size_of_clearLCD	equ	__end_of_clearLCD-_clearLCD
  5087  0007                     	
  5088                           _clearLCD:	
  5089  0088                     ;incstack = 0
  5090                           	opt	stack 5
  5091                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  5092                           	line	105
  5093                           	
  5094                           l1654:	
  5095  0088                     ;lcd.c: 105:     cmdLCD(0x01);
  5096                           	movlw	low(01h)
  5097  0088  3001               	fcall	_cmdLCD
  5098  0089  120A  118A  22C1  120A  118A  	line	106
  5099                           	
  5100                           l118:	
  5101  008E                     	return
  5102  008E  0008               	opt stack 0
  5103                           GLOBAL	__end_of_clearLCD
  5104                           	__end_of_clearLCD:
  5105  008F                     	signat	_clearLCD,89
  5106                           	global	_restartFIFO
  5107                           
  5108 ;; *************** function _restartFIFO *****************
  5109 ;; Defined at:
  5110 ;;		line 67 in file "fifo.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		status,2
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5124 ;;      Params:         0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0
  5127 ;;      Totals:         0       0       0       0       0
  5128 ;;Total ram usage:        0 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5137                           	file	"fifo.c"
  5138                           	line	67
  5139                           global __ptext10
  5140                           __ptext10:	;psect for function _restartFIFO
  5141  0075                     psect	text10
  5142                           	file	"fifo.c"
  5143                           	line	67
  5144                           	global	__size_of_restartFIFO
  5145                           	__size_of_restartFIFO	equ	__end_of_restartFIFO-_restartFIFO
  5146  0004                     	
  5147                           _restartFIFO:	
  5148  0075                     ;incstack = 0
  5149                           	opt	stack 7
  5150                           ; Regs used in _restartFIFO: [status,2]
  5151                           	line	69
  5152                           	
  5153                           l1704:	
  5154  0075                     ;fifo.c: 69:         fifoTail = 0;
  5155                           	bcf	status, 5	;RP0=0, select bank0
  5156  0075  1283               	bcf	status, 6	;RP1=0, select bank0
  5157  0076  1303               	clrf	(_fifoTail)
  5158  0077  01A5               	line	70
  5159                           	
  5160                           l33:	
  5161  0078                     	return
  5162  0078  0008               	opt stack 0
  5163                           GLOBAL	__end_of_restartFIFO
  5164                           	__end_of_restartFIFO:
  5165  0079                     	signat	_restartFIFO,89
  5166                           	global	_resetFIFO
  5167                           
  5168 ;; *************** function _resetFIFO *****************
  5169 ;; Defined at:
  5170 ;;		line 60 in file "fifo.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5184 ;;      Params:         0       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0
  5187 ;;      Totals:         0       0       0       0       0
  5188 ;;Total ram usage:        0 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    1
  5191 ;; This function calls:
  5192 ;;		_delFIFO
  5193 ;; This function is called by:
  5194 ;;		_main
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5198                           	line	60
  5199                           global __ptext11
  5200                           __ptext11:	;psect for function _resetFIFO
  5201  0097                     psect	text11
  5202                           	file	"fifo.c"
  5203                           	line	60
  5204                           	global	__size_of_resetFIFO
  5205                           	__size_of_resetFIFO	equ	__end_of_resetFIFO-_resetFIFO
  5206  000B                     	
  5207                           _resetFIFO:	
  5208  0097                     ;incstack = 0
  5209                           	opt	stack 6
  5210                           ; Regs used in _resetFIFO: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5211                           	line	62
  5212                           	
  5213                           l1698:	
  5214  0097                     ;fifo.c: 62:     delFIFO(16);
  5215                           	movlw	low(010h)
  5216  0097  3010               	fcall	_delFIFO
  5217  0098  120A  118A  2124  120A  118A  	line	63
  5218                           	
  5219                           l1700:	
  5220  009D                     ;fifo.c: 63:     fifoHead = 0;
  5221                           	clrf	(_fifoHead)
  5222  009D  01FD               	line	64
  5223                           	
  5224                           l1702:	
  5225  009E                     ;fifo.c: 64:     fifoTail = 0;
  5226                           	bcf	status, 5	;RP0=0, select bank0
  5227  009E  1283               	bcf	status, 6	;RP1=0, select bank0
  5228  009F  1303               	clrf	(_fifoTail)
  5229  00A0  01A5               	line	65
  5230                           	
  5231                           l30:	
  5232  00A1                     	return
  5233  00A1  0008               	opt stack 0
  5234                           GLOBAL	__end_of_resetFIFO
  5235                           	__end_of_resetFIFO:
  5236  00A2                     	signat	_resetFIFO,89
  5237                           	global	_delFIFO
  5238                           
  5239 ;; *************** function _delFIFO *****************
  5240 ;; Defined at:
  5241 ;;		line 47 in file "fifo.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  n               1    wreg     unsigned char 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  n               1    1[COMMON] unsigned char 
  5246 ;;  ret             1    2[COMMON] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      unsigned char 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5256 ;;      Params:         0       0       0       0       0
  5257 ;;      Locals:         2       0       0       0       0
  5258 ;;      Temps:          1       0       0       0       0
  5259 ;;      Totals:         3       0       0       0       0
  5260 ;;Total ram usage:        3 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_resetFIFO
  5266 ;;		_main
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5270                           	line	47
  5271                           global __ptext12
  5272                           __ptext12:	;psect for function _delFIFO
  5273  0124                     psect	text12
  5274                           	file	"fifo.c"
  5275                           	line	47
  5276                           	global	__size_of_delFIFO
  5277                           	__size_of_delFIFO	equ	__end_of_delFIFO-_delFIFO
  5278  0021                     	
  5279                           _delFIFO:	
  5280  0124                     ;incstack = 0
  5281                           	opt	stack 6
  5282                           ; Regs used in _delFIFO: [wreg-fsr0h+status,2+status,0]
  5283                           ;delFIFO@n stored from wreg
  5284                           	movwf	(delFIFO@n)
  5285  0124  00F1               	line	50
  5286                           	
  5287                           l1632:	
  5288  0125                     ;fifo.c: 47: unsigned char delFIFO( unsigned char n );fifo.c: 48: {;fifo.c: 49:     unsi
                                 gned char ret;;fifo.c: 50:     while( n && fifoHead )
  5289                           	goto	l22
  5290  0125  2936               	
  5291                           l23:	
  5292  0126                     	line	52
  5293                           	
  5294                           l1634:	
  5295  0126                     ;fifo.c: 51:     {;fifo.c: 52:         --fifoHead;
  5296                           	movlw	01h
  5297  0126  3001               	subwf	(_fifoHead),f
  5298  0127  02FD               	line	53
  5299                           	
  5300                           l1636:	
  5301  0128                     ;fifo.c: 53:         ret = fifo[fifoHead];
  5302                           	movf	(_fifoHead),w
  5303  0128  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5304  0129  3E26               	movwf	fsr0
  5305  012A  0084               	bcf	status, 7	;select IRP bank0
  5306  012B  1383               	movf	indf,w
  5307  012C  0800               	movwf	(??_delFIFO+0)+0
  5308  012D  00F0               	movf	(??_delFIFO+0)+0,w
  5309  012E  0870               	movwf	(delFIFO@ret)
  5310  012F  00F2               	line	54
  5311                           	
  5312                           l1638:	
  5313  0130                     ;fifo.c: 54:         fifo[ fifoHead ] = 0;
  5314                           	movf	(_fifoHead),w
  5315  0130  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5316  0131  3E26               	movwf	fsr0
  5317  0132  0084               	clrf	indf
  5318  0133  0180               	line	55
  5319                           ;fifo.c: 55:         --n;
  5320                           	movlw	01h
  5321  0134  3001               	subwf	(delFIFO@n),f
  5322  0135  02F1               	line	56
  5323                           ;fifo.c: 56:     }
  5324                           	
  5325                           l22:	
  5326  0136                     	line	50
  5327                           ;fifo.c: 50:     while( n && fifoHead )
  5328                           	movf	((delFIFO@n)),w
  5329  0136  0871               	btfsc	status,2
  5330  0137  1903               	goto	u651
  5331  0138  293A               	goto	u650
  5332  0139  293B               u651:
  5333  013A                     	goto	l1642
  5334  013A  2942               u650:
  5335  013B                     	
  5336                           l1640:	
  5337  013B                     	movf	((_fifoHead)),w
  5338  013B  087D               	btfss	status,2
  5339  013C  1D03               	goto	u661
  5340  013D  293F               	goto	u660
  5341  013E  2940               u661:
  5342  013F                     	goto	l1634
  5343  013F  2926               u660:
  5344  0140                     	goto	l1642
  5345  0140  2942               	
  5346                           l25:	
  5347  0141                     	goto	l1642
  5348  0141  2942               	
  5349                           l26:	
  5350  0142                     	line	57
  5351                           	
  5352                           l1642:	
  5353  0142                     ;fifo.c: 57:     return( ret );
  5354                           	movf	(delFIFO@ret),w
  5355  0142  0872               	goto	l27
  5356  0143  2944               	
  5357                           l1644:	
  5358  0144                     	line	58
  5359                           	
  5360                           l27:	
  5361  0144                     	return
  5362  0144  0008               	opt stack 0
  5363                           GLOBAL	__end_of_delFIFO
  5364                           	__end_of_delFIFO:
  5365  0145                     	signat	_delFIFO,4217
  5366                           	global	_putFIFO
  5367                           
  5368 ;; *************** function _putFIFO *****************
  5369 ;; Defined at:
  5370 ;;		line 19 in file "fifo.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  c               1    wreg     unsigned char 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  c               1    1[COMMON] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5384 ;;      Params:         0       0       0       0       0
  5385 ;;      Locals:         1       0       0       0       0
  5386 ;;      Temps:          1       0       0       0       0
  5387 ;;      Totals:         2       0       0       0       0
  5388 ;;Total ram usage:        2 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_main
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5397                           	line	19
  5398                           global __ptext13
  5399                           __ptext13:	;psect for function _putFIFO
  5400  00AE                     psect	text13
  5401                           	file	"fifo.c"
  5402                           	line	19
  5403                           	global	__size_of_putFIFO
  5404                           	__size_of_putFIFO	equ	__end_of_putFIFO-_putFIFO
  5405  000E                     	
  5406                           _putFIFO:	
  5407  00AE                     ;incstack = 0
  5408                           	opt	stack 7
  5409                           ; Regs used in _putFIFO: [wreg-fsr0h+status,2+status,0]
  5410                           ;putFIFO@c stored from wreg
  5411                           	movwf	(putFIFO@c)
  5412  00AE  00F1               	line	21
  5413                           	
  5414                           l1678:	
  5415  00AF                     ;fifo.c: 19: void putFIFO( unsigned char c );fifo.c: 20: {;fifo.c: 21:     fifo[ fifoHea
                                 d ] = c;
  5416                           	movf	(putFIFO@c),w
  5417  00AF  0871               	movwf	(??_putFIFO+0)+0
  5418  00B0  00F0               	movf	(_fifoHead),w
  5419  00B1  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5420  00B2  3E26               	movwf	fsr0
  5421  00B3  0084               	movf	(??_putFIFO+0)+0,w
  5422  00B4  0870               	bcf	status, 7	;select IRP bank0
  5423  00B5  1383               	movwf	indf
  5424  00B6  0080               	line	22
  5425                           	
  5426                           l1680:	
  5427  00B7                     ;fifo.c: 22:     ++fifoHead;
  5428                           	movlw	low(01h)
  5429  00B7  3001               	movwf	(??_putFIFO+0)+0
  5430  00B8  00F0               	movf	(??_putFIFO+0)+0,w
  5431  00B9  0870               	addwf	(_fifoHead),f
  5432  00BA  07FD               	line	23
  5433                           	
  5434                           l9:	
  5435  00BB                     	return
  5436  00BB  0008               	opt stack 0
  5437                           GLOBAL	__end_of_putFIFO
  5438                           	__end_of_putFIFO:
  5439  00BC                     	signat	_putFIFO,4217
  5440                           	global	_previousKey
  5441                           
  5442 ;; *************** function _previousKey *****************
  5443 ;; Defined at:
  5444 ;;		line 55 in file "keyboard.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      unsigned char 
  5451 ;; Registers used:
  5452 ;;		wreg
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5458 ;;      Params:         0       0       0       0       0
  5459 ;;      Locals:         0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0
  5461 ;;      Totals:         0       0       0       0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_main
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5471                           	file	"keyboard.c"
  5472                           	line	55
  5473                           global __ptext14
  5474                           __ptext14:	;psect for function _previousKey
  5475  007E                     psect	text14
  5476                           	file	"keyboard.c"
  5477                           	line	55
  5478                           	global	__size_of_previousKey
  5479                           	__size_of_previousKey	equ	__end_of_previousKey-_previousKey
  5480  0005                     	
  5481                           _previousKey:	
  5482  007E                     ;incstack = 0
  5483                           	opt	stack 7
  5484                           ; Regs used in _previousKey: [wreg]
  5485                           	line	57
  5486                           	
  5487                           l1706:	
  5488  007E                     ;keyboard.c: 57:     return( prevKey );
  5489                           	bcf	status, 5	;RP0=0, select bank0
  5490  007E  1283               	bcf	status, 6	;RP1=0, select bank0
  5491  007F  1303               	movf	(_prevKey),w
  5492  0080  0824               	goto	l54
  5493  0081  2882               	
  5494                           l1708:	
  5495  0082                     	line	58
  5496                           	
  5497                           l54:	
  5498  0082                     	return
  5499  0082  0008               	opt stack 0
  5500                           GLOBAL	__end_of_previousKey
  5501                           	__end_of_previousKey:
  5502  0083                     	signat	_previousKey,89
  5503                           	global	_keyboardScan
  5504                           
  5505 ;; *************** function _keyboardScan *****************
  5506 ;; Defined at:
  5507 ;;		line 75 in file "keyboard.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  j               1   10[COMMON] unsigned char 
  5512 ;;  i               1    9[COMMON] unsigned char 
  5513 ;;  aux             1    8[COMMON] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  1    wreg      unsigned char 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5523 ;;      Params:         0       0       0       0       0
  5524 ;;      Locals:         3       0       0       0       0
  5525 ;;      Temps:          8       0       0       0       0
  5526 ;;      Totals:        11       0       0       0       0
  5527 ;;Total ram usage:       11 bytes
  5528 ;; Hardware stack levels used:    2
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_main
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5536                           	line	75
  5537                           global __ptext15
  5538                           __ptext15:	;psect for function _keyboardScan
  5539  0320                     psect	text15
  5540                           	file	"keyboard.c"
  5541                           	line	75
  5542                           	global	__size_of_keyboardScan
  5543                           	__size_of_keyboardScan	equ	__end_of_keyboardScan-_keyboardScan
  5544  007F                     	
  5545                           _keyboardScan:	
  5546  0320                     ;incstack = 0
  5547                           	opt	stack 6
  5548                           ; Regs used in _keyboardScan: [wreg-fsr0h+status,2+status,0+pclath]
  5549                           	line	78
  5550                           	
  5551                           l1714:	
  5552  0320                     ;keyboard.c: 77:     unsigned char i, j;;keyboard.c: 78:     unsigned char aux = 0;
  5553                           	clrf	(keyboardScan@aux)
  5554  0320  01F8               	line	80
  5555                           ;keyboard.c: 80:     for( j=0; j<4; j++ )
  5556                           	clrf	(keyboardScan@j)
  5557  0321  01FA               	
  5558                           l1716:	
  5559  0322                     	movlw	low(04h)
  5560  0322  3004               	subwf	(keyboardScan@j),w
  5561  0323  027A               	skipc
  5562  0324  1C03               	goto	u721
  5563  0325  2B27               	goto	u720
  5564  0326  2B28               u721:
  5565  0327                     	goto	l1720
  5566  0327  2B2A               u720:
  5567  0328                     	goto	l1740
  5568  0328  2B93               	
  5569                           l1718:	
  5570  0329                     	goto	l1740
  5571  0329  2B93               	
  5572                           l60:	
  5573  032A                     	line	82
  5574                           	
  5575                           l1720:	
  5576  032A                     ;keyboard.c: 81:     {;keyboard.c: 82:         KEYBOARDbits.cols = ~(0x01<<j);
  5577                           	movlw	low(01h)
  5578  032A  3001               	movwf	(??_keyboardScan+0)+0
  5579  032B  00F0               	incf	(keyboardScan@j),w
  5580  032C  0A7A               	goto	u734
  5581  032D  2B30               u735:
  5582  032E                     	clrc
  5583  032E  1003               	rlf	(??_keyboardScan+0)+0,f
  5584  032F  0DF0               u734:
  5585  0330                     	addlw	-1
  5586  0330  3EFF               	skipz
  5587  0331  1D03               	goto	u735
  5588  0332  2B2E               	movf	0+(??_keyboardScan+0)+0,w
  5589  0333  0870               	xorlw	0ffh
  5590  0334  3AFF               	movwf	(??_keyboardScan+1)+0
  5591  0335  00F1               	swapf	(??_keyboardScan+1)+0,f
  5592  0336  0EF1               	bcf	status, 5	;RP0=0, select bank0
  5593  0337  1283               	bcf	status, 6	;RP1=0, select bank0
  5594  0338  1303               	movf	(6),w	;volatile
  5595  0339  0806               	xorwf	(??_keyboardScan+1)+0,w
  5596  033A  0671               	andlw	not (((1<<4)-1)<<4)
  5597  033B  390F               	xorwf	(??_keyboardScan+1)+0,w
  5598  033C  0671               	movwf	(6)	;volatile
  5599  033D  0086               	line	83
  5600                           	
  5601                           l1722:	
  5602  033E                     ;keyboard.c: 83:         for( i=0; i<4; i++ )
  5603                           	clrf	(keyboardScan@i)
  5604  033E  01F9               	
  5605                           l1724:	
  5606  033F                     	movlw	low(04h)
  5607  033F  3004               	subwf	(keyboardScan@i),w
  5608  0340  0279               	skipc
  5609  0341  1C03               	goto	u741
  5610  0342  2B44               	goto	u740
  5611  0343  2B45               u741:
  5612  0344                     	goto	l1728
  5613  0344  2B47               u740:
  5614  0345                     	goto	l1736
  5615  0345  2B88               	
  5616                           l1726:	
  5617  0346                     	goto	l1736
  5618  0346  2B88               	
  5619                           l62:	
  5620  0347                     	line	85
  5621                           	
  5622                           l1728:	
  5623  0347                     ;keyboard.c: 84:         {;keyboard.c: 85:             if( ~KEYBOARDbits.rows & (0x01<<i
                                 ) )
  5624                           	movf	(6),w	;volatile
  5625  0347  0806               	andlw	(1<<4)-1
  5626  0348  390F               	movwf	(??_keyboardScan+0)+0
  5627  0349  00F0               	comf	(??_keyboardScan+0)+0,w
  5628  034A  0970               	movwf	(??_keyboardScan+1)+0
  5629  034B  00F1               	clrf	(??_keyboardScan+1)+0+1
  5630  034C  01F2               	comf	(??_keyboardScan+1)+0+1
  5631  034D  09F2               	incf	(keyboardScan@i),w
  5632  034E  0A79               	movwf	(??_keyboardScan+3)+0
  5633  034F  00F3               	movlw	01h
  5634  0350  3001               	movwf	(??_keyboardScan+4)+0
  5635  0351  00F4               	movlw	0
  5636  0352  3000               	movwf	(??_keyboardScan+4)+0+1
  5637  0353  00F5               	goto	u754
  5638  0354  2B58               u755:
  5639  0355                     	clrc
  5640  0355  1003               	rlf	(??_keyboardScan+4)+0,f
  5641  0356  0DF4               	rlf	(??_keyboardScan+4)+1,f
  5642  0357  0DF5               u754:
  5643  0358                     	decfsz	(??_keyboardScan+3)+0,f
  5644  0358  0BF3               	goto	u755
  5645  0359  2B55               	
  5646                           	movf	0+(??_keyboardScan+1)+0,w
  5647  035A  0871               	andwf	0+(??_keyboardScan+4)+0,w
  5648  035B  0574               	movwf	(??_keyboardScan+6)+0
  5649  035C  00F6               	movf	1+(??_keyboardScan+1)+0,w
  5650  035D  0872               	andwf	1+(??_keyboardScan+4)+0,w
  5651  035E  0575               	movwf	1+(??_keyboardScan+6)+0
  5652  035F  00F7               	movf	((??_keyboardScan+6)+0),w
  5653  0360  0876               iorwf	((??_keyboardScan+6)+1),w
  5654  0361  0477               	btfsc	status,2
  5655  0362  1903               	goto	u761
  5656  0363  2B65               	goto	u760
  5657  0364  2B66               u761:
  5658  0365                     	goto	l1732
  5659  0365  2B7D               u760:
  5660  0366                     	line	86
  5661                           	
  5662                           l1730:	
  5663  0366                     ;keyboard.c: 86:                 aux = keyboardMatrix[i][j];
  5664                           	movf	(keyboardScan@i),w
  5665  0366  0879               	movwf	(??_keyboardScan+0)+0
  5666  0367  00F0               	movlw	02h
  5667  0368  3002               u775:
  5668  0369                     	clrc
  5669  0369  1003               	rlf	(??_keyboardScan+0)+0,f
  5670  036A  0DF0               	addlw	-1
  5671  036B  3EFF               	skipz
  5672  036C  1D03               	goto	u775
  5673  036D  2B69               	movlw	(low((((_keyboardMatrix)-__stringbase)|8000h)))&0ffh
  5674  036E  3001               	addwf	0+(??_keyboardScan+0)+0,w
  5675  036F  0770               	movwf	(??_keyboardScan+1)+0
  5676  0370  00F1               	movf	(keyboardScan@j),w
  5677  0371  087A               	addwf	0+(??_keyboardScan+1)+0,w
  5678  0372  0771               	movwf	fsr0
  5679  0373  0084               	fcall	stringdir
  5680  0374  120A  118A  200D  120A  118A  	movwf	(??_keyboardScan+2)+0
  5681  0379  00F2               	movf	(??_keyboardScan+2)+0,w
  5682  037A  0872               	movwf	(keyboardScan@aux)
  5683  037B  00F8               	goto	l1732
  5684  037C  2B7D               	
  5685                           l64:	
  5686  037D                     	line	87
  5687                           	
  5688                           l1732:	
  5689  037D                     ;keyboard.c: 87:         }
  5690                           	movlw	low(01h)
  5691  037D  3001               	movwf	(??_keyboardScan+0)+0
  5692  037E  00F0               	movf	(??_keyboardScan+0)+0,w
  5693  037F  0870               	addwf	(keyboardScan@i),f
  5694  0380  07F9               	
  5695                           l1734:	
  5696  0381                     	movlw	low(04h)
  5697  0381  3004               	subwf	(keyboardScan@i),w
  5698  0382  0279               	skipc
  5699  0383  1C03               	goto	u781
  5700  0384  2B86               	goto	u780
  5701  0385  2B87               u781:
  5702  0386                     	goto	l1728
  5703  0386  2B47               u780:
  5704  0387                     	goto	l1736
  5705  0387  2B88               	
  5706                           l63:	
  5707  0388                     	line	88
  5708                           	
  5709                           l1736:	
  5710  0388                     ;keyboard.c: 88:     }
  5711                           	movlw	low(01h)
  5712  0388  3001               	movwf	(??_keyboardScan+0)+0
  5713  0389  00F0               	movf	(??_keyboardScan+0)+0,w
  5714  038A  0870               	addwf	(keyboardScan@j),f
  5715  038B  07FA               	
  5716                           l1738:	
  5717  038C                     	movlw	low(04h)
  5718  038C  3004               	subwf	(keyboardScan@j),w
  5719  038D  027A               	skipc
  5720  038E  1C03               	goto	u791
  5721  038F  2B91               	goto	u790
  5722  0390  2B92               u791:
  5723  0391                     	goto	l1720
  5724  0391  2B2A               u790:
  5725  0392                     	goto	l1740
  5726  0392  2B93               	
  5727                           l61:	
  5728  0393                     	line	90
  5729                           	
  5730                           l1740:	
  5731  0393                     ;keyboard.c: 90:     prevKey = currKey;
  5732                           	bcf	status, 5	;RP0=0, select bank0
  5733  0393  1283               	bcf	status, 6	;RP1=0, select bank0
  5734  0394  1303               	movf	(_currKey),w
  5735  0395  0823               	movwf	(??_keyboardScan+0)+0
  5736  0396  00F0               	movf	(??_keyboardScan+0)+0,w
  5737  0397  0870               	movwf	(_prevKey)
  5738  0398  00A4               	line	91
  5739                           ;keyboard.c: 91:     currKey = aux;
  5740                           	movf	(keyboardScan@aux),w
  5741  0399  0878               	movwf	(??_keyboardScan+0)+0
  5742  039A  00F0               	movf	(??_keyboardScan+0)+0,w
  5743  039B  0870               	movwf	(_currKey)
  5744  039C  00A3               	goto	l65
  5745  039D  2B9E               	line	93
  5746                           	
  5747                           l1742:	
  5748  039E                     	line	94
  5749                           ;keyboard.c: 93:     return( aux );;	Return value of _keyboardScan is never used
  5750                           	
  5751                           l65:	
  5752  039E                     	return
  5753  039E  0008               	opt stack 0
  5754                           GLOBAL	__end_of_keyboardScan
  5755                           	__end_of_keyboardScan:
  5756  039F                     	signat	_keyboardScan,89
  5757                           	global	_initSerialIO
  5758                           
  5759 ;; *************** function _initSerialIO *****************
  5760 ;; Defined at:
  5761 ;;		line 89 in file "serialIO.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  ptrIn           1    wreg     PTR unsigned char 
  5764 ;;		 -> main@sensor(1), 
  5765 ;;  ptrOut          1    0[COMMON] PTR unsigned char 
  5766 ;;		 -> main@atuador(1), 
  5767 ;;  length          1    1[COMMON] unsigned char 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  ptrIn           1    3[COMMON] PTR unsigned char 
  5770 ;;		 -> main@sensor(1), 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  1    wreg      void 
  5773 ;; Registers used:
  5774 ;;		wreg
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5780 ;;      Params:         2       0       0       0       0
  5781 ;;      Locals:         1       0       0       0       0
  5782 ;;      Temps:          1       0       0       0       0
  5783 ;;      Totals:         4       0       0       0       0
  5784 ;;Total ram usage:        4 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_main
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5793                           	file	"serialIO.c"
  5794                           	line	89
  5795                           global __ptext16
  5796                           __ptext16:	;psect for function _initSerialIO
  5797  01A3                     psect	text16
  5798                           	file	"serialIO.c"
  5799                           	line	89
  5800                           	global	__size_of_initSerialIO
  5801                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
  5802  0034                     	
  5803                           _initSerialIO:	
  5804  01A3                     ;incstack = 0
  5805                           	opt	stack 7
  5806                           ; Regs used in _initSerialIO: [wreg]
  5807                           ;initSerialIO@ptrIn stored from wreg
  5808                           	movwf	(initSerialIO@ptrIn)
  5809  01A3  00F3               	line	91
  5810                           	
  5811                           l1790:	
  5812  01A4                     ;serialIO.c: 89: void initSerialIO( unsigned char * ptrIn, unsigned char * ptrOut, unsig
                                 ned char length );serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  5813                           	movf	(initSerialIO@ptrIn),w
  5814  01A4  0873               	movwf	(??_initSerialIO+0)+0
  5815  01A5  00F2               	movf	(??_initSerialIO+0)+0,w
  5816  01A6  0872               	bcf	status, 5	;RP0=0, select bank0
  5817  01A7  1283               	bcf	status, 6	;RP1=0, select bank0
  5818  01A8  1303               	movwf	(_ptrSerialIn)
  5819  01A9  00A2               	line	92
  5820                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  5821                           	movf	(initSerialIO@ptrOut),w
  5822  01AA  0870               	movwf	(??_initSerialIO+0)+0
  5823  01AB  00F2               	movf	(??_initSerialIO+0)+0,w
  5824  01AC  0872               	movwf	(_ptrSerialOut)
  5825  01AD  00A1               	line	93
  5826                           ;serialIO.c: 93:     lenSerialIO = length;
  5827                           	movf	(initSerialIO@length),w
  5828  01AE  0871               	movwf	(??_initSerialIO+0)+0
  5829  01AF  00F2               	movf	(??_initSerialIO+0)+0,w
  5830  01B0  0872               	movwf	(_lenSerialIO)
  5831  01B1  00A0               	line	95
  5832                           	
  5833                           l1792:	
  5834  01B2                     ;serialIO.c: 95:     PORTAbits.RA3 = 0;
  5835                           	bcf	(5),3	;volatile
  5836  01B2  1185               	line	96
  5837                           	
  5838                           l1794:	
  5839  01B3                     ;serialIO.c: 96:     ANSELbits.ANS3 = 0;
  5840                           	bsf	status, 5	;RP0=1, select bank3
  5841  01B3  1683               	bsf	status, 6	;RP1=1, select bank3
  5842  01B4  1703               	bcf	(392)^0180h,3	;volatile
  5843  01B5  1188               	line	97
  5844                           	
  5845                           l1796:	
  5846  01B6                     ;serialIO.c: 97:     TRISAbits.TRISA3 = 0;
  5847                           	bsf	status, 5	;RP0=1, select bank1
  5848  01B6  1683               	bcf	status, 6	;RP1=0, select bank1
  5849  01B7  1303               	bcf	(133)^080h,3	;volatile
  5850  01B8  1185               	line	100
  5851                           	
  5852                           l1798:	
  5853  01B9                     ;serialIO.c: 100:     PORTAbits.RA2 = 0;
  5854                           	bcf	status, 5	;RP0=0, select bank0
  5855  01B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5856  01BA  1303               	bcf	(5),2	;volatile
  5857  01BB  1105               	line	101
  5858                           	
  5859                           l1800:	
  5860  01BC                     ;serialIO.c: 101:     ANSELbits.ANS2 = 0;
  5861                           	bsf	status, 5	;RP0=1, select bank3
  5862  01BC  1683               	bsf	status, 6	;RP1=1, select bank3
  5863  01BD  1703               	bcf	(392)^0180h,2	;volatile
  5864  01BE  1108               	line	102
  5865                           	
  5866                           l1802:	
  5867  01BF                     ;serialIO.c: 102:     TRISAbits.TRISA2 = 0;
  5868                           	bsf	status, 5	;RP0=1, select bank1
  5869  01BF  1683               	bcf	status, 6	;RP1=0, select bank1
  5870  01C0  1303               	bcf	(133)^080h,2	;volatile
  5871  01C1  1105               	line	105
  5872                           	
  5873                           l1804:	
  5874  01C2                     ;serialIO.c: 105:     PORTAbits.RA0 = 0;
  5875                           	bcf	status, 5	;RP0=0, select bank0
  5876  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  5877  01C3  1303               	bcf	(5),0	;volatile
  5878  01C4  1005               	line	106
  5879                           	
  5880                           l1806:	
  5881  01C5                     ;serialIO.c: 106:     ANSELbits.ANS0 = 0;
  5882                           	bsf	status, 5	;RP0=1, select bank3
  5883  01C5  1683               	bsf	status, 6	;RP1=1, select bank3
  5884  01C6  1703               	bcf	(392)^0180h,0	;volatile
  5885  01C7  1008               	line	107
  5886                           	
  5887                           l1808:	
  5888  01C8                     ;serialIO.c: 107:     TRISAbits.TRISA0 = 0;
  5889                           	bsf	status, 5	;RP0=1, select bank1
  5890  01C8  1683               	bcf	status, 6	;RP1=0, select bank1
  5891  01C9  1303               	bcf	(133)^080h,0	;volatile
  5892  01CA  1005               	line	110
  5893                           	
  5894                           l1810:	
  5895  01CB                     ;serialIO.c: 110:     ANSELbits.ANS1 = 0;
  5896                           	bsf	status, 5	;RP0=1, select bank3
  5897  01CB  1683               	bsf	status, 6	;RP1=1, select bank3
  5898  01CC  1703               	bcf	(392)^0180h,1	;volatile
  5899  01CD  1088               	line	111
  5900                           	
  5901                           l1812:	
  5902  01CE                     ;serialIO.c: 111:     TRISAbits.TRISA1 = 1;
  5903                           	bsf	status, 5	;RP0=1, select bank1
  5904  01CE  1683               	bcf	status, 6	;RP1=0, select bank1
  5905  01CF  1303               	bsf	(133)^080h,1	;volatile
  5906  01D0  1485               	line	115
  5907                           	
  5908                           l1814:	
  5909  01D1                     ;serialIO.c: 115:     SERIALIO.CLK = 0;
  5910                           	bcf	status, 5	;RP0=0, select bank0
  5911  01D1  1283               	bcf	status, 6	;RP1=0, select bank0
  5912  01D2  1303               	bcf	(5),2	;volatile
  5913  01D3  1105               	line	116
  5914                           	
  5915                           l1816:	
  5916  01D4                     ;serialIO.c: 116:     SERIALIO.OUT = 0;
  5917                           	bcf	(5),0	;volatile
  5918  01D4  1005               	line	117
  5919                           	
  5920                           l1818:	
  5921  01D5                     ;serialIO.c: 117:     SERIALIO.SHLD = 1;
  5922                           	bsf	(5),3	;volatile
  5923  01D5  1585               	line	120
  5924                           	
  5925                           l329:	
  5926  01D6                     	return
  5927  01D6  0008               	opt stack 0
  5928                           GLOBAL	__end_of_initSerialIO
  5929                           	__end_of_initSerialIO:
  5930  01D7                     	signat	_initSerialIO,12409
  5931                           	global	_initLCD
  5932                           
  5933 ;; *************** function _initLCD *****************
  5934 ;; Defined at:
  5935 ;;		line 20 in file "lcd.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      void 
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0, pclath, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5949 ;;      Params:         0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0
  5951 ;;      Temps:          2       0       0       0       0
  5952 ;;      Totals:         2       0       0       0       0
  5953 ;;Total ram usage:        2 bytes
  5954 ;; Hardware stack levels used:    1
  5955 ;; Hardware stack levels required when called:    1
  5956 ;; This function calls:
  5957 ;;		_cmdLCD
  5958 ;; This function is called by:
  5959 ;;		_main
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5963                           	file	"lcd.c"
  5964                           	line	20
  5965                           global __ptext17
  5966                           __ptext17:	;psect for function _initLCD
  5967  0282                     psect	text17
  5968                           	file	"lcd.c"
  5969                           	line	20
  5970                           	global	__size_of_initLCD
  5971                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5972  003F                     	
  5973                           _initLCD:	
  5974  0282                     ;incstack = 0
  5975                           	opt	stack 6
  5976                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5977                           	line	22
  5978                           	
  5979                           l1758:	
  5980  0282                     ;lcd.c: 22:         LCD.B0 = 0;
  5981                           	bcf	status, 5	;RP0=0, select bank0
  5982  0282  1283               	bcf	status, 6	;RP1=0, select bank0
  5983  0283  1303               	bcf	(8),6	;volatile
  5984  0284  1308               	line	23
  5985                           ;lcd.c: 23:         LCD.B1 = 0;
  5986                           	bcf	(8),7	;volatile
  5987  0285  1388               	line	24
  5988                           ;lcd.c: 24:         LCD.RS = 0;
  5989                           	bcf	(8),4	;volatile
  5990  0286  1208               	line	25
  5991                           	
  5992                           l1760:	
  5993  0287                     ;lcd.c: 25:         LCD.BUS = 0x3;
  5994                           	movf	(8),w	;volatile
  5995  0287  0808               	andlw	not (((1<<4)-1)<<0)
  5996  0288  39F0               	iorlw	(03h & ((1<<4)-1))<<0
  5997  0289  3803               	movwf	(8)	;volatile
  5998  028A  0088               	line	26
  5999                           	
  6000                           l1762:	
  6001  028B                     ;lcd.c: 26:         LCD.EN = 1;
  6002                           	bsf	(8),5	;volatile
  6003  028B  1688               	line	27
  6004                           	
  6005                           l1764:	
  6006  028C                     ;lcd.c: 27:         TRISD = 0xC0;
  6007                           	movlw	low(0C0h)
  6008  028C  30C0               	bsf	status, 5	;RP0=1, select bank1
  6009  028D  1683               	bcf	status, 6	;RP1=0, select bank1
  6010  028E  1303               	movwf	(136)^080h	;volatile
  6011  028F  0088               	line	29
  6012                           	
  6013                           l1766:	
  6014  0290                     ;lcd.c: 29:         _delay((unsigned long)((100)*(4000000/4000.0)));
  6015                           	opt asmopt_push
  6016                           opt asmopt_off
  6017                           movlw	130
  6018  0290  3082               movwf	((??_initLCD+0)+0+1),f
  6019  0291  00F5               	movlw	221
  6020  0292  30DD               movwf	((??_initLCD+0)+0),f
  6021  0293  00F4               	u1307:
  6022  0294                     decfsz	((??_initLCD+0)+0),f
  6023  0294  0BF4               	goto	u1307
  6024  0295  2A94               	decfsz	((??_initLCD+0)+0+1),f
  6025  0296  0BF5               	goto	u1307
  6026  0297  2A94               	nop2
  6027  0298  2A99               opt asmopt_pop
  6028                           
  6029                           	line	31
  6030                           	
  6031                           l1768:	
  6032  0299                     ;lcd.c: 31:         cmdLCD(0x20);
  6033                           	movlw	low(020h)
  6034  0299  3020               	fcall	_cmdLCD
  6035  029A  120A  118A  22C1  120A  118A  	line	32
  6036                           	
  6037                           l1770:	
  6038  029F                     ;lcd.c: 32:         cmdLCD(0x28);
  6039                           	movlw	low(028h)
  6040  029F  3028               	fcall	_cmdLCD
  6041  02A0  120A  118A  22C1  120A  118A  	line	33
  6042                           	
  6043                           l1772:	
  6044  02A5                     ;lcd.c: 33:         cmdLCD(0x0C);
  6045                           	movlw	low(0Ch)
  6046  02A5  300C               	fcall	_cmdLCD
  6047  02A6  120A  118A  22C1  120A  118A  	line	34
  6048                           	
  6049                           l1774:	
  6050  02AB                     ;lcd.c: 34:         cmdLCD(0x01);
  6051                           	movlw	low(01h)
  6052  02AB  3001               	fcall	_cmdLCD
  6053  02AC  120A  118A  22C1  120A  118A  	line	35
  6054                           	
  6055                           l1776:	
  6056  02B1                     ;lcd.c: 35:         cmdLCD(0x02);
  6057                           	movlw	low(02h)
  6058  02B1  3002               	fcall	_cmdLCD
  6059  02B2  120A  118A  22C1  120A  118A  	line	37
  6060                           	
  6061                           l1778:	
  6062  02B7                     ;lcd.c: 37:         _delay((unsigned long)((100)*(4000000/4000.0)));
  6063                           	opt asmopt_push
  6064                           opt asmopt_off
  6065                           movlw	130
  6066  02B7  3082               movwf	((??_initLCD+0)+0+1),f
  6067  02B8  00F5               	movlw	221
  6068  02B9  30DD               movwf	((??_initLCD+0)+0),f
  6069  02BA  00F4               	u1317:
  6070  02BB                     decfsz	((??_initLCD+0)+0),f
  6071  02BB  0BF4               	goto	u1317
  6072  02BC  2ABB               	decfsz	((??_initLCD+0)+0+1),f
  6073  02BD  0BF5               	goto	u1317
  6074  02BE  2ABB               	nop2
  6075  02BF  2AC0               opt asmopt_pop
  6076                           
  6077                           	line	38
  6078                           	
  6079                           l85:	
  6080  02C0                     	return
  6081  02C0  0008               	opt stack 0
  6082                           GLOBAL	__end_of_initLCD
  6083                           	__end_of_initLCD:
  6084  02C1                     	signat	_initLCD,89
  6085                           	global	_cmdLCD
  6086                           
  6087 ;; *************** function _cmdLCD *****************
  6088 ;; Defined at:
  6089 ;;		line 40 in file "lcd.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  cmd             1    wreg     unsigned char 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  cmd             1    2[COMMON] unsigned char 
  6094 ;;  nibble          1    3[COMMON] volatile struct .
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         0       0       0       0       0
  6105 ;;      Locals:         2       0       0       0       0
  6106 ;;      Temps:          2       0       0       0       0
  6107 ;;      Totals:         4       0       0       0       0
  6108 ;;Total ram usage:        4 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_initLCD
  6114 ;;		_gotoxy
  6115 ;;		_clearLCD
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6119                           	line	40
  6120                           global __ptext18
  6121                           __ptext18:	;psect for function _cmdLCD
  6122  02C1                     psect	text18
  6123                           	file	"lcd.c"
  6124                           	line	40
  6125                           	global	__size_of_cmdLCD
  6126                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  6127  005F                     	
  6128                           _cmdLCD:	
  6129  02C1                     ;incstack = 0
  6130                           	opt	stack 5
  6131                           ; Regs used in _cmdLCD: [wreg+status,2+status,0]
  6132                           ;cmdLCD@cmd stored from wreg
  6133                           	movwf	(cmdLCD@cmd)
  6134  02C1  00F2               	line	44
  6135                           	
  6136                           l1576:	
  6137  02C2                     ;lcd.c: 40: void cmdLCD( unsigned char cmd );lcd.c: 41: {;lcd.c: 42:         volatile RE
                                 Gnibble_t nibble;;lcd.c: 44:         nibble.HILO = cmd;
  6138                           	movf	(cmdLCD@cmd),w
  6139  02C2  0872               	movwf	(??_cmdLCD+0)+0
  6140  02C3  00F0               	movf	(??_cmdLCD+0)+0,w
  6141  02C4  0870               	movwf	(cmdLCD@nibble)	;volatile
  6142  02C5  00F3               	line	45
  6143                           	
  6144                           l1578:	
  6145  02C6                     ;lcd.c: 45:         LCD.RS = 0;
  6146                           	bcf	status, 5	;RP0=0, select bank0
  6147  02C6  1283               	bcf	status, 6	;RP1=0, select bank0
  6148  02C7  1303               	bcf	(8),4	;volatile
  6149  02C8  1208               	line	46
  6150                           	
  6151                           l1580:	
  6152  02C9                     ;lcd.c: 46:         LCD.BUS = nibble.HI ;
  6153                           	swapf	(cmdLCD@nibble),w	;volatile
  6154  02C9  0E73               	andlw	(1<<4)-1
  6155  02CA  390F               	movwf	(??_cmdLCD+0)+0
  6156  02CB  00F0               	movf	(8),w	;volatile
  6157  02CC  0808               	xorwf	(??_cmdLCD+0)+0,w
  6158  02CD  0670               	andlw	not ((1<<4)-1)
  6159  02CE  39F0               	xorwf	(??_cmdLCD+0)+0,w
  6160  02CF  0670               	movwf	(8)	;volatile
  6161  02D0  0088               	line	47
  6162                           	
  6163                           l1582:	
  6164  02D1                     ;lcd.c: 47:          LCD.EN = 0;
  6165                           	bcf	(8),5	;volatile
  6166  02D1  1288               	line	48
  6167                           	
  6168                           l1584:	
  6169  02D2                     ;lcd.c: 48:         if( cmd == 0x01 || cmd == 0x02 )
  6170                           		decf	((cmdLCD@cmd)),w
  6171  02D2  0372               	btfsc	status,2
  6172  02D3  1903               	goto	u591
  6173  02D4  2AD6               	goto	u590
  6174  02D5  2AD7               u591:
  6175  02D6                     	goto	l1588
  6176  02D6  2ADE               u590:
  6177  02D7                     	
  6178                           l1586:	
  6179  02D7                     		movlw	2
  6180  02D7  3002               	xorwf	((cmdLCD@cmd)),w
  6181  02D8  0672               	btfss	status,2
  6182  02D9  1D03               	goto	u601
  6183  02DA  2ADC               	goto	u600
  6184  02DB  2ADD               u601:
  6185  02DC                     	goto	l1590
  6186  02DC  2AE8               u600:
  6187  02DD                     	goto	l1588
  6188  02DD  2ADE               	
  6189                           l90:	
  6190  02DE                     	line	49
  6191                           	
  6192                           l1588:	
  6193  02DE                     ;lcd.c: 49:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6194                           	opt asmopt_push
  6195                           opt asmopt_off
  6196                           movlw	3
  6197  02DE  3003               movwf	((??_cmdLCD+0)+0+1),f
  6198  02DF  00F1               	movlw	151
  6199  02E0  3097               movwf	((??_cmdLCD+0)+0),f
  6200  02E1  00F0               	u1327:
  6201  02E2                     decfsz	((??_cmdLCD+0)+0),f
  6202  02E2  0BF0               	goto	u1327
  6203  02E3  2AE2               	decfsz	((??_cmdLCD+0)+0+1),f
  6204  02E4  0BF1               	goto	u1327
  6205  02E5  2AE2               	nop2
  6206  02E6  2AE7               opt asmopt_pop
  6207                           
  6208                           	goto	l1592
  6209  02E7  2AED               	line	50
  6210                           ;lcd.c: 50:         else
  6211                           	
  6212                           l88:	
  6213  02E8                     	line	51
  6214                           	
  6215                           l1590:	
  6216  02E8                     ;lcd.c: 51:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  6217                           	opt asmopt_push
  6218                           opt asmopt_off
  6219                           	movlw	13
  6220  02E8  300D               movwf	((??_cmdLCD+0)+0),f
  6221  02E9  00F0               	u1337:
  6222  02EA                     decfsz	(??_cmdLCD+0)+0,f
  6223  02EA  0BF0               	goto	u1337
  6224  02EB  2AEA               opt asmopt_pop
  6225                           
  6226                           	goto	l1592
  6227  02EC  2AED               	
  6228                           l91:	
  6229  02ED                     	line	52
  6230                           	
  6231                           l1592:	
  6232  02ED                     ;lcd.c: 52:         LCD.EN = 1;
  6233                           	bcf	status, 5	;RP0=0, select bank0
  6234  02ED  1283               	bcf	status, 6	;RP1=0, select bank0
  6235  02EE  1303               	bsf	(8),5	;volatile
  6236  02EF  1688               	line	54
  6237                           	
  6238                           l1594:	
  6239  02F0                     ;lcd.c: 54:         if( cmd != (0x20) )
  6240                           		movlw	32
  6241  02F0  3020               	xorwf	((cmdLCD@cmd)),w
  6242  02F1  0672               	btfsc	status,2
  6243  02F2  1903               	goto	u611
  6244  02F3  2AF5               	goto	u610
  6245  02F4  2AF6               u611:
  6246  02F5                     	goto	l97
  6247  02F5  2B1F               u610:
  6248  02F6                     	line	56
  6249                           	
  6250                           l1596:	
  6251  02F6                     ;lcd.c: 55:     {;lcd.c: 56:        LCD.RS = 0;
  6252                           	bcf	(8),4	;volatile
  6253  02F6  1208               	line	57
  6254                           	
  6255                           l1598:	
  6256  02F7                     ;lcd.c: 57:        LCD.BUS = nibble.LO;
  6257                           	movf	(cmdLCD@nibble),w	;volatile
  6258  02F7  0873               	andlw	(1<<4)-1
  6259  02F8  390F               	movwf	(??_cmdLCD+0)+0
  6260  02F9  00F0               	movf	(8),w	;volatile
  6261  02FA  0808               	xorwf	(??_cmdLCD+0)+0,w
  6262  02FB  0670               	andlw	not ((1<<4)-1)
  6263  02FC  39F0               	xorwf	(??_cmdLCD+0)+0,w
  6264  02FD  0670               	movwf	(8)	;volatile
  6265  02FE  0088               	line	58
  6266                           	
  6267                           l1600:	
  6268  02FF                     ;lcd.c: 58:        LCD.EN = 0;
  6269                           	bcf	(8),5	;volatile
  6270  02FF  1288               	line	59
  6271                           ;lcd.c: 59:        if( cmd == 0x01 || cmd == 0x02 )
  6272                           		decf	((cmdLCD@cmd)),w
  6273  0300  0372               	btfsc	status,2
  6274  0301  1903               	goto	u621
  6275  0302  2B04               	goto	u620
  6276  0303  2B05               u621:
  6277  0304                     	goto	l1604
  6278  0304  2B0C               u620:
  6279  0305                     	
  6280                           l1602:	
  6281  0305                     		movlw	2
  6282  0305  3002               	xorwf	((cmdLCD@cmd)),w
  6283  0306  0672               	btfss	status,2
  6284  0307  1D03               	goto	u631
  6285  0308  2B0A               	goto	u630
  6286  0309  2B0B               u631:
  6287  030A                     	goto	l1606
  6288  030A  2B16               u630:
  6289  030B                     	goto	l1604
  6290  030B  2B0C               	
  6291                           l95:	
  6292  030C                     	line	60
  6293                           	
  6294                           l1604:	
  6295  030C                     ;lcd.c: 60:             _delay((unsigned long)((2)*(4000000/4000.0)));
  6296                           	opt asmopt_push
  6297                           opt asmopt_off
  6298                           movlw	3
  6299  030C  3003               movwf	((??_cmdLCD+0)+0+1),f
  6300  030D  00F1               	movlw	151
  6301  030E  3097               movwf	((??_cmdLCD+0)+0),f
  6302  030F  00F0               	u1347:
  6303  0310                     decfsz	((??_cmdLCD+0)+0),f
  6304  0310  0BF0               	goto	u1347
  6305  0311  2B10               	decfsz	((??_cmdLCD+0)+0+1),f
  6306  0312  0BF1               	goto	u1347
  6307  0313  2B10               	nop2
  6308  0314  2B15               opt asmopt_pop
  6309                           
  6310                           	goto	l1608
  6311  0315  2B1B               	line	61
  6312                           ;lcd.c: 61:        else
  6313                           	
  6314                           l93:	
  6315  0316                     	line	62
  6316                           	
  6317                           l1606:	
  6318  0316                     ;lcd.c: 62:             _delay((unsigned long)((40)*(4000000/4000000.0)));
  6319                           	opt asmopt_push
  6320                           opt asmopt_off
  6321                           	movlw	13
  6322  0316  300D               movwf	((??_cmdLCD+0)+0),f
  6323  0317  00F0               	u1357:
  6324  0318                     decfsz	(??_cmdLCD+0)+0,f
  6325  0318  0BF0               	goto	u1357
  6326  0319  2B18               opt asmopt_pop
  6327                           
  6328                           	goto	l1608
  6329  031A  2B1B               	
  6330                           l96:	
  6331  031B                     	line	63
  6332                           	
  6333                           l1608:	
  6334  031B                     ;lcd.c: 63:        LCD.EN = 1;
  6335                           	bcf	status, 5	;RP0=0, select bank0
  6336  031B  1283               	bcf	status, 6	;RP1=0, select bank0
  6337  031C  1303               	bsf	(8),5	;volatile
  6338  031D  1688               	goto	l97
  6339  031E  2B1F               	line	64
  6340                           ;lcd.c: 64:     }
  6341                           	
  6342                           l92:	
  6343  031F                     	line	65
  6344                           	
  6345                           l97:	
  6346  031F                     	return
  6347  031F  0008               	opt stack 0
  6348                           GLOBAL	__end_of_cmdLCD
  6349                           	__end_of_cmdLCD:
  6350  0320                     	signat	_cmdLCD,4217
  6351                           	global	_initKeyboard
  6352                           
  6353 ;; *************** function _initKeyboard *****************
  6354 ;; Defined at:
  6355 ;;		line 103 in file "keyboard.c"
  6356 ;; Parameters:    Size  Location     Type
  6357 ;;		None
  6358 ;; Auto vars:     Size  Location     Type
  6359 ;;		None
  6360 ;; Return value:  Size  Location     Type
  6361 ;;                  1    wreg      void 
  6362 ;; Registers used:
  6363 ;;		wreg, status,2
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6369 ;;      Params:         0       0       0       0       0
  6370 ;;      Locals:         0       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0
  6372 ;;      Totals:         0       0       0       0       0
  6373 ;;Total ram usage:        0 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_main
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6382                           	file	"keyboard.c"
  6383                           	line	103
  6384                           global __ptext19
  6385                           __ptext19:	;psect for function _initKeyboard
  6386  00CD                     psect	text19
  6387                           	file	"keyboard.c"
  6388                           	line	103
  6389                           	global	__size_of_initKeyboard
  6390                           	__size_of_initKeyboard	equ	__end_of_initKeyboard-_initKeyboard
  6391  0013                     	
  6392                           _initKeyboard:	
  6393  00CD                     ;incstack = 0
  6394                           	opt	stack 7
  6395                           ; Regs used in _initKeyboard: [wreg+status,2]
  6396                           	line	105
  6397                           	
  6398                           l1744:	
  6399  00CD                     ;keyboard.c: 105:     PORTB = 0xFF;
  6400                           	movlw	low(0FFh)
  6401  00CD  30FF               	bcf	status, 5	;RP0=0, select bank0
  6402  00CE  1283               	bcf	status, 6	;RP1=0, select bank0
  6403  00CF  1303               	movwf	(6)	;volatile
  6404  00D0  0086               	line	106
  6405                           	
  6406                           l1746:	
  6407  00D1                     ;keyboard.c: 106:     ANSELH = 0;
  6408                           	bsf	status, 5	;RP0=1, select bank3
  6409  00D1  1683               	bsf	status, 6	;RP1=1, select bank3
  6410  00D2  1703               	clrf	(393)^0180h	;volatile
  6411  00D3  0189               	line	107
  6412                           	
  6413                           l1748:	
  6414  00D4                     ;keyboard.c: 107:     TRISB = 0x0F;
  6415                           	movlw	low(0Fh)
  6416  00D4  300F               	bsf	status, 5	;RP0=1, select bank1
  6417  00D5  1683               	bcf	status, 6	;RP1=0, select bank1
  6418  00D6  1303               	movwf	(134)^080h	;volatile
  6419  00D7  0086               	line	108
  6420                           	
  6421                           l1750:	
  6422  00D8                     ;keyboard.c: 108:     WPUB = 0xFF;
  6423                           	movlw	low(0FFh)
  6424  00D8  30FF               	movwf	(149)^080h	;volatile
  6425  00D9  0095               	line	109
  6426                           	
  6427                           l1752:	
  6428  00DA                     ;keyboard.c: 109:     OPTION_REGbits.nRBPU = 0;
  6429                           	bcf	(129)^080h,7	;volatile
  6430  00DA  1381               	line	111
  6431                           	
  6432                           l1754:	
  6433  00DB                     ;keyboard.c: 111:     prevKey = 0;
  6434                           	bcf	status, 5	;RP0=0, select bank0
  6435  00DB  1283               	bcf	status, 6	;RP1=0, select bank0
  6436  00DC  1303               	clrf	(_prevKey)
  6437  00DD  01A4               	line	112
  6438                           	
  6439                           l1756:	
  6440  00DE                     ;keyboard.c: 112:     currKey = 0;
  6441                           	clrf	(_currKey)
  6442  00DE  01A3               	line	113
  6443                           	
  6444                           l68:	
  6445  00DF                     	return
  6446  00DF  0008               	opt stack 0
  6447                           GLOBAL	__end_of_initKeyboard
  6448                           	__end_of_initKeyboard:
  6449  00E0                     	signat	_initKeyboard,89
  6450                           	global	_getFIFO
  6451                           
  6452 ;; *************** function _getFIFO *****************
  6453 ;; Defined at:
  6454 ;;		line 25 in file "fifo.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  aux             1    1[COMMON] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      unsigned char 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6468 ;;      Params:         0       0       0       0       0
  6469 ;;      Locals:         1       0       0       0       0
  6470 ;;      Temps:          1       0       0       0       0
  6471 ;;      Totals:         2       0       0       0       0
  6472 ;;Total ram usage:        2 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_main
  6478 ;;		_checktecla
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6482                           	file	"fifo.c"
  6483                           	line	25
  6484                           global __ptext20
  6485                           __ptext20:	;psect for function _getFIFO
  6486  010B                     psect	text20
  6487                           	file	"fifo.c"
  6488                           	line	25
  6489                           	global	__size_of_getFIFO
  6490                           	__size_of_getFIFO	equ	__end_of_getFIFO-_getFIFO
  6491  0019                     	
  6492                           _getFIFO:	
  6493  010B                     ;incstack = 0
  6494                           	opt	stack 7
  6495                           ; Regs used in _getFIFO: [wreg-fsr0h+status,2+status,0]
  6496                           	line	27
  6497                           	
  6498                           l1682:	
  6499  010B                     ;fifo.c: 27:     unsigned char aux = 0;
  6500                           	clrf	(getFIFO@aux)
  6501  010B  01F1               	line	29
  6502                           	
  6503                           l1684:	
  6504  010C                     ;fifo.c: 29:     if( fifoTail != fifoHead )
  6505                           	bcf	status, 5	;RP0=0, select bank0
  6506  010C  1283               	bcf	status, 6	;RP1=0, select bank0
  6507  010D  1303               	movf	(_fifoTail),w
  6508  010E  0825               	xorwf	(_fifoHead),w
  6509  010F  067D               	skipnz
  6510  0110  1903               	goto	u711
  6511  0111  2913               	goto	u710
  6512  0112  2914               u711:
  6513  0113                     	goto	l1690
  6514  0113  2921               u710:
  6515  0114                     	line	31
  6516                           	
  6517                           l1686:	
  6518  0114                     ;fifo.c: 30:     {;fifo.c: 31:         aux = fifo[ fifoTail ];
  6519                           	movf	(_fifoTail),w
  6520  0114  0825               	addlw	low(_fifo|((0x0)<<8))&0ffh
  6521  0115  3E26               	movwf	fsr0
  6522  0116  0084               	bcf	status, 7	;select IRP bank0
  6523  0117  1383               	movf	indf,w
  6524  0118  0800               	movwf	(??_getFIFO+0)+0
  6525  0119  00F0               	movf	(??_getFIFO+0)+0,w
  6526  011A  0870               	movwf	(getFIFO@aux)
  6527  011B  00F1               	line	32
  6528                           	
  6529                           l1688:	
  6530  011C                     ;fifo.c: 32:         ++fifoTail;
  6531                           	movlw	low(01h)
  6532  011C  3001               	movwf	(??_getFIFO+0)+0
  6533  011D  00F0               	movf	(??_getFIFO+0)+0,w
  6534  011E  0870               	addwf	(_fifoTail),f
  6535  011F  07A5               	goto	l1690
  6536  0120  2921               	line	33
  6537                           ;fifo.c: 33:     }
  6538                           	
  6539                           l12:	
  6540  0121                     	line	34
  6541                           	
  6542                           l1690:	
  6543  0121                     ;fifo.c: 34:     return( aux );
  6544                           	movf	(getFIFO@aux),w
  6545  0121  0871               	goto	l13
  6546  0122  2923               	
  6547                           l1692:	
  6548  0123                     	line	35
  6549                           	
  6550                           l13:	
  6551  0123                     	return
  6552  0123  0008               	opt stack 0
  6553                           GLOBAL	__end_of_getFIFO
  6554                           	__end_of_getFIFO:
  6555  0124                     	signat	_getFIFO,89
  6556                           	global	_displayFIFO
  6557                           
  6558 ;; *************** function _displayFIFO *****************
  6559 ;; Defined at:
  6560 ;;		line 42 in file "fifo.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;		None
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;                  1    wreg      PTR void 
  6567 ;; Registers used:
  6568 ;;		wreg
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6574 ;;      Params:         0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0
  6576 ;;      Temps:          0       0       0       0       0
  6577 ;;      Totals:         0       0       0       0       0
  6578 ;;Total ram usage:        0 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_main
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6587                           	line	42
  6588                           global __ptext21
  6589                           __ptext21:	;psect for function _displayFIFO
  6590  0072                     psect	text21
  6591                           	file	"fifo.c"
  6592                           	line	42
  6593                           	global	__size_of_displayFIFO
  6594                           	__size_of_displayFIFO	equ	__end_of_displayFIFO-_displayFIFO
  6595  0003                     	
  6596                           _displayFIFO:	
  6597  0072                     ;incstack = 0
  6598                           	opt	stack 7
  6599                           ; Regs used in _displayFIFO: [wreg]
  6600                           	line	44
  6601                           	
  6602                           l1694:	
  6603  0072                     ;fifo.c: 44:     return( fifo );
  6604                           	movlw	(low(_fifo|((0x0)<<8)))&0ffh
  6605  0072  3026               	goto	l19
  6606  0073  2874               	
  6607                           l1696:	
  6608  0074                     	line	45
  6609                           	
  6610                           l19:	
  6611  0074                     	return
  6612  0074  0008               	opt stack 0
  6613                           GLOBAL	__end_of_displayFIFO
  6614                           	__end_of_displayFIFO:
  6615  0075                     	signat	_displayFIFO,89
  6616                           	global	_currentKey
  6617                           
  6618 ;; *************** function _currentKey *****************
  6619 ;; Defined at:
  6620 ;;		line 65 in file "keyboard.c"
  6621 ;; Parameters:    Size  Location     Type
  6622 ;;		None
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;		None
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  1    wreg      unsigned char 
  6627 ;; Registers used:
  6628 ;;		wreg
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6634 ;;      Params:         0       0       0       0       0
  6635 ;;      Locals:         0       0       0       0       0
  6636 ;;      Temps:          0       0       0       0       0
  6637 ;;      Totals:         0       0       0       0       0
  6638 ;;Total ram usage:        0 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		_main
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6647                           	file	"keyboard.c"
  6648                           	line	65
  6649                           global __ptext22
  6650                           __ptext22:	;psect for function _currentKey
  6651  0079                     psect	text22
  6652                           	file	"keyboard.c"
  6653                           	line	65
  6654                           	global	__size_of_currentKey
  6655                           	__size_of_currentKey	equ	__end_of_currentKey-_currentKey
  6656  0005                     	
  6657                           _currentKey:	
  6658  0079                     ;incstack = 0
  6659                           	opt	stack 7
  6660                           ; Regs used in _currentKey: [wreg]
  6661                           	line	67
  6662                           	
  6663                           l1710:	
  6664  0079                     ;keyboard.c: 67:     return( currKey );
  6665                           	bcf	status, 5	;RP0=0, select bank0
  6666  0079  1283               	bcf	status, 6	;RP1=0, select bank0
  6667  007A  1303               	movf	(_currKey),w
  6668  007B  0823               	goto	l57
  6669  007C  287D               	
  6670                           l1712:	
  6671  007D                     	line	68
  6672                           	
  6673                           l57:	
  6674  007D                     	return
  6675  007D  0008               	opt stack 0
  6676                           GLOBAL	__end_of_currentKey
  6677                           	__end_of_currentKey:
  6678  007E                     	signat	_currentKey,89
  6679                           global	___latbits
  6680                           ___latbits	equ	2
  6681  0002                     	global	btemp
  6682                           	btemp set 07Eh
  6683  007E                     
  6684                           	DABS	1,126,2	;btemp
  6685                           	global	wtemp0
  6686                           	wtemp0 set btemp+0
  6687  007E                     	end


Data Sizes:
    Strings     42
    Constant    22
    Data        17
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     16      55
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@atuador(BANK0[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@sensor(BANK0[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 

    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), checktecla@linha2(BANK0[17]), 
		 -> fifo(BANK0[16]), 

    sp__displayFIFO	PTR void  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_writeLCD
    _serialIOscan->_serialIObyteShift
    _screen_menu->_writeLCD
    _screen_car->_writeLCD
    _writeLCD->_gotoxy
    _gotoxy->_cmdLCD
    _clearLCD->_cmdLCD
    _resetFIFO->_delFIFO
    _initLCD->_cmdLCD

Critical Paths under _main in BANK0

    _main->_screen_car

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    5942
                                              3 BANK0     13    13      0
                           _clearLCD
                         _currentKey
                            _delFIFO
                        _displayFIFO
                            _getFIFO
                       _initKeyboard
                            _initLCD
                       _initSerialIO
                       _keyboardScan
                        _previousKey
                            _putFIFO
                          _resetFIFO
                        _restartFIFO
                         _screen_car
                        _screen_menu
                       _serialIOscan
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         5     5      0     205
                                              4 COMMON     5     5      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _screen_menu                                          0     0      0    1213
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _screen_car                                           3     3      0    1390
                                              0 BANK0      3     3      0
                           _clearLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             5     2      3    1213
                                              8 COMMON     5     2      3
                        _displayFIFO (ARG)
                             _gotoxy
                             _putLCD
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               4     4      0      67
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _gotoxy                                               4     3      1     297
                                              4 COMMON     4     3      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clearLCD                                             0     0      0     177
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _restartFIFO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _resetFIFO                                            0     0      0      46
                            _delFIFO
 ---------------------------------------------------------------------------------
 (2) _delFIFO                                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _putFIFO                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _previousKey                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _keyboardScan                                        11    11      0     210
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     251
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     177
                                              4 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               4     4      0     177
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _initKeyboard                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getFIFO                                              2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayFIFO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _currentKey                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearLCD
     _cmdLCD
   _currentKey
   _delFIFO
   _displayFIFO
   _getFIFO
   _initKeyboard
   _initLCD
     _cmdLCD
   _initSerialIO
   _keyboardScan
   _previousKey
   _putFIFO
   _resetFIFO
     _delFIFO
   _restartFIFO
   _screen_car
     _clearLCD
       _cmdLCD
     _writeLCD
       _displayFIFO (ARG)
       _gotoxy (ARG)
         _cmdLCD
       _putLCD (ARG)
   _screen_menu
     _writeLCD
       _displayFIFO (ARG)
       _gotoxy (ARG)
         _cmdLCD
       _putLCD (ARG)
   _serialIOscan
     _serialIObyteShift
     _serialIOload
   _writeLCD
     _displayFIFO (ARG)
     _gotoxy (ARG)
       _cmdLCD
     _putLCD (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      37       5       68.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      45      12        0.0%
ABS                  0      0      45       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Nov 25 12:59:29 2019

              ?_displayFIFO 0070                           l9 00BB                           pc 0002  
                        l12 0121                          l13 0123                          l22 0136  
                        l30 00A1                          l23 0126                          l25 0141  
                        l33 0078                          l26 0142                          l19 0074  
                        l27 0144                          l60 032A                          l61 0393  
                        l62 0347                          l54 0082                          l63 0388  
                        l64 037D                          l57 007D                          l65 039E  
                        l90 02DE                          l91 02ED                          l68 00DF  
                        l92 031F                          l93 0316                          l85 02C0  
                        l95 030C                          l96 031B                          l88 02E8  
                        l97 031F                          fsr 0004                         l100 020A  
                       l103 010A                         l200 044B                         l201 049F  
                       l106 0191                         l210 0482                         l202 0456  
                       l107 017C                         l203 049E                         l211 049A  
                       l108 01A2                         l220 04C8                         l212 048D  
                       l204 0461                         l109 01A2                         l133 0244  
                       l221 04C9                         l205 049D                         l213 0499  
                       l118 008E                         l230 0518                         l222 04CF  
                       l214 0498                         l206 046C                         l311 0087  
                       l231 052D                         l223 04D8                         l215 04A9  
                       l207 049C                         l136 00AD                         l320 016F  
                       l240 059E                         l232 0532                         l224 04D9  
                       l216 04AF                         l208 0477                         l241 05B4  
                       l233 0548                         l225 04DF                         l217 04B8  
                       l209 049B                         l314 0165                         l250 05F4  
                       l242 05B9                         l234 054D                         l226 04E4  
                       l218 04B9                         l315 014C                         l323 0273  
                       l251 05FA                         l243 05CF                         l235 0563  
                       l227 04F9                         l219 04BF                         l316 0157  
                       l324 0253                         l260 07CA                         l180 068A  
                       l252 0603                         l244 05D4                         l236 0568  
                       l228 04FE                         l317 0158                         l325 027C  
                       l261 06C3                         l253 0604                         l245 05DA  
                       l237 057E                         l229 0513                         l181 03D3  
                       l318 0161                         l326 0281                         l270 0717  
                       l262 06D4                         l254 060A                         l246 05E3  
                       l238 0583                         l190 0414                         l182 03E8  
                       l319 016A                         l255 07DB                         l271 072D  
                       l263 06DE                         l247 05E4                         l239 0599  
                       l183 04A8                         l191 04A4                         l256 0790  
                       l280 073C                         l272 072E                         l264 06DF  
                       l248 05EA                         l192 041F                         l184 03F3  
                       l329 01D6                         l281 0754                         l273 072F  
                       l265 06F0                         l257 06A9                         l249 05F3  
                       l185 04A7                         l193 04A3                         l177 03C7  
                       l290 0750                         l282 073D                         l274 0730  
                       l266 06FA                         l258 06B8                         l178 0610  
                       l194 042A                         l186 03FE                         l291 0783  
                       l283 077D                         l275 0731                         l267 06FB  
                       l259 06C2                         l187 04A6                         l195 04A2  
                       l179 03D2                         l292 07E1                         l284 0741  
                       l276 0732                         l268 070C                         l196 0435  
                       l188 0409                         l293 07E2                         l285 0744  
                       l277 0733                         l269 0716                         l189 04A5  
                       l197 04A1                         l294 07E2                         l286 0746  
                       l278 0734                         l198 0440                         l287 0749  
                       l279 0735                         l199 04A0                         l288 074B  
                       l289 074E                         _LCD 0008                         u600 02DD  
                       u601 02DC                         u610 02F6                         u611 02F5  
                       u620 0305                         u700 016A                         u621 0304  
                       u701 0169                         u710 0114                         u630 030B  
                       u711 0113                         u631 030A                         u720 0328  
                       u800 027B                         u721 0327                         u801 027A  
                       u650 013B                         u651 013A                         u740 0345  
                       u660 0140                         u900 03F9                         u741 0344  
                       u661 013F                         u645 00FA                         u901 03F8  
                       u590 02D7                         u734 0330                         u670 01A1  
                       u910 0404                         u591 02D6                         u735 032E  
                       u671 01A0                         u911 0403                         u760 0366  
                       u680 0155                         u920 040F                         u761 0365  
                       u681 0154                         u921 040E                         u754 0358  
                       u690 015C                         u930 041A                         u755 0355  
                       u691 015B                         u931 0419                         u780 0387  
                       u940 0425                         u781 0386                         u941 0424  
                       u790 0392                         u950 0430                         u791 0391  
                       u775 0369                         u951 042F                         u960 043B  
                       u880 03E3                         u961 043A                         u881 03E2  
                       u970 0446                         u890 03EE                         u971 0445  
                       u891 03ED                         u980 0451                         u981 0450  
                       u990 045C                         u991 045B                         fsr0 0004  
                       indf 0000                __CFG_LVP$OFF 0000                        l2000 05D5  
                      l2010 05FE                        l2002 05DE                        l2012 0605  
                      l2004 05E5                        l2020 068A                        l2030 06B1  
                      l2022 0694                        l2014 060A                        l2006 05EE  
                      l2040 06D4                        l2032 06B8                        l2024 069E  
                      l2016 060F                        l2008 05F5                        l2050 06FB  
                      l2042 06DF                        l2034 06C3                        l2026 06A9  
                      l2018 0610                        l2060 071C                        l2052 0701  
                      l2044 06E5                        l2036 06C9                        l2028 06AD  
                      l2070 073D                        l2062 0722                        l2054 0705  
                      l2046 06E9                        l2038 06CD                        l1600 02FF  
                      l2072 0744                        l2080 0754                        l2064 0723  
                      l2056 070C                        l2048 06F0                        l2240 061A  
                      l1602 0305                        l1610 01D8                        l2074 0749  
                      l2082 077D                        l2066 0728                        l2058 0717  
                      l2090 0790                        l2242 0682                        l1604 030C  
                      l1700 009D                        l1620 01F1                        l1612 01DC  
                      l2084 0783                        l2244 0763                        l2076 074E  
                      l2068 0735                        l2092 07CA                        l1710 0079  
                      l1606 0316                        l1702 009E                        l1630 00F4  
                      l1622 01F4                        l1614 01DF                        l2246 0798  
                      l2086 0788                        l2078 0753                        l2094 07DB  
                      l1712 007D                        l1608 031B                        l1800 01BC  
                      l1720 032A                        l1640 013B                        l1632 0125  
                      l1704 0075                        l1624 01FD                        l1616 01E7  
                      l2088 078F                        l1810 01CB                        l1802 01BF  
                      l1730 0366                        l1722 033E                        l1714 0320  
                      l1706 007E                        l1642 0142                        l1634 0126  
                      l1626 01FE                        l1618 01E8                        l1650 018C  
                      l1580 02C9                        l1812 01CE                        l1804 01C2  
                      l1732 037D                        l1724 033F                        l1740 0393  
                      l1716 0322                        l1708 0082                        l1644 0144  
                      l1636 0128                        l1628 0207                        l1652 0191  
                      l1660 014A                        l1820 0245                        l1900 0414  
                      l1750 00D8                        l1590 02E8                        l1582 02D1  
                      l1814 01D1                        l1806 01C5                        l1742 039E  
                      l1734 0381                        l1726 0346                        l1718 0329  
                      l1638 0130                        l1654 0088                        l1646 0171  
                      l1670 0162                        l1662 014F                        l1830 0273  
                      l1822 024C                        l1910 0430                        l1902 041A  
                      l1752 00DA                        l1744 00CD                        l1592 02ED  
                      l1584 02D2                        l1576 02C2                        l1760 0287  
                      l1816 01D4                        l1808 01C8                        l1736 0388  
                      l1728 0347                        l1680 00B7                        l1648 017C  
                      l1664 0155                        l1672 0165                        l1656 0083  
                      l1832 027C                        l1824 0251                        l1920 044B  
                      l1912 0435                        l1904 041F                        l1690 0121  
                      l1682 010B                        l1754 00DB                        l1746 00D1  
                      l1594 02F0                        l1586 02D7                        l1578 02C6  
                      l1770 029F                        l1762 028B                        l1818 01D5  
                      l1738 038C                        l1674 016D                        l1666 015C  
                      l1658 0146                        l1826 0253                        l1930 0467  
                      l1922 0451                        l1914 043B                        l1906 0425  
                      l1692 0123                        l1684 010C                        l1756 00DE  
                      l1748 00D4                        l1596 02F6                        l1588 02DE  
                      l1772 02A5                        l1764 028C                        l1780 020B  
                      l1676 016F                        l1668 0161                        l1828 026E  
                      l1940 0482                        l1932 046C                        l1924 0456  
                      l1916 0440                        l1908 042A                        l1694 0072  
                      l1686 0114                        l1598 02F7                        l1774 02AB  
                      l1766 0290                        l1758 0282                        l1790 01A4  
                      l1678 00AF                        l1782 0216                        l1950 04B3  
                      l1942 0488                        l1934 0472                        l1926 045C  
                      l1918 0446                        l1870 03B5                        l1862 039F  
                      l1696 0074                        l1688 011C                        l1776 02B1  
                      l1768 0299                        l1792 01B2                        l1784 0225  
                      l1960 04DA                        l1952 04BA                        l1944 048D  
                      l1936 0477                        l1928 0461                        l1880 03DD  
                      l1872 03C3                        l1864 03A6                        l1778 02B7  
                      l1794 01B3                        l1698 0097                        l1786 023F  
                      l1970 0513                        l1962 04DF                        l1954 04C3  
                      l1946 0493                        l1938 047D                        l1890 03F9  
                      l1882 03E3                        l1874 03C7                        l1866 03AB  
                      l1796 01B6                        l1788 00A2                        l1980 054D  
                      l1972 0518                        l1964 04E4                        l1956 04CA  
                      l1948 04AA                        l1892 03FE                        l1884 03E8  
                      l1876 03CC                        l1868 03B0                        l1798 01B9  
                      l1990 0599                        l1982 0563                        l1974 052D  
                      l1966 04F9                        l1958 04D3                        l1894 0404  
                      l1886 03EE                        l1878 03D3                        l1992 059E  
                      l1984 0568                        l1976 0532                        l1968 04FE  
                      l1896 0409                        l1888 03F3                        l1994 05B4  
                      l1986 057E                        l1978 0548                        l1898 040F  
                      l1996 05B9                        l1988 0583                        l1998 05CF  
               main@atuador 0051                        STR_1 003A                        STR_2 0047  
                      STR_3 0029                        u1000 0467                        u1001 0466  
                      u1010 0472                        u1011 0471                        u1100 05FE  
                      u1020 047D                        u1101 05FD                        u1021 047C  
                      u1110 0694                        u1030 0488                        u1111 0693  
                      u1031 0487                        u1120 069E                        u1040 0493  
                      u1121 069D                        u1041 0492                        u1130 06B1  
                      u1050 04B3                        u1131 06B0                        u1051 04B2  
                      u1140 06CD                        u1060 04C3                        u1141 06CC  
                      u1061 04C2                        u1150 06E9                        u1070 04D3  
                      u1151 06E8                        u1207 053A                        u1071 04D2  
                      u1160 0705                        u1080 05DE                        u1161 0704  
                      u1081 05DD                        u1217 0555                        u1090 05EE  
                      u1307 0294                        u1091 05ED                        u1227 0570  
                      u1317 02BB                        u1237 058B                        u1327 02E2  
                      u1247 05A6                        u1337 02EA                        u1257 05C1  
                      u1177 04EC                        u1347 0310                        u1267 021E  
                      u1187 0506                        u1357 0318                        u1277 0239  
                      u1197 0520                        u1287 01EC                        u1297 0202  
                      _WPUB 0095                        _fifo 0026                        _main 039F  
                      btemp 007E                        start 0000                       ?_main 0070  
             __CFG_WDTE$OFF 0000             __end_of_delFIFO 0145                       _PORTB 0006  
           __end_of_getFIFO 0124                       _TRISB 0086                       _TRISD 0088  
           __end_of_initLCD 02C1                       main@a 004D                       main@b 004E  
                     main@c 004F                       main@d 0050             __end_of_putFIFO 00BC  
                     pclath 000A                       status 0003                       wtemp0 007E  
            __CFG_MCLRE$OFF 0000             __initialization 07E5                __end_of_main 07E5  
             ?_initKeyboard 0070                      ??_main 004A               ?_initSerialIO 0070  
                    _ANSELH 0189                ?_screen_menu 0070               ?_keyboardScan 0070  
          __end_of_clearLCD 008F                      _cmdLCD 02C1              ??_initKeyboard 0070  
                 ??_delFIFO 0070                ?_restartFIFO 0070                   ??_getFIFO 0070  
      __size_of_displayFIFO 0003                      _gotoxy 00F3                      _putLCD 01D7  
            ??_initSerialIO 0072                   ??_initLCD 0074                   ??_putFIFO 0070  
          __end_of_writeLCD 01A3              ??_keyboardScan 0070                ?_previousKey 0070  
   __end_of__initialization 07FC           _serialIObyteShift 0145          ?_serialIObyteShift 0070  
            __pcstackCOMMON 0070                __pidataBANK0 00BC         ??_serialIObyteShift 0070  
            _OPTION_REGbits 0081           initSerialIO@ptrIn 0073                  delFIFO@ret 0072  
                __pbssBANK0 0020   __end_of_serialIObyteShift 0170        __end_of_indicePassos 0028  
                __pmaintext 039F                cmdLCD@nibble 0073                     ?_cmdLCD 0070  
        __size_of_resetFIFO 000B                     ?_gotoxy 0074                     ?_putLCD 0070  
   serialIObyteShift@dataIn 0071                   ?_clearLCD 0070        __end_of_initKeyboard 00E0  
                __stringtab 0003               ?_serialIOload 0070               ?_serialIOscan 0070  
      __end_of_initSerialIO 01D7        __size_of_screen_menu 000C                  getFIFO@aux 0071  
           __size_of_cmdLCD 005F                     _delFIFO 0124                  _currentKey 0079  
                   _getFIFO 010B                   _ANSELbits 0188        __end_of_keyboardScan 039F  
           __size_of_gotoxy 0018                   ?_writeLCD 0078             __size_of_putLCD 0034  
                   __ptext1 0245                     __ptext2 0083                     __ptext3 0145  
                   __ptext4 00A2                     __ptext5 020B                     __ptext6 0170  
                   __ptext7 01D7                     __ptext8 00F3                     __ptext9 0088  
      __size_of_restartFIFO 0004                     _initLCD 0282                     _currKey 0023  
                ??_clearLCD 0074                     _putFIFO 00AE             checktecla@F1330 0036  
                   _prevKey 0024                     clrloop0 0090        end_of_initialization 07FC  
         __end_of_resetFIFO 00A2              ??_serialIOload 0070              ??_serialIOscan 0074  
__size_of_serialIObyteShift 002B                     gotoxy@x 0077                     gotoxy@y 0074  
                _screen_car 020B        __size_of_previousKey 0005                     putLCD@c 0072  
                ??_writeLCD 007B                   _PORTAbits 0005       __end_of_indPassosSize 0029  
              _KEYBOARDbits 0006                   _TRISAbits 0085             keyboardScan@aux 0078  
                main@estado 0054                  main@sensor 0052               ??_displayFIFO 0070  
            __end_of_cmdLCD 0320                 ?_currentKey 0070                _indicePassos 0023  
            __end_of_gotoxy 010B              __end_of_putLCD 020B         start_initialization 07E5  
     __size_of_initKeyboard 0013       __size_of_initSerialIO 0034          initSerialIO@length 0071  
               ?_screen_car 0070          initSerialIO@ptrOut 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __size_of_keyboardScan 007F                    ??_cmdLCD 0070                  init_fetch0 00E0  
            _keyboardMatrix 0013                 __pdataBANK0 0036                _initKeyboard 00CD  
                  ??_gotoxy 0075                    ??_putLCD 0070        __end_of_serialIOload 0088  
      __end_of_serialIOscan 0282         __end_of_displayFIFO 0075                _initSerialIO 01A3  
               __pbssCOMMON 007D                   ___latbits 0002               __pcstackBANK0 0047  
         __size_of_clearLCD 0007         __size_of_currentKey 0005                _keyboardScan 0320  
    __end_of_keyboardMatrix 0023                   cmdLCD@cmd 0072                    ?_delFIFO 0070  
             serialIOscan@i 0078               serialIOscan@j 0077                    ?_getFIFO 0070  
                 __pstrings 0003                    ?_initLCD 0070           __size_of_writeLCD 0033  
       __size_of_screen_car 003A                    ?_putFIFO 0070    serialIObyteShift@dataBit 0073  
  serialIObyteShift@dataOut 0072                 writeLCD@ptr 0079               ??_screen_menu 007D  
                 clear_ram0 008F                   _resetFIFO 0097                    _SERIALIO 0005  
               _displayFIFO 0072               ??_restartFIFO 0070                 __stringbase 0012  
              putLCD@nibble 0073                 _lenSerialIO 0020                   main@tecla 0053  
             ??_previousKey 0070                  ?_resetFIFO 0070         __end_of_screen_menu 00AE  
     __size_of_serialIOload 0005       __size_of_serialIOscan 003D                ??_currentKey 0070  
          __size_of_delFIFO 0021            __size_of_getFIFO 0019          __end_of__stringtab 0013  
                  delFIFO@n 0071            __size_of_initLCD 003F         __end_of_restartFIFO 0079  
                  _clearLCD 0088                    _fifoHead 007D            __size_of_putFIFO 000E  
                  _fifoTail 0025                    __ptext10 0075                    __ptext11 0097  
                  __ptext20 010B                    __ptext12 0124                    __ptext21 0072  
                  __ptext13 00AE                    __ptext22 0079                    __ptext14 007E  
                  __ptext15 0320                    __ptext16 01A3                    __ptext17 0282  
                  __ptext18 02C1                    __ptext19 00CD                _serialIOload 0083  
              _serialIOscan 0245               __size_of_main 0446          __end_of_currentKey 007E  
              ??_screen_car 0047         __end_of_previousKey 0083               keyboardScan@i 0079  
             keyboardScan@j 007A                    main@rest 0056                    _writeLCD 0170  
        __end_of_screen_car 0245                    init_ram0 00E4                 _screen_menu 00A2  
                  putFIFO@c 0071                 ??_resetFIFO 0073                   writeLCD@x 007C  
                 writeLCD@y 0078                   stringcode 000D                 _restartFIFO 0075  
              _ptrSerialOut 0021               _indPassosSize 0028                    stringdir 000D  
                  stringtab 0003                 _ptrSerialIn 0022                 _previousKey 007E  
