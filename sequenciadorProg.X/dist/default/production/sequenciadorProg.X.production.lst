

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Nov 12 15:45:46 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_clearLCD
  1180                           	FNCALL	_main,_currentKey
  1181                           	FNCALL	_main,_delFIFO
  1182                           	FNCALL	_main,_displayFIFO
  1183                           	FNCALL	_main,_getFIFO
  1184                           	FNCALL	_main,_initKeyboard
  1185                           	FNCALL	_main,_initLCD
  1186                           	FNCALL	_main,_initSerialIO
  1187                           	FNCALL	_main,_keyboardScan
  1188                           	FNCALL	_main,_previousKey
  1189                           	FNCALL	_main,_putFIFO
  1190                           	FNCALL	_main,_serialIOscan
  1191                           	FNCALL	_main,_writeLCD
  1192                           	FNCALL	_writeLCD,_gotoxy
  1193                           	FNCALL	_writeLCD,_putLCD
  1194                           	FNCALL	_gotoxy,_cmdLCD
  1195                           	FNCALL	_serialIOscan,_serialIObyteShift
  1196                           	FNCALL	_serialIOscan,_serialIOload
  1197                           	FNCALL	_initLCD,_cmdLCD
  1198                           	FNCALL	_clearLCD,_cmdLCD
  1199                           	FNROOT	_main
  1200                           	global	checktecla@F1328
  1201                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1202                           global __pidataBANK0
  1203                           __pidataBANK0:
  1204  0100                     	file	"lcd.c"
  1205                           	line	110
  1206                           
  1207                           ;initializer for checktecla@F1328
  1208                           	retlw	020h
  1209  0100  3420               	retlw	020h
  1210  0101  3420               	retlw	020h
  1211  0102  3420               	retlw	020h
  1212  0103  3420               	retlw	020h
  1213  0104  3420               	retlw	020h
  1214  0105  3420               	retlw	05Bh
  1215  0106  345B               	retlw	020h
  1216  0107  3420               	retlw	020h
  1217  0108  3420               	retlw	05Dh
  1218  0109  345D               	retlw	020h
  1219  010A  3420               	retlw	020h
  1220  010B  3420               	retlw	020h
  1221  010C  3420               	retlw	020h
  1222  010D  3420               	retlw	020h
  1223  010E  3420               	retlw	020h
  1224  010F  3420               	retlw	low(0)
  1225  0110  3400               	global	_keyboardMatrix
  1226                           psect	strings,class=STRING,delta=2,noexec
  1227                           global __pstrings
  1228                           __pstrings:
  1229  0003                     stringtab:
  1230  0003                     	global    __stringtab
  1231                           __stringtab:
  1232  0003                     ;	String table - string pointers are 1 byte each
  1233                           	btfsc	(btemp+1),7
  1234  0003  1BFF               	ljmp	stringcode
  1235  0004  280D               	bcf	status,7
  1236  0005  1383               	btfsc	(btemp+1),0
  1237  0006  187F               	bsf	status,7
  1238  0007  1783               	movf	indf,w
  1239  0008  0800               	incf fsr
  1240  0009  0A84               skipnz
  1241  000A  1903               incf btemp+1
  1242  000B  0AFF               	return
  1243  000C  0008               stringcode:stringdir:
  1244  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
  1245  000D  3000               movwf pclath
  1246  000E  008A               movf fsr,w
  1247  000F  0804               incf fsr
  1248  0010  0A84               	addwf pc
  1249  0011  0782               	global __stringbase
  1250                           __stringbase:
  1251  0012                     	retlw	0
  1252  0012  3400               psect	strings
  1253                           	global    __end_of__stringtab
  1254                           __end_of__stringtab:
  1255  0013                     	file	"keyboard.c"
  1256                           	line	39
  1257                           _keyboardMatrix:
  1258  0013                     	retlw	031h
  1259  0013  3431               	retlw	032h
  1260  0014  3432               	retlw	033h
  1261  0015  3433               	retlw	041h
  1262  0016  3441               	retlw	034h
  1263  0017  3434               	retlw	035h
  1264  0018  3435               	retlw	036h
  1265  0019  3436               	retlw	042h
  1266  001A  3442               	retlw	037h
  1267  001B  3437               	retlw	038h
  1268  001C  3438               	retlw	039h
  1269  001D  3439               	retlw	043h
  1270  001E  3443               	retlw	02Ah
  1271  001F  342A               	retlw	030h
  1272  0020  3430               	retlw	023h
  1273  0021  3423               	retlw	044h
  1274  0022  3444               	global __end_of_keyboardMatrix
  1275                           __end_of_keyboardMatrix:
  1276  0023                     psect	strings
  1277                           	file	"lcd.c"
  1278                           	line	17
  1279                           _indicePassos:
  1280  0023                     	retlw	low(0)
  1281  0023  3400               	retlw	03h
  1282  0024  3403               	retlw	07h
  1283  0025  3407               	retlw	0Bh
  1284  0026  340B               	retlw	0Eh
  1285  0027  340E               	global __end_of_indicePassos
  1286                           __end_of_indicePassos:
  1287  0028                     	global	_indPassosSize
  1288                           psect	strings
  1289                           	file	"lcd.c"
  1290                           	line	16
  1291                           _indPassosSize:
  1292  0028                     	retlw	05h
  1293  0028  3405               	global __end_of_indPassosSize
  1294                           __end_of_indPassosSize:
  1295  0029                     	global	_keyboardMatrix
  1296                           	global	_indPassosSize
  1297                           	global	_fifoHead
  1298                           	global	_lenSerialIO
  1299                           	global	_ptrSerialOut
  1300                           	global	_ptrSerialIn
  1301                           	global	_currKey
  1302                           	global	_prevKey
  1303                           	global	_fifoTail
  1304                           	global	_fifo
  1305                           	global	_SERIALIO
  1306                           _SERIALIO	set	5
  1307  0005                     	global	_PORTAbits
  1308                           _PORTAbits	set	0x5
  1309  0005                     	global	_LCD
  1310                           _LCD	set	8
  1311  0008                     	global	_PORTB
  1312                           _PORTB	set	0x6
  1313  0006                     	global	_KEYBOARDbits
  1314                           _KEYBOARDbits	set	0x6
  1315  0006                     	global	_TRISAbits
  1316                           _TRISAbits	set	0x85
  1317  0085                     	global	_TRISD
  1318                           _TRISD	set	0x88
  1319  0088                     	global	_OPTION_REGbits
  1320                           _OPTION_REGbits	set	0x81
  1321  0081                     	global	_WPUB
  1322                           _WPUB	set	0x95
  1323  0095                     	global	_TRISB
  1324                           _TRISB	set	0x86
  1325  0086                     	global	_ANSELbits
  1326                           _ANSELbits	set	0x188
  1327  0188                     	global	_ANSELH
  1328                           _ANSELH	set	0x189
  1329  0189                     	
  1330                           STR_3:	
  1331  0029                     	retlw	73	;'I'
  1332  0029  3449               	retlw	78	;'N'
  1333  002A  344E               	retlw	83	;'S'
  1334  002B  3453               	retlw	73	;'I'
  1335  002C  3449               	retlw	82	;'R'
  1336  002D  3452               	retlw	65	;'A'
  1337  002E  3441               	retlw	32	;' '
  1338  002F  3420               	retlw	65	;'A'
  1339  0030  3441               	retlw	32	;' '
  1340  0031  3420               	retlw	83	;'S'
  1341  0032  3453               	retlw	69	;'E'
  1342  0033  3445               	retlw	81	;'Q'
  1343  0034  3451               	retlw	85	;'U'
  1344  0035  3455               	retlw	69	;'E'
  1345  0036  3445               	retlw	78	;'N'
  1346  0037  344E               	retlw	46	;'.'
  1347  0038  342E               	retlw	0
  1348  0039  3400               psect	strings
  1349                           	
  1350                           STR_1:	
  1351  003A                     	retlw	83	;'S'
  1352  003A  3453               	retlw	69	;'E'
  1353  003B  3445               	retlw	81	;'Q'
  1354  003C  3451               	retlw	85	;'U'
  1355  003D  3455               	retlw	69	;'E'
  1356  003E  3445               	retlw	78	;'N'
  1357  003F  344E               	retlw	67	;'C'
  1358  0040  3443               	retlw	73	;'I'
  1359  0041  3449               	retlw	65	;'A'
  1360  0042  3441               	retlw	68	;'D'
  1361  0043  3444               	retlw	79	;'O'
  1362  0044  344F               	retlw	82	;'R'
  1363  0045  3452               	retlw	0
  1364  0046  3400               psect	strings
  1365                           	
  1366                           STR_2:	
  1367  0047                     	retlw	80	;'P'
  1368  0047  3450               	retlw	82	;'R'
  1369  0048  3452               	retlw	79	;'O'
  1370  0049  344F               	retlw	71	;'G'
  1371  004A  3447               	retlw	82	;'R'
  1372  004B  3452               	retlw	65	;'A'
  1373  004C  3441               	retlw	77	;'M'
  1374  004D  344D               	retlw	65	;'A'
  1375  004E  3441               	retlw	86	;'V'
  1376  004F  3456               	retlw	69	;'E'
  1377  0050  3445               	retlw	76	;'L'
  1378  0051  344C               	retlw	0
  1379  0052  3400               psect	strings
  1380                           ; #config settings
  1381                           global __CFG_FOSC$INTRC_NOCLKOUT
  1382                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1383  0000                     global __CFG_WDTE$OFF
  1384                           __CFG_WDTE$OFF equ 0x0
  1385  0000                     global __CFG_MCLRE$OFF
  1386                           __CFG_MCLRE$OFF equ 0x0
  1387  0000                     global __CFG_LVP$OFF
  1388                           __CFG_LVP$OFF equ 0x0
  1389  0000                     	file	"C:\Users\18175218\AppData\Local\Temp\s5mo."
  1390                           	line	#
  1391                           psect cinit,class=CODE,delta=2
  1392                           global start_initialization
  1393                           start_initialization:
  1394  07E5                     
  1395                           global __initialization
  1396                           __initialization:
  1397  07E5                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1398                           global __pbssCOMMON
  1399                           __pbssCOMMON:
  1400  007D                     _fifoHead:
  1401  007D                            ds      1
  1402  007D                     
  1403                           psect	bssBANK0,class=BANK0,space=1,noexec
  1404                           global __pbssBANK0
  1405                           __pbssBANK0:
  1406  0020                     _lenSerialIO:
  1407  0020                            ds      1
  1408  0020                     
  1409                           _ptrSerialOut:
  1410  0021                            ds      1
  1411  0021                     
  1412                           _ptrSerialIn:
  1413  0022                            ds      1
  1414  0022                     
  1415                           _currKey:
  1416  0023                            ds      1
  1417  0023                     
  1418                           _prevKey:
  1419  0024                            ds      1
  1420  0024                     
  1421                           _fifoTail:
  1422  0025                            ds      1
  1423  0025                     
  1424                           _fifo:
  1425  0026                            ds      16
  1426  0026                     
  1427                           psect	dataBANK0,class=BANK0,space=1,noexec
  1428                           global __pdataBANK0
  1429                           __pdataBANK0:
  1430  0036                     	file	"lcd.c"
  1431                           	line	110
  1432                           checktecla@F1328:
  1433  0036                            ds      17
  1434  0036                     
  1435                           	file	"C:\Users\18175218\AppData\Local\Temp\s5mo."
  1436                           	line	#
  1437                           global btemp
  1438                           psect inittext,class=CODE,delta=2
  1439                           global init_fetch0,btemp
  1440                           ;	Called with low address in FSR and high address in W
  1441                           init_fetch0:
  1442  0124                     	movf btemp,w
  1443  0124  087E               	movwf pclath
  1444  0125  008A               	movf btemp+1,w
  1445  0126  087F               	movwf pc
  1446  0127  0082               global init_ram0
  1447                           ;Called with:
  1448                           ;	high address of idata address in btemp 
  1449                           ;	low address of idata address in btemp+1 
  1450                           ;	low address of data in FSR
  1451                           ;	high address + 1 of data in btemp-1
  1452                           init_ram0:
  1453  0128                     	fcall init_fetch0
  1454  0128  120A  118A  2124  120A  118A  	movwf indf,f
  1455  012D  0080               	incf fsr,f
  1456  012E  0A84               	movf fsr,w
  1457  012F  0804               	xorwf btemp-1,w
  1458  0130  067D               	btfsc status,2
  1459  0131  1903               	retlw 0
  1460  0132  3400               	incf btemp+1,f
  1461  0133  0AFF               	btfsc status,2
  1462  0134  1903               	incf btemp,f
  1463  0135  0AFE               	goto init_ram0
  1464  0136  2928               ; Initialize objects allocated to BANK0
  1465                           psect cinit,class=CODE,delta=2,merge=1
  1466                           global init_ram0, __pidataBANK0
  1467                           	bcf	status, 7	;select IRP bank0
  1468  07E5  1383               	movlw low(__pdataBANK0+17)
  1469  07E6  3047               	movwf btemp-1,f
  1470  07E7  00FD               	movlw high(__pidataBANK0)
  1471  07E8  3001               	movwf btemp,f
  1472  07E9  00FE               	movlw low(__pidataBANK0)
  1473  07EA  3000               	movwf btemp+1,f
  1474  07EB  00FF               	movlw low(__pdataBANK0)
  1475  07EC  3036               	movwf fsr,f
  1476  07ED  0084               	fcall init_ram0
  1477  07EE  120A  118A  2128  120A  118A  	line	#
  1478                           psect clrtext,class=CODE,delta=2
  1479                           global clear_ram0
  1480                           ;	Called with FSR containing the base address, and
  1481                           ;	W with the last address+1
  1482                           clear_ram0:
  1483  00EA                     	clrwdt			;clear the watchdog before getting into this loop
  1484  00EA  0064               clrloop0:
  1485  00EB                     	clrf	indf		;clear RAM location pointed to by FSR
  1486  00EB  0180               	incf	fsr,f		;increment pointer
  1487  00EC  0A84               	xorwf	fsr,w		;XOR with final address
  1488  00ED  0604               	btfsc	status,2	;have we reached the end yet?
  1489  00EE  1903               	retlw	0		;all done for this memory range, return
  1490  00EF  3400               	xorwf	fsr,w		;XOR again to restore value
  1491  00F0  0604               	goto	clrloop0		;do the next byte
  1492  00F1  28EB               
  1493                           ; Clear objects allocated to BANK0
  1494                           psect cinit,class=CODE,delta=2,merge=1
  1495                           	movlw	low(__pbssBANK0)
  1496  07F3  3020               	movwf	fsr
  1497  07F4  0084               	movlw	low((__pbssBANK0)+016h)
  1498  07F5  3036               	fcall	clear_ram0
  1499  07F6  120A  118A  20EA  120A  118A  ; Clear objects allocated to COMMON
  1500                           psect cinit,class=CODE,delta=2,merge=1
  1501                           	clrf	((__pbssCOMMON)+0)&07Fh
  1502  07FB  01FD               psect cinit,class=CODE,delta=2,merge=1
  1503                           global end_of_initialization,__end_of__initialization
  1504                           
  1505                           ;End of C runtime variable initialization code
  1506                           
  1507                           end_of_initialization:
  1508  07FC                     __end_of__initialization:
  1509  07FC                     clrf status
  1510  07FC  0183               ljmp _main	;jump to C main() function
  1511  07FD  120A  118A  2BA9   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1512                           global __pcstackCOMMON
  1513                           __pcstackCOMMON:
  1514  0070                     ?_displayFIFO:	; 1 bytes @ 0x0
  1515  0070                     ??_displayFIFO:	; 1 bytes @ 0x0
  1516  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1517  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1518  0070                     ?_initSerialIO:	; 1 bytes @ 0x0
  1519  0070                     ?_serialIOscan:	; 1 bytes @ 0x0
  1520  0070                     ?_putFIFO:	; 1 bytes @ 0x0
  1521  0070                     ??_putFIFO:	; 1 bytes @ 0x0
  1522  0070                     ?_getFIFO:	; 1 bytes @ 0x0
  1523  0070                     ??_getFIFO:	; 1 bytes @ 0x0
  1524  0070                     ?_delFIFO:	; 1 bytes @ 0x0
  1525  0070                     ??_delFIFO:	; 1 bytes @ 0x0
  1526  0070                     ?_previousKey:	; 1 bytes @ 0x0
  1527  0070                     ??_previousKey:	; 1 bytes @ 0x0
  1528  0070                     ?_currentKey:	; 1 bytes @ 0x0
  1529  0070                     ??_currentKey:	; 1 bytes @ 0x0
  1530  0070                     ?_keyboardScan:	; 1 bytes @ 0x0
  1531  0070                     ??_keyboardScan:	; 1 bytes @ 0x0
  1532  0070                     ?_initKeyboard:	; 1 bytes @ 0x0
  1533  0070                     ??_initKeyboard:	; 1 bytes @ 0x0
  1534  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1535  0070                     ?_putLCD:	; 1 bytes @ 0x0
  1536  0070                     ??_putLCD:	; 1 bytes @ 0x0
  1537  0070                     ?_clearLCD:	; 1 bytes @ 0x0
  1538  0070                     ?_main:	; 1 bytes @ 0x0
  1539  0070                     ?_serialIOload:	; 1 bytes @ 0x0
  1540  0070                     ??_serialIOload:	; 1 bytes @ 0x0
  1541  0070                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  1542  0070                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  1543  0070                     	global	initSerialIO@ptrOut
  1544                           initSerialIO@ptrOut:	; 1 bytes @ 0x0
  1545  0070                     	ds	1
  1546  0070                     	global	putFIFO@c
  1547                           putFIFO@c:	; 1 bytes @ 0x1
  1548  0071                     	global	getFIFO@aux
  1549                           getFIFO@aux:	; 1 bytes @ 0x1
  1550  0071                     	global	delFIFO@n
  1551                           delFIFO@n:	; 1 bytes @ 0x1
  1552  0071                     	global	serialIObyteShift@dataIn
  1553                           serialIObyteShift@dataIn:	; 1 bytes @ 0x1
  1554  0071                     	global	initSerialIO@length
  1555                           initSerialIO@length:	; 1 bytes @ 0x1
  1556  0071                     	ds	1
  1557  0071                     ??_initSerialIO:	; 1 bytes @ 0x2
  1558  0072                     	global	delFIFO@ret
  1559                           delFIFO@ret:	; 1 bytes @ 0x2
  1560  0072                     	global	cmdLCD@cmd
  1561                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1562  0072                     	global	putLCD@c
  1563                           putLCD@c:	; 1 bytes @ 0x2
  1564  0072                     	global	serialIObyteShift@dataOut
  1565                           serialIObyteShift@dataOut:	; 1 bytes @ 0x2
  1566  0072                     	ds	1
  1567  0072                     	global	cmdLCD@nibble
  1568                           cmdLCD@nibble:	; 1 bytes @ 0x3
  1569  0073                     	global	putLCD@nibble
  1570                           putLCD@nibble:	; 1 bytes @ 0x3
  1571  0073                     	global	serialIObyteShift@dataBit
  1572                           serialIObyteShift@dataBit:	; 1 bytes @ 0x3
  1573  0073                     	global	initSerialIO@ptrIn
  1574                           initSerialIO@ptrIn:	; 1 bytes @ 0x3
  1575  0073                     	ds	1
  1576  0073                     ??_serialIOscan:	; 1 bytes @ 0x4
  1577  0074                     ??_initLCD:	; 1 bytes @ 0x4
  1578  0074                     ?_gotoxy:	; 1 bytes @ 0x4
  1579  0074                     ??_clearLCD:	; 1 bytes @ 0x4
  1580  0074                     	global	gotoxy@y
  1581                           gotoxy@y:	; 1 bytes @ 0x4
  1582  0074                     	ds	1
  1583  0074                     ??_gotoxy:	; 1 bytes @ 0x5
  1584  0075                     	ds	2
  1585  0075                     	global	gotoxy@x
  1586                           gotoxy@x:	; 1 bytes @ 0x7
  1587  0077                     	global	serialIOscan@j
  1588                           serialIOscan@j:	; 1 bytes @ 0x7
  1589  0077                     	ds	1
  1590  0077                     ?_writeLCD:	; 1 bytes @ 0x8
  1591  0078                     	global	keyboardScan@aux
  1592                           keyboardScan@aux:	; 1 bytes @ 0x8
  1593  0078                     	global	writeLCD@y
  1594                           writeLCD@y:	; 1 bytes @ 0x8
  1595  0078                     	global	serialIOscan@i
  1596                           serialIOscan@i:	; 1 bytes @ 0x8
  1597  0078                     	ds	1
  1598  0078                     	global	keyboardScan@i
  1599                           keyboardScan@i:	; 1 bytes @ 0x9
  1600  0079                     	global	writeLCD@ptr
  1601                           writeLCD@ptr:	; 2 bytes @ 0x9
  1602  0079                     	ds	1
  1603  0079                     	global	keyboardScan@j
  1604                           keyboardScan@j:	; 1 bytes @ 0xA
  1605  007A                     	ds	1
  1606  007A                     ??_writeLCD:	; 1 bytes @ 0xB
  1607  007B                     	ds	1
  1608  007B                     	global	writeLCD@x
  1609                           writeLCD@x:	; 1 bytes @ 0xC
  1610  007C                     	ds	1
  1611  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1612                           global __pcstackBANK0
  1613                           __pcstackBANK0:
  1614  0047                     ??_main:	; 1 bytes @ 0x0
  1615  0047                     	ds	3
  1616  0047                     	global	main@a
  1617                           main@a:	; 1 bytes @ 0x3
  1618  004A                     	ds	1
  1619  004A                     	global	main@b
  1620                           main@b:	; 1 bytes @ 0x4
  1621  004B                     	ds	1
  1622  004B                     	global	main@c
  1623                           main@c:	; 1 bytes @ 0x5
  1624  004C                     	ds	1
  1625  004C                     	global	main@d
  1626                           main@d:	; 1 bytes @ 0x6
  1627  004D                     	ds	1
  1628  004D                     	global	main@atuador
  1629                           main@atuador:	; 1 bytes @ 0x7
  1630  004E                     	ds	1
  1631  004E                     	global	main@sensor
  1632                           main@sensor:	; 1 bytes @ 0x8
  1633  004F                     	ds	1
  1634  004F                     	global	main@tecla
  1635                           main@tecla:	; 1 bytes @ 0x9
  1636  0050                     	ds	1
  1637  0050                     	global	main@estado
  1638                           main@estado:	; 2 bytes @ 0xA
  1639  0051                     	ds	2
  1640  0051                     	global	main@rest
  1641                           main@rest:	; 1 bytes @ 0xC
  1642  0053                     	ds	1
  1643  0053                     ;!
  1644                           ;!Data Sizes:
  1645                           ;!    Strings     42
  1646                           ;!    Constant    22
  1647                           ;!    Data        17
  1648                           ;!    BSS         23
  1649                           ;!    Persistent  0
  1650                           ;!    Stack       0
  1651                           ;!
  1652                           ;!Auto Spaces:
  1653                           ;!    Space          Size  Autos    Used
  1654                           ;!    COMMON           14     13      14
  1655                           ;!    BANK0            80     13      52
  1656                           ;!    BANK1            80      0       0
  1657                           ;!    BANK3            96      0       0
  1658                           ;!    BANK2            96      0       0
  1659                           
  1660                           ;!
  1661                           ;!Pointer List with Targets:
  1662                           ;!
  1663                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
  1664                           ;!		 -> main@atuador(BANK0[1]), 
  1665                           ;!
  1666                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
  1667                           ;!		 -> main@sensor(BANK0[1]), 
  1668                           ;!
  1669                           ;!    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
  1670                           ;!		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 
  1671                           ;!
  1672                           ;!    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
  1673                           ;!		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 
  1674                           ;!
  1675                           ;!    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
  1676                           ;!		 -> STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), checktecla@linha2(BANK0[17]),
                                  
  1677                           ;!		 -> fifo(BANK0[16]), 
  1678                           ;!
  1679                           ;!    sp__displayFIFO	PTR void  size(1) Largest target is 16
  1680                           ;!		 -> fifo(BANK0[16]), 
  1681                           ;!
  1682                           
  1683                           
  1684                           ;!
  1685                           ;!Critical Paths under _main in COMMON
  1686                           ;!
  1687                           ;!    _main->_writeLCD
  1688                           ;!    _writeLCD->_gotoxy
  1689                           ;!    _gotoxy->_cmdLCD
  1690                           ;!    _serialIOscan->_serialIObyteShift
  1691                           ;!    _initLCD->_cmdLCD
  1692                           ;!    _clearLCD->_cmdLCD
  1693                           ;!
  1694                           ;!Critical Paths under _main in BANK0
  1695                           ;!
  1696                           ;!    None.
  1697                           ;!
  1698                           ;!Critical Paths under _main in BANK1
  1699                           ;!
  1700                           ;!    None.
  1701                           ;!
  1702                           ;!Critical Paths under _main in BANK3
  1703                           ;!
  1704                           ;!    None.
  1705                           ;!
  1706                           ;!Critical Paths under _main in BANK2
  1707                           ;!
  1708                           ;!    None.
  1709                           
  1710 ;;
  1711 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1712 ;;
  1713                           
  1714                           ;!
  1715                           ;!Call Graph Tables:
  1716                           ;!
  1717                           ;! ---------------------------------------------------------------------------------
  1718                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1719                           ;! ---------------------------------------------------------------------------------
  1720                           ;! (0) _main                                                13    13      0    3335
  1721                           ;!                                              0 BANK0     13    13      0
  1722                           ;!                           _clearLCD
  1723                           ;!                         _currentKey
  1724                           ;!                            _delFIFO
  1725                           ;!                        _displayFIFO
  1726                           ;!                            _getFIFO
  1727                           ;!                       _initKeyboard
  1728                           ;!                            _initLCD
  1729                           ;!                       _initSerialIO
  1730                           ;!                       _keyboardScan
  1731                           ;!                        _previousKey
  1732                           ;!                            _putFIFO
  1733                           ;!                       _serialIOscan
  1734                           ;!                           _writeLCD
  1735                           ;! ---------------------------------------------------------------------------------
  1736                           ;! (1) _writeLCD                                             5     2      3    1213
  1737                           ;!                                              8 COMMON     5     2      3
  1738                           ;!                        _displayFIFO (ARG)
  1739                           ;!                             _gotoxy
  1740                           ;!                             _putLCD
  1741                           ;! ---------------------------------------------------------------------------------
  1742                           ;! (2) _putLCD                                               4     4      0      67
  1743                           ;!                                              0 COMMON     4     4      0
  1744                           ;! ---------------------------------------------------------------------------------
  1745                           ;! (2) _gotoxy                                               4     3      1     297
  1746                           ;!                                              4 COMMON     4     3      1
  1747                           ;!                             _cmdLCD
  1748                           ;! ---------------------------------------------------------------------------------
  1749                           ;! (1) _serialIOscan                                         5     5      0     205
  1750                           ;!                                              4 COMMON     5     5      0
  1751                           ;!                  _serialIObyteShift
  1752                           ;!                       _serialIOload
  1753                           ;! ---------------------------------------------------------------------------------
  1754                           ;! (2) _serialIOload                                         0     0      0       0
  1755                           ;! ---------------------------------------------------------------------------------
  1756                           ;! (2) _serialIObyteShift                                    4     4      0     114
  1757                           ;!                                              0 COMMON     4     4      0
  1758                           ;! ---------------------------------------------------------------------------------
  1759                           ;! (1) _putFIFO                                              2     2      0      22
  1760                           ;!                                              0 COMMON     2     2      0
  1761                           ;! ---------------------------------------------------------------------------------
  1762                           ;! (1) _previousKey                                          0     0      0       0
  1763                           ;! ---------------------------------------------------------------------------------
  1764                           ;! (2) _keyboardScan                                        11    11      0     210
  1765                           ;!                                              0 COMMON    11    11      0
  1766                           ;! ---------------------------------------------------------------------------------
  1767                           ;! (1) _initSerialIO                                         4     2      2     251
  1768                           ;!                                              0 COMMON     4     2      2
  1769                           ;! ---------------------------------------------------------------------------------
  1770                           ;! (1) _initLCD                                              2     2      0     177
  1771                           ;!                                              4 COMMON     2     2      0
  1772                           ;!                             _cmdLCD
  1773                           ;! ---------------------------------------------------------------------------------
  1774                           ;! (1) _initKeyboard                                         0     0      0       0
  1775                           ;! ---------------------------------------------------------------------------------
  1776                           ;! (1) _getFIFO                                              2     2      0      24
  1777                           ;!                                              0 COMMON     2     2      0
  1778                           ;! ---------------------------------------------------------------------------------
  1779                           ;! (1) _displayFIFO                                          0     0      0       0
  1780                           ;! ---------------------------------------------------------------------------------
  1781                           ;! (1) _delFIFO                                              3     3      0      46
  1782                           ;!                                              0 COMMON     3     3      0
  1783                           ;! ---------------------------------------------------------------------------------
  1784                           ;! (1) _currentKey                                           0     0      0       0
  1785                           ;! ---------------------------------------------------------------------------------
  1786                           ;! (1) _clearLCD                                             0     0      0     177
  1787                           ;!                             _cmdLCD
  1788                           ;! ---------------------------------------------------------------------------------
  1789                           ;! (3) _cmdLCD                                               4     4      0     177
  1790                           ;!                                              0 COMMON     4     4      0
  1791                           ;! ---------------------------------------------------------------------------------
  1792                           ;! Estimated maximum stack depth 3
  1793                           ;! ---------------------------------------------------------------------------------
  1794                           ;!
  1795                           ;! Call Graph Graphs:
  1796                           ;!
  1797                           ;! _main (ROOT)
  1798                           ;!   _clearLCD
  1799                           ;!     _cmdLCD
  1800                           ;!   _currentKey
  1801                           ;!   _delFIFO
  1802                           ;!   _displayFIFO
  1803                           ;!   _getFIFO
  1804                           ;!   _initKeyboard
  1805                           ;!   _initLCD
  1806                           ;!     _cmdLCD
  1807                           ;!   _initSerialIO
  1808                           ;!   _keyboardScan
  1809                           ;!   _previousKey
  1810                           ;!   _putFIFO
  1811                           ;!   _serialIOscan
  1812                           ;!     _serialIObyteShift
  1813                           ;!     _serialIOload
  1814                           ;!   _writeLCD
  1815                           ;!     _displayFIFO (ARG)
  1816                           ;!     _gotoxy (ARG)
  1817                           ;!       _cmdLCD
  1818                           ;!     _putLCD (ARG)
  1819                           ;!
  1820                           
  1821                           ;! Address spaces:
  1822                           
  1823                           ;!Name               Size   Autos  Total    Cost      Usage
  1824                           ;!BANK3               60      0       0       9        0.0%
  1825                           ;!BITBANK3            60      0       0       8        0.0%
  1826                           ;!SFR3                 0      0       0       4        0.0%
  1827                           ;!BITSFR3              0      0       0       4        0.0%
  1828                           ;!BANK2               60      0       0      11        0.0%
  1829                           ;!BITBANK2            60      0       0      10        0.0%
  1830                           ;!SFR2                 0      0       0       5        0.0%
  1831                           ;!BITSFR2              0      0       0       5        0.0%
  1832                           ;!BANK1               50      0       0       7        0.0%
  1833                           ;!BITBANK1            50      0       0       6        0.0%
  1834                           ;!SFR1                 0      0       0       2        0.0%
  1835                           ;!BITSFR1              0      0       0       2        0.0%
  1836                           ;!BANK0               50      D      34       5       65.0%
  1837                           ;!BITBANK0            50      0       0       4        0.0%
  1838                           ;!SFR0                 0      0       0       1        0.0%
  1839                           ;!BITSFR0              0      0       0       1        0.0%
  1840                           ;!COMMON               E      D       E       1      100.0%
  1841                           ;!BITCOMMON            E      0       0       0        0.0%
  1842                           ;!CODE                 0      0       0       0        0.0%
  1843                           ;!DATA                 0      0      42      12        0.0%
  1844                           ;!ABS                  0      0      42       3        0.0%
  1845                           ;!NULL                 0      0       0       0        0.0%
  1846                           ;!STACK                0      0       0       2        0.0%
  1847                           ;!EEDATA             100      0       0       0        0.0%
  1848                           
  1849                           	global	_main
  1850                           
  1851 ;; *************** function _main *****************
  1852 ;; Defined at:
  1853 ;;		line 48 in file "main.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  estado          2   10[BANK0 ] int 
  1858 ;;  rest            1   12[BANK0 ] unsigned char 
  1859 ;;  tecla           1    9[BANK0 ] unsigned char 
  1860 ;;  sensor          1    8[BANK0 ] struct .
  1861 ;;  atuador         1    7[BANK0 ] struct .
  1862 ;;  d               1    6[BANK0 ] unsigned char 
  1863 ;;  c               1    5[BANK0 ] unsigned char 
  1864 ;;  b               1    4[BANK0 ] unsigned char 
  1865 ;;  a               1    3[BANK0 ] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : B00/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1875 ;;      Params:         0       0       0       0       0
  1876 ;;      Locals:         0      10       0       0       0
  1877 ;;      Temps:          0       3       0       0       0
  1878 ;;      Totals:         0      13       0       0       0
  1879 ;;Total ram usage:       13 bytes
  1880 ;; Hardware stack levels required when called:    3
  1881 ;; This function calls:
  1882 ;;		_clearLCD
  1883 ;;		_currentKey
  1884 ;;		_delFIFO
  1885 ;;		_displayFIFO
  1886 ;;		_getFIFO
  1887 ;;		_initKeyboard
  1888 ;;		_initLCD
  1889 ;;		_initSerialIO
  1890 ;;		_keyboardScan
  1891 ;;		_previousKey
  1892 ;;		_putFIFO
  1893 ;;		_serialIOscan
  1894 ;;		_writeLCD
  1895 ;; This function is called by:
  1896 ;;		Startup code after reset
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1900                           	file	"main.c"
  1901                           	line	48
  1902                           global __pmaintext
  1903                           __pmaintext:	;psect for function _main
  1904  03A9                     psect	maintext
  1905                           	file	"main.c"
  1906                           	line	48
  1907                           	global	__size_of_main
  1908                           	__size_of_main	equ	__end_of_main-_main
  1909  043C                     	
  1910                           _main:	
  1911  03A9                     ;incstack = 0
  1912                           	opt	stack 5
  1913                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1914                           	line	50
  1915                           	
  1916                           l1824:	
  1917  03A9                     ;main.c: 50:     unsigned char tecla = 0;
  1918                           	bcf	status, 5	;RP0=0, select bank0
  1919  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  1920  03AA  1303               	clrf	(main@tecla)
  1921  03AB  01D0               	line	51
  1922                           ;main.c: 51:     unsigned char a,b,c,d = 0;
  1923                           	clrf	(main@d)
  1924  03AC  01CD               	line	52
  1925                           ;main.c: 52:     unsigned char rest = 0;
  1926                           	clrf	(main@rest)
  1927  03AD  01D3               	line	55
  1928                           ;main.c: 53:     SENSORESbits_t sensor;;main.c: 54:     ATUADORESbits_t atuador;;main.c:
                                  55:     int estado = 0;
  1929                           	clrf	(main@estado)
  1930  03AE  01D1               	clrf	(main@estado+1)
  1931  03AF  01D2               	line	57
  1932                           	
  1933                           l1826:	
  1934  03B0                     ;main.c: 57:     initLCD();
  1935                           	fcall	_initLCD
  1936  03B0  120A  118A  228C  120A  118A  	line	59
  1937                           	
  1938                           l1828:	
  1939  03B5                     ;main.c: 59:     initKeyboard();
  1940                           	fcall	_initKeyboard
  1941  03B5  120A  118A  2111  120A  118A  	line	60
  1942                           	
  1943                           l1830:	
  1944  03BA                     ;main.c: 60:     initSerialIO( &sensor, &atuador, 1 );
  1945                           	movlw	(low(main@atuador|((0x0)<<8)))&0ffh
  1946  03BA  304E               	bcf	status, 5	;RP0=0, select bank0
  1947  03BB  1283               	bcf	status, 6	;RP1=0, select bank0
  1948  03BC  1303               	movwf	(??_main+0)+0
  1949  03BD  00C7               	movf	(??_main+0)+0,w
  1950  03BE  0847               	movwf	(initSerialIO@ptrOut)
  1951  03BF  00F0               	clrf	(initSerialIO@length)
  1952  03C0  01F1               	incf	(initSerialIO@length),f
  1953  03C1  0AF1               	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  1954  03C2  304F               	fcall	_initSerialIO
  1955  03C3  120A  118A  21E7  120A  118A  	line	61
  1956                           	
  1957                           l1832:	
  1958  03C8                     ;main.c: 61:     atuador.ABCD = 0x00;
  1959                           	bcf	status, 5	;RP0=0, select bank0
  1960  03C8  1283               	bcf	status, 6	;RP1=0, select bank0
  1961  03C9  1303               	clrf	(main@atuador)
  1962  03CA  01CE               	goto	l1834
  1963  03CB  2BCC               	line	73
  1964                           ;main.c: 73:     while( 1 )
  1965                           	
  1966                           l163:	
  1967  03CC                     	line	79
  1968                           	
  1969                           l1834:	
  1970  03CC                     ;main.c: 74:     {;main.c: 79:         keyboardScan();
  1971                           	fcall	_keyboardScan
  1972  03CC  120A  118A  232A  120A  118A  	line	81
  1973                           ;main.c: 81:         switch( estado )
  1974                           	goto	l1976
  1975  03D1  2E1A               	line	83
  1976                           ;main.c: 82:         {;main.c: 83:             case 0:
  1977                           	
  1978                           l165:	
  1979  03D2                     	line	84
  1980                           ;main.c: 84:                     break;
  1981                           	goto	l1978
  1982  03D2  2E94               	line	85
  1983                           ;main.c: 85:             case 10:
  1984                           	
  1985                           l167:	
  1986  03D3                     	line	86
  1987                           	
  1988                           l1836:	
  1989  03D3                     ;main.c: 86:                     rest = getFIFO();
  1990                           	fcall	_getFIFO
  1991  03D3  120A  118A  214F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1992  03D8  1283               	bcf	status, 6	;RP1=0, select bank0
  1993  03D9  1303               	movwf	(??_main+0)+0
  1994  03DA  00C7               	movf	(??_main+0)+0,w
  1995  03DB  0847               	movwf	(main@rest)
  1996  03DC  00D3               	line	87
  1997                           	
  1998                           l1838:	
  1999  03DD                     ;main.c: 87:                     if( rest == 'A' )
  2000                           		movlw	65
  2001  03DD  3041               	xorwf	((main@rest)),w
  2002  03DE  0653               	btfss	status,2
  2003  03DF  1D03               	goto	u901
  2004  03E0  2BE2               	goto	u900
  2005  03E1  2BE3               u901:
  2006  03E2                     	goto	l1842
  2007  03E2  2BE8               u900:
  2008  03E3                     	line	88
  2009                           	
  2010                           l1840:	
  2011  03E3                     ;main.c: 88:                         estado = 100;
  2012                           	movlw	064h
  2013  03E3  3064               	movwf	(main@estado)
  2014  03E4  00D1               	movlw	0
  2015  03E5  3000               	movwf	((main@estado))+1
  2016  03E6  00D2               	goto	l1978
  2017  03E7  2E94               	line	89
  2018                           ;main.c: 89:                     else if( rest == 'B' )
  2019                           	
  2020                           l168:	
  2021  03E8                     	
  2022                           l1842:	
  2023  03E8                     		movlw	66
  2024  03E8  3042               	xorwf	((main@rest)),w
  2025  03E9  0653               	btfss	status,2
  2026  03EA  1D03               	goto	u911
  2027  03EB  2BED               	goto	u910
  2028  03EC  2BEE               u911:
  2029  03ED                     	goto	l1846
  2030  03ED  2BF3               u910:
  2031  03EE                     	line	90
  2032                           	
  2033                           l1844:	
  2034  03EE                     ;main.c: 90:                         estado = 110;
  2035                           	movlw	06Eh
  2036  03EE  306E               	movwf	(main@estado)
  2037  03EF  00D1               	movlw	0
  2038  03F0  3000               	movwf	((main@estado))+1
  2039  03F1  00D2               	goto	l1978
  2040  03F2  2E94               	line	91
  2041                           ;main.c: 91:                     else if( rest == 'C' )
  2042                           	
  2043                           l170:	
  2044  03F3                     	
  2045                           l1846:	
  2046  03F3                     		movlw	67
  2047  03F3  3043               	xorwf	((main@rest)),w
  2048  03F4  0653               	btfss	status,2
  2049  03F5  1D03               	goto	u921
  2050  03F6  2BF8               	goto	u920
  2051  03F7  2BF9               u921:
  2052  03F8                     	goto	l1850
  2053  03F8  2BFE               u920:
  2054  03F9                     	line	92
  2055                           	
  2056                           l1848:	
  2057  03F9                     ;main.c: 92:                         estado = 120;
  2058                           	movlw	078h
  2059  03F9  3078               	movwf	(main@estado)
  2060  03FA  00D1               	movlw	0
  2061  03FB  3000               	movwf	((main@estado))+1
  2062  03FC  00D2               	goto	l1978
  2063  03FD  2E94               	line	93
  2064                           ;main.c: 93:                     else if( rest == 'D' )
  2065                           	
  2066                           l172:	
  2067  03FE                     	
  2068                           l1850:	
  2069  03FE                     		movlw	68
  2070  03FE  3044               	xorwf	((main@rest)),w
  2071  03FF  0653               	btfss	status,2
  2072  0400  1D03               	goto	u931
  2073  0401  2C03               	goto	u930
  2074  0402  2C04               u931:
  2075  0403                     	goto	l1854
  2076  0403  2C09               u930:
  2077  0404                     	line	94
  2078                           	
  2079                           l1852:	
  2080  0404                     ;main.c: 94:                         estado = 130;
  2081                           	movlw	082h
  2082  0404  3082               	movwf	(main@estado)
  2083  0405  00D1               	movlw	0
  2084  0406  3000               	movwf	((main@estado))+1
  2085  0407  00D2               	goto	l1978
  2086  0408  2E94               	line	95
  2087                           ;main.c: 95:                     else if( rest == '1' )
  2088                           	
  2089                           l174:	
  2090  0409                     	
  2091                           l1854:	
  2092  0409                     		movlw	49
  2093  0409  3031               	xorwf	((main@rest)),w
  2094  040A  0653               	btfss	status,2
  2095  040B  1D03               	goto	u941
  2096  040C  2C0E               	goto	u940
  2097  040D  2C0F               u941:
  2098  040E                     	goto	l1858
  2099  040E  2C14               u940:
  2100  040F                     	line	96
  2101                           	
  2102                           l1856:	
  2103  040F                     ;main.c: 96:                         estado = 140;
  2104                           	movlw	08Ch
  2105  040F  308C               	movwf	(main@estado)
  2106  0410  00D1               	movlw	0
  2107  0411  3000               	movwf	((main@estado))+1
  2108  0412  00D2               	goto	l1978
  2109  0413  2E94               	line	97
  2110                           ;main.c: 97:                     else if( rest == '2' )
  2111                           	
  2112                           l176:	
  2113  0414                     	
  2114                           l1858:	
  2115  0414                     		movlw	50
  2116  0414  3032               	xorwf	((main@rest)),w
  2117  0415  0653               	btfss	status,2
  2118  0416  1D03               	goto	u951
  2119  0417  2C19               	goto	u950
  2120  0418  2C1A               u951:
  2121  0419                     	goto	l1862
  2122  0419  2C1F               u950:
  2123  041A                     	line	98
  2124                           	
  2125                           l1860:	
  2126  041A                     ;main.c: 98:                         estado = 150;
  2127                           	movlw	096h
  2128  041A  3096               	movwf	(main@estado)
  2129  041B  00D1               	movlw	0
  2130  041C  3000               	movwf	((main@estado))+1
  2131  041D  00D2               	goto	l1978
  2132  041E  2E94               	line	99
  2133                           ;main.c: 99:                     else if( rest == '3' )
  2134                           	
  2135                           l178:	
  2136  041F                     	
  2137                           l1862:	
  2138  041F                     		movlw	51
  2139  041F  3033               	xorwf	((main@rest)),w
  2140  0420  0653               	btfss	status,2
  2141  0421  1D03               	goto	u961
  2142  0422  2C24               	goto	u960
  2143  0423  2C25               u961:
  2144  0424                     	goto	l1866
  2145  0424  2C2A               u960:
  2146  0425                     	line	100
  2147                           	
  2148                           l1864:	
  2149  0425                     ;main.c: 100:                         estado = 160;
  2150                           	movlw	0A0h
  2151  0425  30A0               	movwf	(main@estado)
  2152  0426  00D1               	movlw	0
  2153  0427  3000               	movwf	((main@estado))+1
  2154  0428  00D2               	goto	l1978
  2155  0429  2E94               	line	101
  2156                           ;main.c: 101:                     else if( rest == '4' )
  2157                           	
  2158                           l180:	
  2159  042A                     	
  2160                           l1866:	
  2161  042A                     		movlw	52
  2162  042A  3034               	xorwf	((main@rest)),w
  2163  042B  0653               	btfss	status,2
  2164  042C  1D03               	goto	u971
  2165  042D  2C2F               	goto	u970
  2166  042E  2C30               u971:
  2167  042F                     	goto	l1870
  2168  042F  2C35               u970:
  2169  0430                     	line	102
  2170                           	
  2171                           l1868:	
  2172  0430                     ;main.c: 102:                         estado = 170;
  2173                           	movlw	0AAh
  2174  0430  30AA               	movwf	(main@estado)
  2175  0431  00D1               	movlw	0
  2176  0432  3000               	movwf	((main@estado))+1
  2177  0433  00D2               	goto	l1978
  2178  0434  2E94               	line	103
  2179                           ;main.c: 103:                     else if( rest == '5' )
  2180                           	
  2181                           l182:	
  2182  0435                     	
  2183                           l1870:	
  2184  0435                     		movlw	53
  2185  0435  3035               	xorwf	((main@rest)),w
  2186  0436  0653               	btfss	status,2
  2187  0437  1D03               	goto	u981
  2188  0438  2C3A               	goto	u980
  2189  0439  2C3B               u981:
  2190  043A                     	goto	l1874
  2191  043A  2C40               u980:
  2192  043B                     	line	104
  2193                           	
  2194                           l1872:	
  2195  043B                     ;main.c: 104:                         estado = 180;
  2196                           	movlw	0B4h
  2197  043B  30B4               	movwf	(main@estado)
  2198  043C  00D1               	movlw	0
  2199  043D  3000               	movwf	((main@estado))+1
  2200  043E  00D2               	goto	l1978
  2201  043F  2E94               	line	105
  2202                           ;main.c: 105:                     else if( rest == '6' )
  2203                           	
  2204                           l184:	
  2205  0440                     	
  2206                           l1874:	
  2207  0440                     		movlw	54
  2208  0440  3036               	xorwf	((main@rest)),w
  2209  0441  0653               	btfss	status,2
  2210  0442  1D03               	goto	u991
  2211  0443  2C45               	goto	u990
  2212  0444  2C46               u991:
  2213  0445                     	goto	l1878
  2214  0445  2C4B               u990:
  2215  0446                     	line	106
  2216                           	
  2217                           l1876:	
  2218  0446                     ;main.c: 106:                         estado = 190;
  2219                           	movlw	0BEh
  2220  0446  30BE               	movwf	(main@estado)
  2221  0447  00D1               	movlw	0
  2222  0448  3000               	movwf	((main@estado))+1
  2223  0449  00D2               	goto	l1978
  2224  044A  2E94               	line	107
  2225                           ;main.c: 107:                     else if( rest == '7' )
  2226                           	
  2227                           l186:	
  2228  044B                     	
  2229                           l1878:	
  2230  044B                     		movlw	55
  2231  044B  3037               	xorwf	((main@rest)),w
  2232  044C  0653               	btfss	status,2
  2233  044D  1D03               	goto	u1001
  2234  044E  2C50               	goto	u1000
  2235  044F  2C51               u1001:
  2236  0450                     	goto	l1882
  2237  0450  2C56               u1000:
  2238  0451                     	line	108
  2239                           	
  2240                           l1880:	
  2241  0451                     ;main.c: 108:                         estado = 200;
  2242                           	movlw	0C8h
  2243  0451  30C8               	movwf	(main@estado)
  2244  0452  00D1               	movlw	0
  2245  0453  3000               	movwf	((main@estado))+1
  2246  0454  00D2               	goto	l1978
  2247  0455  2E94               	line	109
  2248                           ;main.c: 109:                     else if( rest == '8' )
  2249                           	
  2250                           l188:	
  2251  0456                     	
  2252                           l1882:	
  2253  0456                     		movlw	56
  2254  0456  3038               	xorwf	((main@rest)),w
  2255  0457  0653               	btfss	status,2
  2256  0458  1D03               	goto	u1011
  2257  0459  2C5B               	goto	u1010
  2258  045A  2C5C               u1011:
  2259  045B                     	goto	l1886
  2260  045B  2C61               u1010:
  2261  045C                     	line	110
  2262                           	
  2263                           l1884:	
  2264  045C                     ;main.c: 110:                         estado = 210;
  2265                           	movlw	0D2h
  2266  045C  30D2               	movwf	(main@estado)
  2267  045D  00D1               	movlw	0
  2268  045E  3000               	movwf	((main@estado))+1
  2269  045F  00D2               	goto	l1978
  2270  0460  2E94               	line	111
  2271                           ;main.c: 111:                     else if( rest == '9' )
  2272                           	
  2273                           l190:	
  2274  0461                     	
  2275                           l1886:	
  2276  0461                     		movlw	57
  2277  0461  3039               	xorwf	((main@rest)),w
  2278  0462  0653               	btfss	status,2
  2279  0463  1D03               	goto	u1021
  2280  0464  2C66               	goto	u1020
  2281  0465  2C67               u1021:
  2282  0466                     	goto	l1890
  2283  0466  2C6C               u1020:
  2284  0467                     	line	112
  2285                           	
  2286                           l1888:	
  2287  0467                     ;main.c: 112:                         estado = 220;
  2288                           	movlw	0DCh
  2289  0467  30DC               	movwf	(main@estado)
  2290  0468  00D1               	movlw	0
  2291  0469  3000               	movwf	((main@estado))+1
  2292  046A  00D2               	goto	l1978
  2293  046B  2E94               	line	113
  2294                           ;main.c: 113:                     else if( rest == 'a' )
  2295                           	
  2296                           l192:	
  2297  046C                     	
  2298                           l1890:	
  2299  046C                     		movlw	97
  2300  046C  3061               	xorwf	((main@rest)),w
  2301  046D  0653               	btfss	status,2
  2302  046E  1D03               	goto	u1031
  2303  046F  2C71               	goto	u1030
  2304  0470  2C72               u1031:
  2305  0471                     	goto	l1894
  2306  0471  2C77               u1030:
  2307  0472                     	line	114
  2308                           	
  2309                           l1892:	
  2310  0472                     ;main.c: 114:                         estado = 230;
  2311                           	movlw	0E6h
  2312  0472  30E6               	movwf	(main@estado)
  2313  0473  00D1               	movlw	0
  2314  0474  3000               	movwf	((main@estado))+1
  2315  0475  00D2               	goto	l1978
  2316  0476  2E94               	line	115
  2317                           ;main.c: 115:                     else if( rest == 'b' )
  2318                           	
  2319                           l194:	
  2320  0477                     	
  2321                           l1894:	
  2322  0477                     		movlw	98
  2323  0477  3062               	xorwf	((main@rest)),w
  2324  0478  0653               	btfss	status,2
  2325  0479  1D03               	goto	u1041
  2326  047A  2C7C               	goto	u1040
  2327  047B  2C7D               u1041:
  2328  047C                     	goto	l1898
  2329  047C  2C82               u1040:
  2330  047D                     	line	116
  2331                           	
  2332                           l1896:	
  2333  047D                     ;main.c: 116:                         estado = 240;
  2334                           	movlw	0F0h
  2335  047D  30F0               	movwf	(main@estado)
  2336  047E  00D1               	movlw	0
  2337  047F  3000               	movwf	((main@estado))+1
  2338  0480  00D2               	goto	l1978
  2339  0481  2E94               	line	117
  2340                           ;main.c: 117:                     else if( rest == 'c' )
  2341                           	
  2342                           l196:	
  2343  0482                     	
  2344                           l1898:	
  2345  0482                     		movlw	99
  2346  0482  3063               	xorwf	((main@rest)),w
  2347  0483  0653               	btfss	status,2
  2348  0484  1D03               	goto	u1051
  2349  0485  2C87               	goto	u1050
  2350  0486  2C88               u1051:
  2351  0487                     	goto	l1902
  2352  0487  2C8D               u1050:
  2353  0488                     	line	118
  2354                           	
  2355                           l1900:	
  2356  0488                     ;main.c: 118:                         estado = 250;
  2357                           	movlw	0FAh
  2358  0488  30FA               	movwf	(main@estado)
  2359  0489  00D1               	movlw	0
  2360  048A  3000               	movwf	((main@estado))+1
  2361  048B  00D2               	goto	l1978
  2362  048C  2E94               	line	119
  2363                           ;main.c: 119:                     else if( rest == 'd' )
  2364                           	
  2365                           l198:	
  2366  048D                     	
  2367                           l1902:	
  2368  048D                     		movlw	100
  2369  048D  3064               	xorwf	((main@rest)),w
  2370  048E  0653               	btfss	status,2
  2371  048F  1D03               	goto	u1061
  2372  0490  2C92               	goto	u1060
  2373  0491  2C93               u1061:
  2374  0492                     	goto	l1978
  2375  0492  2E94               u1060:
  2376  0493                     	line	120
  2377                           	
  2378                           l1904:	
  2379  0493                     ;main.c: 120:                         estado = 260;
  2380                           	movlw	04h
  2381  0493  3004               	movwf	(main@estado)
  2382  0494  00D1               	movlw	01h
  2383  0495  3001               	movwf	((main@estado))+1
  2384  0496  00D2               	goto	l1978
  2385  0497  2E94               	
  2386                           l200:	
  2387  0498                     	goto	l1978
  2388  0498  2E94               	
  2389                           l199:	
  2390  0499                     	goto	l1978
  2391  0499  2E94               	
  2392                           l197:	
  2393  049A                     	goto	l1978
  2394  049A  2E94               	
  2395                           l195:	
  2396  049B                     	goto	l1978
  2397  049B  2E94               	
  2398                           l193:	
  2399  049C                     	goto	l1978
  2400  049C  2E94               	
  2401                           l191:	
  2402  049D                     	goto	l1978
  2403  049D  2E94               	
  2404                           l189:	
  2405  049E                     	goto	l1978
  2406  049E  2E94               	
  2407                           l187:	
  2408  049F                     	goto	l1978
  2409  049F  2E94               	
  2410                           l185:	
  2411  04A0                     	goto	l1978
  2412  04A0  2E94               	
  2413                           l183:	
  2414  04A1                     	goto	l1978
  2415  04A1  2E94               	
  2416                           l181:	
  2417  04A2                     	goto	l1978
  2418  04A2  2E94               	
  2419                           l179:	
  2420  04A3                     	goto	l1978
  2421  04A3  2E94               	
  2422                           l177:	
  2423  04A4                     	goto	l1978
  2424  04A4  2E94               	
  2425                           l175:	
  2426  04A5                     	goto	l1978
  2427  04A5  2E94               	
  2428                           l173:	
  2429  04A6                     	goto	l1978
  2430  04A6  2E94               	
  2431                           l171:	
  2432  04A7                     	goto	l1978
  2433  04A7  2E94               	
  2434                           l169:	
  2435  04A8                     	line	121
  2436                           ;main.c: 121:                     break;
  2437                           	goto	l1978
  2438  04A8  2E94               	line	122
  2439                           ;main.c: 122:             case 100:
  2440                           	
  2441                           l201:	
  2442  04A9                     	line	123
  2443                           ;main.c: 123:                     atuador.A = 1;
  2444                           	bsf	(main@atuador),0
  2445  04A9  144E               	line	124
  2446                           	
  2447                           l1906:	
  2448  04AA                     ;main.c: 124:                     estado = 101;
  2449                           	movlw	065h
  2450  04AA  3065               	movwf	(main@estado)
  2451  04AB  00D1               	movlw	0
  2452  04AC  3000               	movwf	((main@estado))+1
  2453  04AD  00D2               	line	125
  2454                           ;main.c: 125:                     break;
  2455                           	goto	l1978
  2456  04AE  2E94               	line	126
  2457                           ;main.c: 126:             case 101:
  2458                           	
  2459                           l202:	
  2460  04AF                     	line	127
  2461                           ;main.c: 127:                     if( sensor.A1 == 1)
  2462                           	btfss	(main@sensor),1
  2463  04AF  1CCF               	goto	u1071
  2464  04B0  2CB2               	goto	u1070
  2465  04B1  2CB3               u1071:
  2466  04B2                     	goto	l1978
  2467  04B2  2E94               u1070:
  2468  04B3                     	line	128
  2469                           	
  2470                           l1908:	
  2471  04B3                     ;main.c: 128:                         estado = 10;
  2472                           	movlw	0Ah
  2473  04B3  300A               	movwf	(main@estado)
  2474  04B4  00D1               	movlw	0
  2475  04B5  3000               	movwf	((main@estado))+1
  2476  04B6  00D2               	goto	l1978
  2477  04B7  2E94               	
  2478                           l203:	
  2479  04B8                     	line	129
  2480                           ;main.c: 129:                     break;
  2481                           	goto	l1978
  2482  04B8  2E94               	line	130
  2483                           ;main.c: 130:             case 110:
  2484                           	
  2485                           l204:	
  2486  04B9                     	line	131
  2487                           ;main.c: 131:                     atuador.B = 1;
  2488                           	bsf	(main@atuador),1
  2489  04B9  14CE               	line	132
  2490                           	
  2491                           l1910:	
  2492  04BA                     ;main.c: 132:                     estado = 111;
  2493                           	movlw	06Fh
  2494  04BA  306F               	movwf	(main@estado)
  2495  04BB  00D1               	movlw	0
  2496  04BC  3000               	movwf	((main@estado))+1
  2497  04BD  00D2               	line	133
  2498                           ;main.c: 133:                     break;
  2499                           	goto	l1978
  2500  04BE  2E94               	line	134
  2501                           ;main.c: 134:             case 111:
  2502                           	
  2503                           l205:	
  2504  04BF                     	line	135
  2505                           ;main.c: 135:                     if( sensor.B1 == 1)
  2506                           	btfss	(main@sensor),3
  2507  04BF  1DCF               	goto	u1081
  2508  04C0  2CC2               	goto	u1080
  2509  04C1  2CC3               u1081:
  2510  04C2                     	goto	l1978
  2511  04C2  2E94               u1080:
  2512  04C3                     	line	136
  2513                           	
  2514                           l1912:	
  2515  04C3                     ;main.c: 136:                         estado = 10;
  2516                           	movlw	0Ah
  2517  04C3  300A               	movwf	(main@estado)
  2518  04C4  00D1               	movlw	0
  2519  04C5  3000               	movwf	((main@estado))+1
  2520  04C6  00D2               	goto	l1978
  2521  04C7  2E94               	
  2522                           l206:	
  2523  04C8                     	line	137
  2524                           ;main.c: 137:                     break;
  2525                           	goto	l1978
  2526  04C8  2E94               	line	138
  2527                           ;main.c: 138:             case 120:
  2528                           	
  2529                           l207:	
  2530  04C9                     	line	139
  2531                           ;main.c: 139:                     atuador.C = 1;
  2532                           	bsf	(main@atuador),2
  2533  04C9  154E               	line	140
  2534                           	
  2535                           l1914:	
  2536  04CA                     ;main.c: 140:                     estado = 121;
  2537                           	movlw	079h
  2538  04CA  3079               	movwf	(main@estado)
  2539  04CB  00D1               	movlw	0
  2540  04CC  3000               	movwf	((main@estado))+1
  2541  04CD  00D2               	line	141
  2542                           ;main.c: 141:                     break;
  2543                           	goto	l1978
  2544  04CE  2E94               	line	142
  2545                           ;main.c: 142:             case 121:
  2546                           	
  2547                           l208:	
  2548  04CF                     	line	143
  2549                           ;main.c: 143:                     if( sensor.C1 == 1)
  2550                           	btfss	(main@sensor),5
  2551  04CF  1ECF               	goto	u1091
  2552  04D0  2CD2               	goto	u1090
  2553  04D1  2CD3               u1091:
  2554  04D2                     	goto	l1978
  2555  04D2  2E94               u1090:
  2556  04D3                     	line	144
  2557                           	
  2558                           l1916:	
  2559  04D3                     ;main.c: 144:                         estado = 10;
  2560                           	movlw	0Ah
  2561  04D3  300A               	movwf	(main@estado)
  2562  04D4  00D1               	movlw	0
  2563  04D5  3000               	movwf	((main@estado))+1
  2564  04D6  00D2               	goto	l1978
  2565  04D7  2E94               	
  2566                           l209:	
  2567  04D8                     	line	145
  2568                           ;main.c: 145:                     break;
  2569                           	goto	l1978
  2570  04D8  2E94               	line	146
  2571                           ;main.c: 146:             case 130:
  2572                           	
  2573                           l210:	
  2574  04D9                     	line	147
  2575                           ;main.c: 147:                     atuador.D = 1;
  2576                           	bsf	(main@atuador),3
  2577  04D9  15CE               	line	148
  2578                           	
  2579                           l1918:	
  2580  04DA                     ;main.c: 148:                     estado = 131;
  2581                           	movlw	083h
  2582  04DA  3083               	movwf	(main@estado)
  2583  04DB  00D1               	movlw	0
  2584  04DC  3000               	movwf	((main@estado))+1
  2585  04DD  00D2               	line	149
  2586                           ;main.c: 149:                     break;
  2587                           	goto	l1978
  2588  04DE  2E94               	line	150
  2589                           ;main.c: 150:             case 131:
  2590                           	
  2591                           l211:	
  2592  04DF                     	line	151
  2593                           ;main.c: 151:                     if( sensor.D1 == 1)
  2594                           	btfss	(main@sensor),7
  2595  04DF  1FCF               	goto	u1101
  2596  04E0  2CE2               	goto	u1100
  2597  04E1  2CE3               u1101:
  2598  04E2                     	goto	l1978
  2599  04E2  2E94               u1100:
  2600  04E3                     	line	152
  2601                           	
  2602                           l1920:	
  2603  04E3                     ;main.c: 152:                         estado = 10;
  2604                           	movlw	0Ah
  2605  04E3  300A               	movwf	(main@estado)
  2606  04E4  00D1               	movlw	0
  2607  04E5  3000               	movwf	((main@estado))+1
  2608  04E6  00D2               	goto	l1978
  2609  04E7  2E94               	
  2610                           l212:	
  2611  04E8                     	line	153
  2612                           ;main.c: 153:                     break;
  2613                           	goto	l1978
  2614  04E8  2E94               	line	154
  2615                           ;main.c: 154:             case 140:
  2616                           	
  2617                           l213:	
  2618  04E9                     	line	155
  2619                           	
  2620                           l1922:	
  2621  04E9                     ;main.c: 155:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2622                           	opt asmopt_push
  2623                           opt asmopt_off
  2624                           movlw  6
  2625  04E9  3006               	bcf	status, 5	;RP0=0, select bank0
  2626  04EA  1283               	bcf	status, 6	;RP1=0, select bank0
  2627  04EB  1303               movwf	((??_main+0)+0+2),f
  2628  04EC  00C9               movlw	19
  2629  04ED  3013               movwf	((??_main+0)+0+1),f
  2630  04EE  00C8               	movlw	173
  2631  04EF  30AD               movwf	((??_main+0)+0),f
  2632  04F0  00C7               	u1217:
  2633  04F1                     decfsz	((??_main+0)+0),f
  2634  04F1  0BC7               	goto	u1217
  2635  04F2  2CF1               	decfsz	((??_main+0)+0+1),f
  2636  04F3  0BC8               	goto	u1217
  2637  04F4  2CF1               	decfsz	((??_main+0)+0+2),f
  2638  04F5  0BC9               	goto	u1217
  2639  04F6  2CF1               opt asmopt_pop
  2640                           
  2641                           	line	156
  2642                           ;main.c: 156:                     estado = 141;
  2643                           	movlw	08Dh
  2644  04F7  308D               	bcf	status, 5	;RP0=0, select bank0
  2645  04F8  1283               	bcf	status, 6	;RP1=0, select bank0
  2646  04F9  1303               	movwf	(main@estado)
  2647  04FA  00D1               	movlw	0
  2648  04FB  3000               	movwf	((main@estado))+1
  2649  04FC  00D2               	line	157
  2650                           ;main.c: 157:                     break;
  2651                           	goto	l1978
  2652  04FD  2E94               	line	158
  2653                           ;main.c: 158:             case 141:
  2654                           	
  2655                           l214:	
  2656  04FE                     	line	159
  2657                           	
  2658                           l1924:	
  2659  04FE                     ;main.c: 159:                     estado = 10;
  2660                           	movlw	0Ah
  2661  04FE  300A               	movwf	(main@estado)
  2662  04FF  00D1               	movlw	0
  2663  0500  3000               	movwf	((main@estado))+1
  2664  0501  00D2               	line	160
  2665                           ;main.c: 160:                     break;
  2666                           	goto	l1978
  2667  0502  2E94               	line	161
  2668                           ;main.c: 161:             case 150:
  2669                           	
  2670                           l215:	
  2671  0503                     	line	162
  2672                           	
  2673                           l1926:	
  2674  0503                     ;main.c: 162:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2675                           	opt asmopt_push
  2676                           opt asmopt_off
  2677                           movlw  11
  2678  0503  300B               	bcf	status, 5	;RP0=0, select bank0
  2679  0504  1283               	bcf	status, 6	;RP1=0, select bank0
  2680  0505  1303               movwf	((??_main+0)+0+2),f
  2681  0506  00C9               movlw	38
  2682  0507  3026               movwf	((??_main+0)+0+1),f
  2683  0508  00C8               	movlw	93
  2684  0509  305D               movwf	((??_main+0)+0),f
  2685  050A  00C7               	u1227:
  2686  050B                     decfsz	((??_main+0)+0),f
  2687  050B  0BC7               	goto	u1227
  2688  050C  2D0B               	decfsz	((??_main+0)+0+1),f
  2689  050D  0BC8               	goto	u1227
  2690  050E  2D0B               	decfsz	((??_main+0)+0+2),f
  2691  050F  0BC9               	goto	u1227
  2692  0510  2D0B               opt asmopt_pop
  2693                           
  2694                           	line	163
  2695                           ;main.c: 163:                     estado = 151;
  2696                           	movlw	097h
  2697  0511  3097               	bcf	status, 5	;RP0=0, select bank0
  2698  0512  1283               	bcf	status, 6	;RP1=0, select bank0
  2699  0513  1303               	movwf	(main@estado)
  2700  0514  00D1               	movlw	0
  2701  0515  3000               	movwf	((main@estado))+1
  2702  0516  00D2               	line	164
  2703                           ;main.c: 164:                     break;
  2704                           	goto	l1978
  2705  0517  2E94               	line	165
  2706                           ;main.c: 165:             case 151:
  2707                           	
  2708                           l216:	
  2709  0518                     	line	166
  2710                           	
  2711                           l1928:	
  2712  0518                     ;main.c: 166:                     estado = 10;
  2713                           	movlw	0Ah
  2714  0518  300A               	movwf	(main@estado)
  2715  0519  00D1               	movlw	0
  2716  051A  3000               	movwf	((main@estado))+1
  2717  051B  00D2               	line	167
  2718                           ;main.c: 167:                     break;
  2719                           	goto	l1978
  2720  051C  2E94               	line	168
  2721                           ;main.c: 168:             case 160:
  2722                           	
  2723                           l217:	
  2724  051D                     	line	169
  2725                           	
  2726                           l1930:	
  2727  051D                     ;main.c: 169:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  2728                           	opt asmopt_push
  2729                           opt asmopt_off
  2730                           movlw  16
  2731  051D  3010               	bcf	status, 5	;RP0=0, select bank0
  2732  051E  1283               	bcf	status, 6	;RP1=0, select bank0
  2733  051F  1303               movwf	((??_main+0)+0+2),f
  2734  0520  00C9               movlw	57
  2735  0521  3039               movwf	((??_main+0)+0+1),f
  2736  0522  00C8               	movlw	13
  2737  0523  300D               movwf	((??_main+0)+0),f
  2738  0524  00C7               	u1237:
  2739  0525                     decfsz	((??_main+0)+0),f
  2740  0525  0BC7               	goto	u1237
  2741  0526  2D25               	decfsz	((??_main+0)+0+1),f
  2742  0527  0BC8               	goto	u1237
  2743  0528  2D25               	decfsz	((??_main+0)+0+2),f
  2744  0529  0BC9               	goto	u1237
  2745  052A  2D25               opt asmopt_pop
  2746                           
  2747                           	line	170
  2748                           ;main.c: 170:                     estado = 161;
  2749                           	movlw	0A1h
  2750  052B  30A1               	bcf	status, 5	;RP0=0, select bank0
  2751  052C  1283               	bcf	status, 6	;RP1=0, select bank0
  2752  052D  1303               	movwf	(main@estado)
  2753  052E  00D1               	movlw	0
  2754  052F  3000               	movwf	((main@estado))+1
  2755  0530  00D2               	line	171
  2756                           ;main.c: 171:                     break;
  2757                           	goto	l1978
  2758  0531  2E94               	line	172
  2759                           ;main.c: 172:             case 161:
  2760                           	
  2761                           l218:	
  2762  0532                     	line	173
  2763                           	
  2764                           l1932:	
  2765  0532                     ;main.c: 173:                     estado = 10;
  2766                           	movlw	0Ah
  2767  0532  300A               	movwf	(main@estado)
  2768  0533  00D1               	movlw	0
  2769  0534  3000               	movwf	((main@estado))+1
  2770  0535  00D2               	line	174
  2771                           ;main.c: 174:                     break;
  2772                           	goto	l1978
  2773  0536  2E94               	line	175
  2774                           ;main.c: 175:             case 170:
  2775                           	
  2776                           l219:	
  2777  0537                     	line	176
  2778                           	
  2779                           l1934:	
  2780  0537                     ;main.c: 176:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  2781                           	opt asmopt_push
  2782                           opt asmopt_off
  2783                           movlw  21
  2784  0537  3015               	bcf	status, 5	;RP0=0, select bank0
  2785  0538  1283               	bcf	status, 6	;RP1=0, select bank0
  2786  0539  1303               movwf	((??_main+0)+0+2),f
  2787  053A  00C9               movlw	75
  2788  053B  304B               movwf	((??_main+0)+0+1),f
  2789  053C  00C8               	movlw	189
  2790  053D  30BD               movwf	((??_main+0)+0),f
  2791  053E  00C7               	u1247:
  2792  053F                     decfsz	((??_main+0)+0),f
  2793  053F  0BC7               	goto	u1247
  2794  0540  2D3F               	decfsz	((??_main+0)+0+1),f
  2795  0541  0BC8               	goto	u1247
  2796  0542  2D3F               	decfsz	((??_main+0)+0+2),f
  2797  0543  0BC9               	goto	u1247
  2798  0544  2D3F               	nop2
  2799  0545  2D46               opt asmopt_pop
  2800                           
  2801                           	line	177
  2802                           ;main.c: 177:                     estado = 171;
  2803                           	movlw	0ABh
  2804  0546  30AB               	bcf	status, 5	;RP0=0, select bank0
  2805  0547  1283               	bcf	status, 6	;RP1=0, select bank0
  2806  0548  1303               	movwf	(main@estado)
  2807  0549  00D1               	movlw	0
  2808  054A  3000               	movwf	((main@estado))+1
  2809  054B  00D2               	line	178
  2810                           ;main.c: 178:                     break;
  2811                           	goto	l1978
  2812  054C  2E94               	line	179
  2813                           ;main.c: 179:             case 171:
  2814                           	
  2815                           l220:	
  2816  054D                     	line	180
  2817                           	
  2818                           l1936:	
  2819  054D                     ;main.c: 180:                     estado = 10;
  2820                           	movlw	0Ah
  2821  054D  300A               	movwf	(main@estado)
  2822  054E  00D1               	movlw	0
  2823  054F  3000               	movwf	((main@estado))+1
  2824  0550  00D2               	line	181
  2825                           ;main.c: 181:                     break;
  2826                           	goto	l1978
  2827  0551  2E94               	line	182
  2828                           ;main.c: 182:             case 180:
  2829                           	
  2830                           l221:	
  2831  0552                     	line	183
  2832                           	
  2833                           l1938:	
  2834  0552                     ;main.c: 183:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
  2835                           	opt asmopt_push
  2836                           opt asmopt_off
  2837                           movlw  26
  2838  0552  301A               	bcf	status, 5	;RP0=0, select bank0
  2839  0553  1283               	bcf	status, 6	;RP1=0, select bank0
  2840  0554  1303               movwf	((??_main+0)+0+2),f
  2841  0555  00C9               movlw	94
  2842  0556  305E               movwf	((??_main+0)+0+1),f
  2843  0557  00C8               	movlw	109
  2844  0558  306D               movwf	((??_main+0)+0),f
  2845  0559  00C7               	u1257:
  2846  055A                     decfsz	((??_main+0)+0),f
  2847  055A  0BC7               	goto	u1257
  2848  055B  2D5A               	decfsz	((??_main+0)+0+1),f
  2849  055C  0BC8               	goto	u1257
  2850  055D  2D5A               	decfsz	((??_main+0)+0+2),f
  2851  055E  0BC9               	goto	u1257
  2852  055F  2D5A               	nop2
  2853  0560  2D61               opt asmopt_pop
  2854                           
  2855                           	line	184
  2856                           ;main.c: 184:                     estado = 181;
  2857                           	movlw	0B5h
  2858  0561  30B5               	bcf	status, 5	;RP0=0, select bank0
  2859  0562  1283               	bcf	status, 6	;RP1=0, select bank0
  2860  0563  1303               	movwf	(main@estado)
  2861  0564  00D1               	movlw	0
  2862  0565  3000               	movwf	((main@estado))+1
  2863  0566  00D2               	line	185
  2864                           ;main.c: 185:                     break;
  2865                           	goto	l1978
  2866  0567  2E94               	line	186
  2867                           ;main.c: 186:             case 181:
  2868                           	
  2869                           l222:	
  2870  0568                     	line	187
  2871                           	
  2872                           l1940:	
  2873  0568                     ;main.c: 187:                     estado = 10;
  2874                           	movlw	0Ah
  2875  0568  300A               	movwf	(main@estado)
  2876  0569  00D1               	movlw	0
  2877  056A  3000               	movwf	((main@estado))+1
  2878  056B  00D2               	line	188
  2879                           ;main.c: 188:                     break;
  2880                           	goto	l1978
  2881  056C  2E94               	line	189
  2882                           ;main.c: 189:             case 190:
  2883                           	
  2884                           l223:	
  2885  056D                     	line	190
  2886                           	
  2887                           l1942:	
  2888  056D                     ;main.c: 190:                     _delay((unsigned long)((6000)*(4000000/4000.0)));
  2889                           	opt asmopt_push
  2890                           opt asmopt_off
  2891                           movlw  31
  2892  056D  301F               	bcf	status, 5	;RP0=0, select bank0
  2893  056E  1283               	bcf	status, 6	;RP1=0, select bank0
  2894  056F  1303               movwf	((??_main+0)+0+2),f
  2895  0570  00C9               movlw	113
  2896  0571  3071               movwf	((??_main+0)+0+1),f
  2897  0572  00C8               	movlw	29
  2898  0573  301D               movwf	((??_main+0)+0),f
  2899  0574  00C7               	u1267:
  2900  0575                     decfsz	((??_main+0)+0),f
  2901  0575  0BC7               	goto	u1267
  2902  0576  2D75               	decfsz	((??_main+0)+0+1),f
  2903  0577  0BC8               	goto	u1267
  2904  0578  2D75               	decfsz	((??_main+0)+0+2),f
  2905  0579  0BC9               	goto	u1267
  2906  057A  2D75               	nop2
  2907  057B  2D7C               opt asmopt_pop
  2908                           
  2909                           	line	191
  2910                           ;main.c: 191:                     estado = 191;
  2911                           	movlw	0BFh
  2912  057C  30BF               	bcf	status, 5	;RP0=0, select bank0
  2913  057D  1283               	bcf	status, 6	;RP1=0, select bank0
  2914  057E  1303               	movwf	(main@estado)
  2915  057F  00D1               	movlw	0
  2916  0580  3000               	movwf	((main@estado))+1
  2917  0581  00D2               	line	192
  2918                           ;main.c: 192:                     break;
  2919                           	goto	l1978
  2920  0582  2E94               	line	193
  2921                           ;main.c: 193:             case 191:
  2922                           	
  2923                           l224:	
  2924  0583                     	line	194
  2925                           	
  2926                           l1944:	
  2927  0583                     ;main.c: 194:                     estado = 10;
  2928                           	movlw	0Ah
  2929  0583  300A               	movwf	(main@estado)
  2930  0584  00D1               	movlw	0
  2931  0585  3000               	movwf	((main@estado))+1
  2932  0586  00D2               	line	195
  2933                           ;main.c: 195:                     break;
  2934                           	goto	l1978
  2935  0587  2E94               	line	196
  2936                           ;main.c: 196:             case 200:
  2937                           	
  2938                           l225:	
  2939  0588                     	line	197
  2940                           	
  2941                           l1946:	
  2942  0588                     ;main.c: 197:                     _delay((unsigned long)((7000)*(4000000/4000.0)));
  2943                           	opt asmopt_push
  2944                           opt asmopt_off
  2945                           movlw  36
  2946  0588  3024               	bcf	status, 5	;RP0=0, select bank0
  2947  0589  1283               	bcf	status, 6	;RP1=0, select bank0
  2948  058A  1303               movwf	((??_main+0)+0+2),f
  2949  058B  00C9               movlw	131
  2950  058C  3083               movwf	((??_main+0)+0+1),f
  2951  058D  00C8               	movlw	206
  2952  058E  30CE               movwf	((??_main+0)+0),f
  2953  058F  00C7               	u1277:
  2954  0590                     decfsz	((??_main+0)+0),f
  2955  0590  0BC7               	goto	u1277
  2956  0591  2D90               	decfsz	((??_main+0)+0+1),f
  2957  0592  0BC8               	goto	u1277
  2958  0593  2D90               	decfsz	((??_main+0)+0+2),f
  2959  0594  0BC9               	goto	u1277
  2960  0595  2D90               	nop
  2961  0596  0000               opt asmopt_pop
  2962                           
  2963                           	line	198
  2964                           ;main.c: 198:                     estado = 201;
  2965                           	movlw	0C9h
  2966  0597  30C9               	bcf	status, 5	;RP0=0, select bank0
  2967  0598  1283               	bcf	status, 6	;RP1=0, select bank0
  2968  0599  1303               	movwf	(main@estado)
  2969  059A  00D1               	movlw	0
  2970  059B  3000               	movwf	((main@estado))+1
  2971  059C  00D2               	line	199
  2972                           ;main.c: 199:                     break;
  2973                           	goto	l1978
  2974  059D  2E94               	line	200
  2975                           ;main.c: 200:             case 201:
  2976                           	
  2977                           l226:	
  2978  059E                     	line	201
  2979                           	
  2980                           l1948:	
  2981  059E                     ;main.c: 201:                     estado = 10;
  2982                           	movlw	0Ah
  2983  059E  300A               	movwf	(main@estado)
  2984  059F  00D1               	movlw	0
  2985  05A0  3000               	movwf	((main@estado))+1
  2986  05A1  00D2               	line	202
  2987                           ;main.c: 202:                     break;
  2988                           	goto	l1978
  2989  05A2  2E94               	line	203
  2990                           ;main.c: 203:             case 210:
  2991                           	
  2992                           l227:	
  2993  05A3                     	line	204
  2994                           	
  2995                           l1950:	
  2996  05A3                     ;main.c: 204:                     _delay((unsigned long)((8000)*(4000000/4000.0)));
  2997                           	opt asmopt_push
  2998                           opt asmopt_off
  2999                           movlw  41
  3000  05A3  3029               	bcf	status, 5	;RP0=0, select bank0
  3001  05A4  1283               	bcf	status, 6	;RP1=0, select bank0
  3002  05A5  1303               movwf	((??_main+0)+0+2),f
  3003  05A6  00C9               movlw	150
  3004  05A7  3096               movwf	((??_main+0)+0+1),f
  3005  05A8  00C8               	movlw	126
  3006  05A9  307E               movwf	((??_main+0)+0),f
  3007  05AA  00C7               	u1287:
  3008  05AB                     decfsz	((??_main+0)+0),f
  3009  05AB  0BC7               	goto	u1287
  3010  05AC  2DAB               	decfsz	((??_main+0)+0+1),f
  3011  05AD  0BC8               	goto	u1287
  3012  05AE  2DAB               	decfsz	((??_main+0)+0+2),f
  3013  05AF  0BC9               	goto	u1287
  3014  05B0  2DAB               	nop
  3015  05B1  0000               opt asmopt_pop
  3016                           
  3017                           	line	205
  3018                           ;main.c: 205:                     estado = 211;
  3019                           	movlw	0D3h
  3020  05B2  30D3               	bcf	status, 5	;RP0=0, select bank0
  3021  05B3  1283               	bcf	status, 6	;RP1=0, select bank0
  3022  05B4  1303               	movwf	(main@estado)
  3023  05B5  00D1               	movlw	0
  3024  05B6  3000               	movwf	((main@estado))+1
  3025  05B7  00D2               	line	206
  3026                           ;main.c: 206:                     break;
  3027                           	goto	l1978
  3028  05B8  2E94               	line	207
  3029                           ;main.c: 207:             case 211:
  3030                           	
  3031                           l228:	
  3032  05B9                     	line	208
  3033                           	
  3034                           l1952:	
  3035  05B9                     ;main.c: 208:                     estado = 10;
  3036                           	movlw	0Ah
  3037  05B9  300A               	movwf	(main@estado)
  3038  05BA  00D1               	movlw	0
  3039  05BB  3000               	movwf	((main@estado))+1
  3040  05BC  00D2               	line	209
  3041                           ;main.c: 209:                     break;
  3042                           	goto	l1978
  3043  05BD  2E94               	line	210
  3044                           ;main.c: 210:             case 220:
  3045                           	
  3046                           l229:	
  3047  05BE                     	line	211
  3048                           	
  3049                           l1954:	
  3050  05BE                     ;main.c: 211:                     _delay((unsigned long)((9000)*(4000000/4000.0)));
  3051                           	opt asmopt_push
  3052                           opt asmopt_off
  3053                           movlw  46
  3054  05BE  302E               	bcf	status, 5	;RP0=0, select bank0
  3055  05BF  1283               	bcf	status, 6	;RP1=0, select bank0
  3056  05C0  1303               movwf	((??_main+0)+0+2),f
  3057  05C1  00C9               movlw	169
  3058  05C2  30A9               movwf	((??_main+0)+0+1),f
  3059  05C3  00C8               	movlw	46
  3060  05C4  302E               movwf	((??_main+0)+0),f
  3061  05C5  00C7               	u1297:
  3062  05C6                     decfsz	((??_main+0)+0),f
  3063  05C6  0BC7               	goto	u1297
  3064  05C7  2DC6               	decfsz	((??_main+0)+0+1),f
  3065  05C8  0BC8               	goto	u1297
  3066  05C9  2DC6               	decfsz	((??_main+0)+0+2),f
  3067  05CA  0BC9               	goto	u1297
  3068  05CB  2DC6               	nop
  3069  05CC  0000               opt asmopt_pop
  3070                           
  3071                           	line	212
  3072                           ;main.c: 212:                     estado = 221;
  3073                           	movlw	0DDh
  3074  05CD  30DD               	bcf	status, 5	;RP0=0, select bank0
  3075  05CE  1283               	bcf	status, 6	;RP1=0, select bank0
  3076  05CF  1303               	movwf	(main@estado)
  3077  05D0  00D1               	movlw	0
  3078  05D1  3000               	movwf	((main@estado))+1
  3079  05D2  00D2               	line	213
  3080                           ;main.c: 213:                     break;
  3081                           	goto	l1978
  3082  05D3  2E94               	line	214
  3083                           ;main.c: 214:             case 221:
  3084                           	
  3085                           l230:	
  3086  05D4                     	line	215
  3087                           	
  3088                           l1956:	
  3089  05D4                     ;main.c: 215:                     estado = 10;
  3090                           	movlw	0Ah
  3091  05D4  300A               	movwf	(main@estado)
  3092  05D5  00D1               	movlw	0
  3093  05D6  3000               	movwf	((main@estado))+1
  3094  05D7  00D2               	line	216
  3095                           ;main.c: 216:                     break;
  3096                           	goto	l1978
  3097  05D8  2E94               	line	218
  3098                           ;main.c: 218:             case 230:
  3099                           	
  3100                           l231:	
  3101  05D9                     	line	219
  3102                           ;main.c: 219:                     atuador.A = 0;
  3103                           	bcf	(main@atuador),0
  3104  05D9  104E               	line	220
  3105                           	
  3106                           l1958:	
  3107  05DA                     ;main.c: 220:                     estado = 231;
  3108                           	movlw	0E7h
  3109  05DA  30E7               	movwf	(main@estado)
  3110  05DB  00D1               	movlw	0
  3111  05DC  3000               	movwf	((main@estado))+1
  3112  05DD  00D2               	line	221
  3113                           ;main.c: 221:                     break;
  3114                           	goto	l1978
  3115  05DE  2E94               	line	222
  3116                           ;main.c: 222:             case 231:
  3117                           	
  3118                           l232:	
  3119  05DF                     	line	223
  3120                           ;main.c: 223:                     if( sensor.A0 == 1)
  3121                           	btfss	(main@sensor),0
  3122  05DF  1C4F               	goto	u1111
  3123  05E0  2DE2               	goto	u1110
  3124  05E1  2DE3               u1111:
  3125  05E2                     	goto	l1978
  3126  05E2  2E94               u1110:
  3127  05E3                     	line	224
  3128                           	
  3129                           l1960:	
  3130  05E3                     ;main.c: 224:                         estado = 10;
  3131                           	movlw	0Ah
  3132  05E3  300A               	movwf	(main@estado)
  3133  05E4  00D1               	movlw	0
  3134  05E5  3000               	movwf	((main@estado))+1
  3135  05E6  00D2               	goto	l1978
  3136  05E7  2E94               	
  3137                           l233:	
  3138  05E8                     	line	225
  3139                           ;main.c: 225:                     break;
  3140                           	goto	l1978
  3141  05E8  2E94               	line	226
  3142                           ;main.c: 226:             case 240:
  3143                           	
  3144                           l234:	
  3145  05E9                     	line	227
  3146                           ;main.c: 227:                     atuador.B = 0;
  3147                           	bcf	(main@atuador),1
  3148  05E9  10CE               	line	228
  3149                           	
  3150                           l1962:	
  3151  05EA                     ;main.c: 228:                     estado = 241;
  3152                           	movlw	0F1h
  3153  05EA  30F1               	movwf	(main@estado)
  3154  05EB  00D1               	movlw	0
  3155  05EC  3000               	movwf	((main@estado))+1
  3156  05ED  00D2               	line	229
  3157                           ;main.c: 229:                     break;
  3158                           	goto	l1978
  3159  05EE  2E94               	line	230
  3160                           ;main.c: 230:             case 241:
  3161                           	
  3162                           l235:	
  3163  05EF                     	line	231
  3164                           ;main.c: 231:                     if( sensor.B0 == 1)
  3165                           	btfss	(main@sensor),2
  3166  05EF  1D4F               	goto	u1121
  3167  05F0  2DF2               	goto	u1120
  3168  05F1  2DF3               u1121:
  3169  05F2                     	goto	l1978
  3170  05F2  2E94               u1120:
  3171  05F3                     	line	232
  3172                           	
  3173                           l1964:	
  3174  05F3                     ;main.c: 232:                         estado = 10;
  3175                           	movlw	0Ah
  3176  05F3  300A               	movwf	(main@estado)
  3177  05F4  00D1               	movlw	0
  3178  05F5  3000               	movwf	((main@estado))+1
  3179  05F6  00D2               	goto	l1978
  3180  05F7  2E94               	
  3181                           l236:	
  3182  05F8                     	line	233
  3183                           ;main.c: 233:                     break;
  3184                           	goto	l1978
  3185  05F8  2E94               	line	234
  3186                           ;main.c: 234:             case 250:
  3187                           	
  3188                           l237:	
  3189  05F9                     	line	235
  3190                           ;main.c: 235:                     atuador.C = 0;
  3191                           	bcf	(main@atuador),2
  3192  05F9  114E               	line	236
  3193                           	
  3194                           l1966:	
  3195  05FA                     ;main.c: 236:                     estado = 251;
  3196                           	movlw	0FBh
  3197  05FA  30FB               	movwf	(main@estado)
  3198  05FB  00D1               	movlw	0
  3199  05FC  3000               	movwf	((main@estado))+1
  3200  05FD  00D2               	line	237
  3201                           ;main.c: 237:                     break;
  3202                           	goto	l1978
  3203  05FE  2E94               	line	238
  3204                           ;main.c: 238:             case 251:
  3205                           	
  3206                           l238:	
  3207  05FF                     	line	239
  3208                           ;main.c: 239:                     if( sensor.C0 == 1)
  3209                           	btfss	(main@sensor),4
  3210  05FF  1E4F               	goto	u1131
  3211  0600  2E02               	goto	u1130
  3212  0601  2E03               u1131:
  3213  0602                     	goto	l1978
  3214  0602  2E94               u1130:
  3215  0603                     	line	240
  3216                           	
  3217                           l1968:	
  3218  0603                     ;main.c: 240:                         estado = 10;
  3219                           	movlw	0Ah
  3220  0603  300A               	movwf	(main@estado)
  3221  0604  00D1               	movlw	0
  3222  0605  3000               	movwf	((main@estado))+1
  3223  0606  00D2               	goto	l1978
  3224  0607  2E94               	
  3225                           l239:	
  3226  0608                     	line	241
  3227                           ;main.c: 241:                     break;
  3228                           	goto	l1978
  3229  0608  2E94               	line	242
  3230                           ;main.c: 242:             case 260:
  3231                           	
  3232                           l240:	
  3233  0609                     	line	243
  3234                           ;main.c: 243:                     atuador.D = 0;
  3235                           	bcf	(main@atuador),3
  3236  0609  11CE               	line	244
  3237                           	
  3238                           l1970:	
  3239  060A                     ;main.c: 244:                     estado = 261;
  3240                           	movlw	05h
  3241  060A  3005               	movwf	(main@estado)
  3242  060B  00D1               	movlw	01h
  3243  060C  3001               	movwf	((main@estado))+1
  3244  060D  00D2               	line	245
  3245                           ;main.c: 245:                     break;
  3246                           	goto	l1978
  3247  060E  2E94               	line	246
  3248                           ;main.c: 246:             case 261:
  3249                           	
  3250                           l241:	
  3251  060F                     	line	247
  3252                           ;main.c: 247:                     if( sensor.D0 == 1)
  3253                           	btfss	(main@sensor),6
  3254  060F  1F4F               	goto	u1141
  3255  0610  2E12               	goto	u1140
  3256  0611  2E13               u1141:
  3257  0612                     	goto	l1978
  3258  0612  2E94               u1140:
  3259  0613                     	line	248
  3260                           	
  3261                           l1972:	
  3262  0613                     ;main.c: 248:                         estado = 10;
  3263                           	movlw	0Ah
  3264  0613  300A               	movwf	(main@estado)
  3265  0614  00D1               	movlw	0
  3266  0615  3000               	movwf	((main@estado))+1
  3267  0616  00D2               	goto	l1978
  3268  0617  2E94               	
  3269                           l242:	
  3270  0618                     	line	249
  3271                           ;main.c: 249:                     break;
  3272                           	goto	l1978
  3273  0618  2E94               	line	251
  3274                           	
  3275                           l1974:	
  3276  0619                     ;main.c: 251:         }
  3277                           	goto	l1978
  3278  0619  2E94               	
  3279                           l164:	
  3280  061A                     	
  3281                           l1976:	
  3282  061A                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  3283                           ; Switch size 1, requested type "space"
  3284                           ; Number of cases is 2, Range of values is 0 to 1
  3285                           ; switch strategies available:
  3286                           ; Name         Instructions Cycles
  3287                           ; simple_byte            7     4 (average)
  3288                           ; direct_byte           14     8 (fixed)
  3289                           ; jumptable            260     6 (fixed)
  3290                           ;	Chosen strategy is simple_byte
  3291                           
  3292                           	bcf	status, 5	;RP0=0, select bank0
  3293  061A  1283               	bcf	status, 6	;RP1=0, select bank0
  3294  061B  1303               	movf (main@estado+1),w
  3295  061C  0852               	opt asmopt_push
  3296                           	opt asmopt_off
  3297                           	xorlw	0^0	; case 0
  3298  061D  3A00               	skipnz
  3299  061E  1903               	goto	l2192
  3300  061F  2E24               	xorlw	1^0	; case 1
  3301  0620  3A01               	skipnz
  3302  0621  1903               	goto	l2194
  3303  0622  2E8C               	goto	l1978
  3304  0623  2E94               	opt asmopt_pop
  3305                           	
  3306                           l2192:	
  3307  0624                     ; Switch size 1, requested type "space"
  3308                           ; Number of cases is 34, Range of values is 0 to 251
  3309                           ; switch strategies available:
  3310                           ; Name         Instructions Cycles
  3311                           ; simple_byte          103    52 (average)
  3312                           ; jumptable            260     6 (fixed)
  3313                           ;	Chosen strategy is simple_byte
  3314                           
  3315                           	movf (main@estado),w
  3316  0624  0851               	opt asmopt_push
  3317                           	opt asmopt_off
  3318                           	xorlw	0^0	; case 0
  3319  0625  3A00               	skipnz
  3320  0626  1903               	goto	l1978
  3321  0627  2E94               	xorlw	10^0	; case 10
  3322  0628  3A0A               	skipnz
  3323  0629  1903               	goto	l1836
  3324  062A  2BD3               	xorlw	100^10	; case 100
  3325  062B  3A6E               	skipnz
  3326  062C  1903               	goto	l201
  3327  062D  2CA9               	xorlw	101^100	; case 101
  3328  062E  3A01               	skipnz
  3329  062F  1903               	goto	l202
  3330  0630  2CAF               	xorlw	110^101	; case 110
  3331  0631  3A0B               	skipnz
  3332  0632  1903               	goto	l204
  3333  0633  2CB9               	xorlw	111^110	; case 111
  3334  0634  3A01               	skipnz
  3335  0635  1903               	goto	l205
  3336  0636  2CBF               	xorlw	120^111	; case 120
  3337  0637  3A17               	skipnz
  3338  0638  1903               	goto	l207
  3339  0639  2CC9               	xorlw	121^120	; case 121
  3340  063A  3A01               	skipnz
  3341  063B  1903               	goto	l208
  3342  063C  2CCF               	xorlw	130^121	; case 130
  3343  063D  3AFB               	skipnz
  3344  063E  1903               	goto	l210
  3345  063F  2CD9               	xorlw	131^130	; case 131
  3346  0640  3A01               	skipnz
  3347  0641  1903               	goto	l211
  3348  0642  2CDF               	xorlw	140^131	; case 140
  3349  0643  3A0F               	skipnz
  3350  0644  1903               	goto	l1922
  3351  0645  2CE9               	xorlw	141^140	; case 141
  3352  0646  3A01               	skipnz
  3353  0647  1903               	goto	l1924
  3354  0648  2CFE               	xorlw	150^141	; case 150
  3355  0649  3A1B               	skipnz
  3356  064A  1903               	goto	l1926
  3357  064B  2D03               	xorlw	151^150	; case 151
  3358  064C  3A01               	skipnz
  3359  064D  1903               	goto	l1928
  3360  064E  2D18               	xorlw	160^151	; case 160
  3361  064F  3A37               	skipnz
  3362  0650  1903               	goto	l1930
  3363  0651  2D1D               	xorlw	161^160	; case 161
  3364  0652  3A01               	skipnz
  3365  0653  1903               	goto	l1932
  3366  0654  2D32               	xorlw	170^161	; case 170
  3367  0655  3A0B               	skipnz
  3368  0656  1903               	goto	l1934
  3369  0657  2D37               	xorlw	171^170	; case 171
  3370  0658  3A01               	skipnz
  3371  0659  1903               	goto	l1936
  3372  065A  2D4D               	xorlw	180^171	; case 180
  3373  065B  3A1F               	skipnz
  3374  065C  1903               	goto	l1938
  3375  065D  2D52               	xorlw	181^180	; case 181
  3376  065E  3A01               	skipnz
  3377  065F  1903               	goto	l1940
  3378  0660  2D68               	xorlw	190^181	; case 190
  3379  0661  3A0B               	skipnz
  3380  0662  1903               	goto	l1942
  3381  0663  2D6D               	xorlw	191^190	; case 191
  3382  0664  3A01               	skipnz
  3383  0665  1903               	goto	l1944
  3384  0666  2D83               	xorlw	200^191	; case 200
  3385  0667  3A77               	skipnz
  3386  0668  1903               	goto	l1946
  3387  0669  2D88               	xorlw	201^200	; case 201
  3388  066A  3A01               	skipnz
  3389  066B  1903               	goto	l1948
  3390  066C  2D9E               	xorlw	210^201	; case 210
  3391  066D  3A1B               	skipnz
  3392  066E  1903               	goto	l1950
  3393  066F  2DA3               	xorlw	211^210	; case 211
  3394  0670  3A01               	skipnz
  3395  0671  1903               	goto	l1952
  3396  0672  2DB9               	xorlw	220^211	; case 220
  3397  0673  3A0F               	skipnz
  3398  0674  1903               	goto	l1954
  3399  0675  2DBE               	xorlw	221^220	; case 221
  3400  0676  3A01               	skipnz
  3401  0677  1903               	goto	l1956
  3402  0678  2DD4               	xorlw	230^221	; case 230
  3403  0679  3A3B               	skipnz
  3404  067A  1903               	goto	l231
  3405  067B  2DD9               	xorlw	231^230	; case 231
  3406  067C  3A01               	skipnz
  3407  067D  1903               	goto	l232
  3408  067E  2DDF               	xorlw	240^231	; case 240
  3409  067F  3A17               	skipnz
  3410  0680  1903               	goto	l234
  3411  0681  2DE9               	xorlw	241^240	; case 241
  3412  0682  3A01               	skipnz
  3413  0683  1903               	goto	l235
  3414  0684  2DEF               	xorlw	250^241	; case 250
  3415  0685  3A0B               	skipnz
  3416  0686  1903               	goto	l237
  3417  0687  2DF9               	xorlw	251^250	; case 251
  3418  0688  3A01               	skipnz
  3419  0689  1903               	goto	l238
  3420  068A  2DFF               	goto	l1978
  3421  068B  2E94               	opt asmopt_pop
  3422                           	
  3423                           l2194:	
  3424  068C                     ; Switch size 1, requested type "space"
  3425                           ; Number of cases is 2, Range of values is 4 to 5
  3426                           ; switch strategies available:
  3427                           ; Name         Instructions Cycles
  3428                           ; simple_byte            7     4 (average)
  3429                           ; direct_byte           17    11 (fixed)
  3430                           ; jumptable            263     9 (fixed)
  3431                           ;	Chosen strategy is simple_byte
  3432                           
  3433                           	movf (main@estado),w
  3434  068C  0851               	opt asmopt_push
  3435                           	opt asmopt_off
  3436                           	xorlw	4^0	; case 4
  3437  068D  3A04               	skipnz
  3438  068E  1903               	goto	l240
  3439  068F  2E09               	xorlw	5^4	; case 5
  3440  0690  3A01               	skipnz
  3441  0691  1903               	goto	l241
  3442  0692  2E0F               	goto	l1978
  3443  0693  2E94               	opt asmopt_pop
  3444                           
  3445                           	
  3446                           l166:	
  3447  0694                     	line	252
  3448                           	
  3449                           l1978:	
  3450  0694                     ;main.c: 252:         if( currentKey() && !previousKey() )
  3451                           	fcall	_currentKey
  3452  0694  120A  118A  20D4  120A  118A  	xorlw	0
  3453  0699  3A00               	skipnz
  3454  069A  1903               	goto	u1151
  3455  069B  2E9D               	goto	u1150
  3456  069C  2E9E               u1151:
  3457  069D                     	goto	l2046
  3458  069D  2FDB               u1150:
  3459  069E                     	
  3460                           l1980:	
  3461  069E                     	fcall	_previousKey
  3462  069E  120A  118A  20D9  120A  118A  	xorlw	0
  3463  06A3  3A00               	skipz
  3464  06A4  1D03               	goto	u1161
  3465  06A5  2EA7               	goto	u1160
  3466  06A6  2EA8               u1161:
  3467  06A7                     	goto	l2046
  3468  06A7  2FDB               u1160:
  3469  06A8                     	line	254
  3470                           	
  3471                           l1982:	
  3472  06A8                     ;main.c: 253:         {;main.c: 254:             tecla = currentKey();
  3473                           	fcall	_currentKey
  3474  06A8  120A  118A  20D4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3475  06AD  1283               	bcf	status, 6	;RP1=0, select bank0
  3476  06AE  1303               	movwf	(??_main+0)+0
  3477  06AF  00C7               	movf	(??_main+0)+0,w
  3478  06B0  0847               	movwf	(main@tecla)
  3479  06B1  00D0               	line	256
  3480                           ;main.c: 256:             switch(tecla)
  3481                           	goto	l2042
  3482  06B2  2F91               	line	258
  3483                           ;main.c: 257:             {;main.c: 258:                 case 'A':
  3484                           	
  3485                           l245:	
  3486  06B3                     	line	259
  3487                           	
  3488                           l1984:	
  3489  06B3                     ;main.c: 259:                         ++a;
  3490                           	movlw	low(01h)
  3491  06B3  3001               	movwf	(??_main+0)+0
  3492  06B4  00C7               	movf	(??_main+0)+0,w
  3493  06B5  0847               	addwf	(main@a),f
  3494  06B6  07CA               	line	260
  3495                           	
  3496                           l1986:	
  3497  06B7                     ;main.c: 260:                         if( a % 2 )
  3498                           	btfss	(main@a),(0)&7
  3499  06B7  1C4A               	goto	u1171
  3500  06B8  2EBA               	goto	u1170
  3501  06B9  2EBB               u1171:
  3502  06BA                     	goto	l1990
  3503  06BA  2EC2               u1170:
  3504  06BB                     	line	261
  3505                           	
  3506                           l1988:	
  3507  06BB                     ;main.c: 261:                             putFIFO( tecla );
  3508                           	movf	(main@tecla),w
  3509  06BB  0850               	fcall	_putFIFO
  3510  06BC  120A  118A  20F2  120A  118A  	goto	l2044
  3511  06C1  2FCB               	line	262
  3512                           ;main.c: 262:                         else
  3513                           	
  3514                           l246:	
  3515  06C2                     	line	263
  3516                           	
  3517                           l1990:	
  3518  06C2                     ;main.c: 263:                             putFIFO( tecla | 0x20 );
  3519                           	bcf	status, 5	;RP0=0, select bank0
  3520  06C2  1283               	bcf	status, 6	;RP1=0, select bank0
  3521  06C3  1303               	movf	(main@tecla),w
  3522  06C4  0850               	iorlw	020h
  3523  06C5  3820               	fcall	_putFIFO
  3524  06C6  120A  118A  20F2  120A  118A  	goto	l2044
  3525  06CB  2FCB               	
  3526                           l247:	
  3527  06CC                     	line	264
  3528                           ;main.c: 264:                         break;
  3529                           	goto	l2044
  3530  06CC  2FCB               	line	265
  3531                           ;main.c: 265:                 case 'B':
  3532                           	
  3533                           l249:	
  3534  06CD                     	line	266
  3535                           	
  3536                           l1992:	
  3537  06CD                     ;main.c: 266:                         ++b;
  3538                           	movlw	low(01h)
  3539  06CD  3001               	bcf	status, 5	;RP0=0, select bank0
  3540  06CE  1283               	bcf	status, 6	;RP1=0, select bank0
  3541  06CF  1303               	movwf	(??_main+0)+0
  3542  06D0  00C7               	movf	(??_main+0)+0,w
  3543  06D1  0847               	addwf	(main@b),f
  3544  06D2  07CB               	line	267
  3545                           	
  3546                           l1994:	
  3547  06D3                     ;main.c: 267:                         if( b % 2 )
  3548                           	btfss	(main@b),(0)&7
  3549  06D3  1C4B               	goto	u1181
  3550  06D4  2ED6               	goto	u1180
  3551  06D5  2ED7               u1181:
  3552  06D6                     	goto	l1998
  3553  06D6  2EDE               u1180:
  3554  06D7                     	line	268
  3555                           	
  3556                           l1996:	
  3557  06D7                     ;main.c: 268:                             putFIFO( tecla );
  3558                           	movf	(main@tecla),w
  3559  06D7  0850               	fcall	_putFIFO
  3560  06D8  120A  118A  20F2  120A  118A  	goto	l2044
  3561  06DD  2FCB               	line	269
  3562                           ;main.c: 269:                         else
  3563                           	
  3564                           l250:	
  3565  06DE                     	line	270
  3566                           	
  3567                           l1998:	
  3568  06DE                     ;main.c: 270:                             putFIFO( tecla | 0x20 );
  3569                           	bcf	status, 5	;RP0=0, select bank0
  3570  06DE  1283               	bcf	status, 6	;RP1=0, select bank0
  3571  06DF  1303               	movf	(main@tecla),w
  3572  06E0  0850               	iorlw	020h
  3573  06E1  3820               	fcall	_putFIFO
  3574  06E2  120A  118A  20F2  120A  118A  	goto	l2044
  3575  06E7  2FCB               	
  3576                           l251:	
  3577  06E8                     	line	271
  3578                           ;main.c: 271:                         break;
  3579                           	goto	l2044
  3580  06E8  2FCB               	line	272
  3581                           ;main.c: 272:                 case 'C':
  3582                           	
  3583                           l252:	
  3584  06E9                     	line	273
  3585                           	
  3586                           l2000:	
  3587  06E9                     ;main.c: 273:                         ++c;
  3588                           	movlw	low(01h)
  3589  06E9  3001               	bcf	status, 5	;RP0=0, select bank0
  3590  06EA  1283               	bcf	status, 6	;RP1=0, select bank0
  3591  06EB  1303               	movwf	(??_main+0)+0
  3592  06EC  00C7               	movf	(??_main+0)+0,w
  3593  06ED  0847               	addwf	(main@c),f
  3594  06EE  07CC               	line	274
  3595                           	
  3596                           l2002:	
  3597  06EF                     ;main.c: 274:                         if( c % 2 )
  3598                           	btfss	(main@c),(0)&7
  3599  06EF  1C4C               	goto	u1191
  3600  06F0  2EF2               	goto	u1190
  3601  06F1  2EF3               u1191:
  3602  06F2                     	goto	l2006
  3603  06F2  2EFA               u1190:
  3604  06F3                     	line	275
  3605                           	
  3606                           l2004:	
  3607  06F3                     ;main.c: 275:                             putFIFO( tecla );
  3608                           	movf	(main@tecla),w
  3609  06F3  0850               	fcall	_putFIFO
  3610  06F4  120A  118A  20F2  120A  118A  	goto	l2044
  3611  06F9  2FCB               	line	276
  3612                           ;main.c: 276:                         else
  3613                           	
  3614                           l253:	
  3615  06FA                     	line	277
  3616                           	
  3617                           l2006:	
  3618  06FA                     ;main.c: 277:                             putFIFO( tecla | 0x20 );
  3619                           	bcf	status, 5	;RP0=0, select bank0
  3620  06FA  1283               	bcf	status, 6	;RP1=0, select bank0
  3621  06FB  1303               	movf	(main@tecla),w
  3622  06FC  0850               	iorlw	020h
  3623  06FD  3820               	fcall	_putFIFO
  3624  06FE  120A  118A  20F2  120A  118A  	goto	l2044
  3625  0703  2FCB               	
  3626                           l254:	
  3627  0704                     	line	278
  3628                           ;main.c: 278:                         break;
  3629                           	goto	l2044
  3630  0704  2FCB               	line	279
  3631                           ;main.c: 279:                 case 'D':
  3632                           	
  3633                           l255:	
  3634  0705                     	line	280
  3635                           	
  3636                           l2008:	
  3637  0705                     ;main.c: 280:                         ++d;
  3638                           	movlw	low(01h)
  3639  0705  3001               	bcf	status, 5	;RP0=0, select bank0
  3640  0706  1283               	bcf	status, 6	;RP1=0, select bank0
  3641  0707  1303               	movwf	(??_main+0)+0
  3642  0708  00C7               	movf	(??_main+0)+0,w
  3643  0709  0847               	addwf	(main@d),f
  3644  070A  07CD               	line	281
  3645                           	
  3646                           l2010:	
  3647  070B                     ;main.c: 281:                         if( d % 2 )
  3648                           	btfss	(main@d),(0)&7
  3649  070B  1C4D               	goto	u1201
  3650  070C  2F0E               	goto	u1200
  3651  070D  2F0F               u1201:
  3652  070E                     	goto	l2014
  3653  070E  2F16               u1200:
  3654  070F                     	line	282
  3655                           	
  3656                           l2012:	
  3657  070F                     ;main.c: 282:                             putFIFO( tecla );
  3658                           	movf	(main@tecla),w
  3659  070F  0850               	fcall	_putFIFO
  3660  0710  120A  118A  20F2  120A  118A  	goto	l2044
  3661  0715  2FCB               	line	283
  3662                           ;main.c: 283:                         else
  3663                           	
  3664                           l256:	
  3665  0716                     	line	284
  3666                           	
  3667                           l2014:	
  3668  0716                     ;main.c: 284:                             putFIFO( tecla | 0x20 );
  3669                           	bcf	status, 5	;RP0=0, select bank0
  3670  0716  1283               	bcf	status, 6	;RP1=0, select bank0
  3671  0717  1303               	movf	(main@tecla),w
  3672  0718  0850               	iorlw	020h
  3673  0719  3820               	fcall	_putFIFO
  3674  071A  120A  118A  20F2  120A  118A  	goto	l2044
  3675  071F  2FCB               	
  3676                           l257:	
  3677  0720                     	line	285
  3678                           ;main.c: 285:                         break;
  3679                           	goto	l2044
  3680  0720  2FCB               	line	286
  3681                           ;main.c: 286:                 case '0':
  3682                           	
  3683                           l258:	
  3684  0721                     	line	287
  3685                           	
  3686                           l2016:	
  3687  0721                     ;main.c: 287:                         delFIFO(16);
  3688                           	movlw	low(010h)
  3689  0721  3010               	fcall	_delFIFO
  3690  0722  120A  118A  2168  120A  118A  	line	288
  3691                           	
  3692                           l2018:	
  3693  0727                     ;main.c: 288:                         clearLCD();
  3694                           	fcall	_clearLCD
  3695  0727  120A  118A  20E3  120A  118A  	line	289
  3696                           	
  3697                           l2020:	
  3698  072C                     ;main.c: 289:                         a = b = c = d = 0;
  3699                           	bcf	status, 5	;RP0=0, select bank0
  3700  072C  1283               	bcf	status, 6	;RP1=0, select bank0
  3701  072D  1303               	clrf	(main@d)
  3702  072E  01CD               	clrf	(main@c)
  3703  072F  01CC               	clrf	(main@b)
  3704  0730  01CB               	clrf	(main@a)
  3705  0731  01CA               	line	290
  3706                           ;main.c: 290:                         break;
  3707                           	goto	l2044
  3708  0732  2FCB               	line	291
  3709                           ;main.c: 291:                 case '1':
  3710                           	
  3711                           l259:	
  3712  0733                     	goto	l2022
  3713  0733  2F3B               	line	292
  3714                           ;main.c: 292:                 case '2':
  3715                           	
  3716                           l260:	
  3717  0734                     	goto	l2022
  3718  0734  2F3B               	line	293
  3719                           ;main.c: 293:                 case '3':
  3720                           	
  3721                           l261:	
  3722  0735                     	goto	l2022
  3723  0735  2F3B               	line	294
  3724                           ;main.c: 294:                 case '4':
  3725                           	
  3726                           l262:	
  3727  0736                     	goto	l2022
  3728  0736  2F3B               	line	295
  3729                           ;main.c: 295:                 case '5':
  3730                           	
  3731                           l263:	
  3732  0737                     	goto	l2022
  3733  0737  2F3B               	line	296
  3734                           ;main.c: 296:                 case '6':
  3735                           	
  3736                           l264:	
  3737  0738                     	goto	l2022
  3738  0738  2F3B               	line	297
  3739                           ;main.c: 297:                 case '7':
  3740                           	
  3741                           l265:	
  3742  0739                     	goto	l2022
  3743  0739  2F3B               	line	298
  3744                           ;main.c: 298:                 case '8':
  3745                           	
  3746                           l266:	
  3747  073A                     	goto	l2022
  3748  073A  2F3B               	line	299
  3749                           ;main.c: 299:                 case '9':
  3750                           	
  3751                           l267:	
  3752  073B                     	line	300
  3753                           	
  3754                           l2022:	
  3755  073B                     ;main.c: 300:                         putFIFO(tecla);
  3756                           	movf	(main@tecla),w
  3757  073B  0850               	fcall	_putFIFO
  3758  073C  120A  118A  20F2  120A  118A  	line	301
  3759                           ;main.c: 301:                         break;
  3760                           	goto	l2044
  3761  0741  2FCB               	line	302
  3762                           ;main.c: 302:                 case '*':
  3763                           	
  3764                           l268:	
  3765  0742                     	line	303
  3766                           ;main.c: 303:                         switch( delFIFO(1) )
  3767                           	goto	l2034
  3768  0742  2F5A               	line	305
  3769                           ;main.c: 304:                         {;main.c: 305:                             case 'A
                                 ': a = 0; break;
  3770                           	
  3771                           l270:	
  3772  0743                     	
  3773                           l2024:	
  3774  0743                     	bcf	status, 5	;RP0=0, select bank0
  3775  0743  1283               	bcf	status, 6	;RP1=0, select bank0
  3776  0744  1303               	clrf	(main@a)
  3777  0745  01CA               	goto	l2036
  3778  0746  2F83               	line	306
  3779                           ;main.c: 306:                             case 'a': a = 1; break;
  3780                           	
  3781                           l272:	
  3782  0747                     	clrf	(main@a)
  3783  0747  01CA               	incf	(main@a),f
  3784  0748  0ACA               	goto	l2036
  3785  0749  2F83               	line	307
  3786                           ;main.c: 307:                             case 'B': b = 0; break;
  3787                           	
  3788                           l273:	
  3789  074A                     	
  3790                           l2026:	
  3791  074A                     	clrf	(main@b)
  3792  074A  01CB               	goto	l2036
  3793  074B  2F83               	line	308
  3794                           ;main.c: 308:                             case 'b': b = 1; break;
  3795                           	
  3796                           l274:	
  3797  074C                     	clrf	(main@b)
  3798  074C  01CB               	incf	(main@b),f
  3799  074D  0ACB               	goto	l2036
  3800  074E  2F83               	line	309
  3801                           ;main.c: 309:                             case 'C': c = 0; break;
  3802                           	
  3803                           l275:	
  3804  074F                     	
  3805                           l2028:	
  3806  074F                     	clrf	(main@c)
  3807  074F  01CC               	goto	l2036
  3808  0750  2F83               	line	310
  3809                           ;main.c: 310:                             case 'c': c = 1; break;
  3810                           	
  3811                           l276:	
  3812  0751                     	clrf	(main@c)
  3813  0751  01CC               	incf	(main@c),f
  3814  0752  0ACC               	goto	l2036
  3815  0753  2F83               	line	311
  3816                           ;main.c: 311:                             case 'D': d = 0; break;
  3817                           	
  3818                           l277:	
  3819  0754                     	
  3820                           l2030:	
  3821  0754                     	clrf	(main@d)
  3822  0754  01CD               	goto	l2036
  3823  0755  2F83               	line	312
  3824                           ;main.c: 312:                             case 'd': d = 1; break;
  3825                           	
  3826                           l278:	
  3827  0756                     	clrf	(main@d)
  3828  0756  01CD               	incf	(main@d),f
  3829  0757  0ACD               	goto	l2036
  3830  0758  2F83               	line	313
  3831                           	
  3832                           l2032:	
  3833  0759                     ;main.c: 313:                         }
  3834                           	goto	l2036
  3835  0759  2F83               	
  3836                           l269:	
  3837  075A                     	
  3838                           l2034:	
  3839  075A                     	movlw	low(01h)
  3840  075A  3001               	fcall	_delFIFO
  3841  075B  120A  118A  2168  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3842  0760  1283               	bcf	status, 6	;RP1=0, select bank0
  3843  0761  1303               	movwf	(??_main+0)+0
  3844  0762  00C7               	clrf	(??_main+0)+0+1
  3845  0763  01C8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3846                           ; Switch size 1, requested type "space"
  3847                           ; Number of cases is 1, Range of values is 0 to 0
  3848                           ; switch strategies available:
  3849                           ; Name         Instructions Cycles
  3850                           ; simple_byte            4     3 (average)
  3851                           ; direct_byte           11     8 (fixed)
  3852                           ; jumptable            260     6 (fixed)
  3853                           ;	Chosen strategy is simple_byte
  3854                           
  3855                           	movf 1+(??_main+0)+0,w
  3856  0764  0848               	opt asmopt_push
  3857                           	opt asmopt_off
  3858                           	xorlw	0^0	; case 0
  3859  0765  3A00               	skipnz
  3860  0766  1903               	goto	l2196
  3861  0767  2F69               	goto	l2036
  3862  0768  2F83               	opt asmopt_pop
  3863                           	
  3864                           l2196:	
  3865  0769                     ; Switch size 1, requested type "space"
  3866                           ; Number of cases is 8, Range of values is 65 to 100
  3867                           ; switch strategies available:
  3868                           ; Name         Instructions Cycles
  3869                           ; simple_byte           25    13 (average)
  3870                           ; direct_byte          119    11 (fixed)
  3871                           ; jumptable            263     9 (fixed)
  3872                           ;	Chosen strategy is simple_byte
  3873                           
  3874                           	movf 0+(??_main+0)+0,w
  3875  0769  0847               	opt asmopt_push
  3876                           	opt asmopt_off
  3877                           	xorlw	65^0	; case 65
  3878  076A  3A41               	skipnz
  3879  076B  1903               	goto	l2024
  3880  076C  2F43               	xorlw	66^65	; case 66
  3881  076D  3A03               	skipnz
  3882  076E  1903               	goto	l2026
  3883  076F  2F4A               	xorlw	67^66	; case 67
  3884  0770  3A01               	skipnz
  3885  0771  1903               	goto	l2028
  3886  0772  2F4F               	xorlw	68^67	; case 68
  3887  0773  3A07               	skipnz
  3888  0774  1903               	goto	l2030
  3889  0775  2F54               	xorlw	97^68	; case 97
  3890  0776  3A25               	skipnz
  3891  0777  1903               	goto	l272
  3892  0778  2F47               	xorlw	98^97	; case 98
  3893  0779  3A03               	skipnz
  3894  077A  1903               	goto	l274
  3895  077B  2F4C               	xorlw	99^98	; case 99
  3896  077C  3A01               	skipnz
  3897  077D  1903               	goto	l276
  3898  077E  2F51               	xorlw	100^99	; case 100
  3899  077F  3A07               	skipnz
  3900  0780  1903               	goto	l278
  3901  0781  2F56               	goto	l2036
  3902  0782  2F83               	opt asmopt_pop
  3903                           
  3904                           	
  3905                           l271:	
  3906  0783                     	line	314
  3907                           	
  3908                           l2036:	
  3909  0783                     ;main.c: 314:                         clearLCD();
  3910                           	fcall	_clearLCD
  3911  0783  120A  118A  20E3  120A  118A  	line	315
  3912                           ;main.c: 315:                         break;
  3913                           	goto	l2044
  3914  0788  2FCB               	line	316
  3915                           ;main.c: 316:                 case '#':
  3916                           	
  3917                           l279:	
  3918  0789                     	line	317
  3919                           	
  3920                           l2038:	
  3921  0789                     ;main.c: 317:                         estado = 10;
  3922                           	movlw	0Ah
  3923  0789  300A               	bcf	status, 5	;RP0=0, select bank0
  3924  078A  1283               	bcf	status, 6	;RP1=0, select bank0
  3925  078B  1303               	movwf	(main@estado)
  3926  078C  00D1               	movlw	0
  3927  078D  3000               	movwf	((main@estado))+1
  3928  078E  00D2               	line	318
  3929                           ;main.c: 318:                         break;
  3930                           	goto	l2044
  3931  078F  2FCB               	line	319
  3932                           	
  3933                           l2040:	
  3934  0790                     ;main.c: 319:             }
  3935                           	goto	l2044
  3936  0790  2FCB               	
  3937                           l244:	
  3938  0791                     	
  3939                           l2042:	
  3940  0791                     	movf	(main@tecla),w
  3941  0791  0850               	movwf	(??_main+0)+0
  3942  0792  00C7               	clrf	(??_main+0)+0+1
  3943  0793  01C8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3944                           ; Switch size 1, requested type "space"
  3945                           ; Number of cases is 1, Range of values is 0 to 0
  3946                           ; switch strategies available:
  3947                           ; Name         Instructions Cycles
  3948                           ; simple_byte            4     3 (average)
  3949                           ; direct_byte           11     8 (fixed)
  3950                           ; jumptable            260     6 (fixed)
  3951                           ;	Chosen strategy is simple_byte
  3952                           
  3953                           	movf 1+(??_main+0)+0,w
  3954  0794  0848               	opt asmopt_push
  3955                           	opt asmopt_off
  3956                           	xorlw	0^0	; case 0
  3957  0795  3A00               	skipnz
  3958  0796  1903               	goto	l2198
  3959  0797  2F99               	goto	l2044
  3960  0798  2FCB               	opt asmopt_pop
  3961                           	
  3962                           l2198:	
  3963  0799                     ; Switch size 1, requested type "space"
  3964                           ; Number of cases is 16, Range of values is 35 to 68
  3965                           ; switch strategies available:
  3966                           ; Name         Instructions Cycles
  3967                           ; simple_byte           49    25 (average)
  3968                           ; direct_byte          113    11 (fixed)
  3969                           ; jumptable            263     9 (fixed)
  3970                           ;	Chosen strategy is simple_byte
  3971                           
  3972                           	movf 0+(??_main+0)+0,w
  3973  0799  0847               	opt asmopt_push
  3974                           	opt asmopt_off
  3975                           	xorlw	35^0	; case 35
  3976  079A  3A23               	skipnz
  3977  079B  1903               	goto	l2038
  3978  079C  2F89               	xorlw	42^35	; case 42
  3979  079D  3A09               	skipnz
  3980  079E  1903               	goto	l2034
  3981  079F  2F5A               	xorlw	48^42	; case 48
  3982  07A0  3A1A               	skipnz
  3983  07A1  1903               	goto	l2016
  3984  07A2  2F21               	xorlw	49^48	; case 49
  3985  07A3  3A01               	skipnz
  3986  07A4  1903               	goto	l2022
  3987  07A5  2F3B               	xorlw	50^49	; case 50
  3988  07A6  3A03               	skipnz
  3989  07A7  1903               	goto	l2022
  3990  07A8  2F3B               	xorlw	51^50	; case 51
  3991  07A9  3A01               	skipnz
  3992  07AA  1903               	goto	l2022
  3993  07AB  2F3B               	xorlw	52^51	; case 52
  3994  07AC  3A07               	skipnz
  3995  07AD  1903               	goto	l2022
  3996  07AE  2F3B               	xorlw	53^52	; case 53
  3997  07AF  3A01               	skipnz
  3998  07B0  1903               	goto	l2022
  3999  07B1  2F3B               	xorlw	54^53	; case 54
  4000  07B2  3A03               	skipnz
  4001  07B3  1903               	goto	l2022
  4002  07B4  2F3B               	xorlw	55^54	; case 55
  4003  07B5  3A01               	skipnz
  4004  07B6  1903               	goto	l2022
  4005  07B7  2F3B               	xorlw	56^55	; case 56
  4006  07B8  3A0F               	skipnz
  4007  07B9  1903               	goto	l2022
  4008  07BA  2F3B               	xorlw	57^56	; case 57
  4009  07BB  3A01               	skipnz
  4010  07BC  1903               	goto	l2022
  4011  07BD  2F3B               	xorlw	65^57	; case 65
  4012  07BE  3A78               	skipnz
  4013  07BF  1903               	goto	l1984
  4014  07C0  2EB3               	xorlw	66^65	; case 66
  4015  07C1  3A03               	skipnz
  4016  07C2  1903               	goto	l1992
  4017  07C3  2ECD               	xorlw	67^66	; case 67
  4018  07C4  3A01               	skipnz
  4019  07C5  1903               	goto	l2000
  4020  07C6  2EE9               	xorlw	68^67	; case 68
  4021  07C7  3A07               	skipnz
  4022  07C8  1903               	goto	l2008
  4023  07C9  2F05               	goto	l2044
  4024  07CA  2FCB               	opt asmopt_pop
  4025                           
  4026                           	
  4027                           l248:	
  4028  07CB                     	line	320
  4029                           	
  4030                           l2044:	
  4031  07CB                     ;main.c: 320:             writeLCD(0,0, displayFIFO() );
  4032                           	clrf	(writeLCD@y)
  4033  07CB  01F8               	fcall	_displayFIFO
  4034  07CC  120A  118A  20D1  120A  118A  	movwf	(writeLCD@ptr)
  4035  07D1  00F9               	movlw	(0x0)
  4036  07D2  3000               	movwf	(writeLCD@ptr+1)
  4037  07D3  00FA               	movlw	low(0)
  4038  07D4  3000               	fcall	_writeLCD
  4039  07D5  120A  118A  21B4  120A  118A  	goto	l2046
  4040  07DA  2FDB               	line	321
  4041                           ;main.c: 321:         }
  4042                           	
  4043                           l243:	
  4044  07DB                     	line	322
  4045                           	
  4046                           l2046:	
  4047  07DB                     ;main.c: 322:         serialIOscan();
  4048                           	fcall	_serialIOscan
  4049  07DB  120A  118A  224F  120A  118A  	goto	l1834
  4050  07E0  2BCC               	line	323
  4051                           ;main.c: 323:     }
  4052                           	
  4053                           l280:	
  4054  07E1                     	goto	l1834
  4055  07E1  2BCC               	
  4056                           l281:	
  4057  07E2                     	line	324
  4058                           	
  4059                           l282:	
  4060  07E2                     	global	start
  4061                           	ljmp	start
  4062  07E2  120A  118A  2800   	opt stack 0
  4063                           GLOBAL	__end_of_main
  4064                           	__end_of_main:
  4065  07E5                     	signat	_main,89
  4066                           	global	_writeLCD
  4067                           
  4068 ;; *************** function _writeLCD *****************
  4069 ;; Defined at:
  4070 ;;		line 87 in file "lcd.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  x               1    wreg     unsigned char 
  4073 ;;  y               1    8[COMMON] unsigned char 
  4074 ;;  ptr             2    9[COMMON] PTR const unsigned char 
  4075 ;;		 -> STR_3(17), STR_2(12), STR_1(13), checktecla@linha2(17), 
  4076 ;;		 -> fifo(16), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  x               1   12[COMMON] unsigned char 
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         3       0       0       0       0
  4089 ;;      Locals:         1       0       0       0       0
  4090 ;;      Temps:          1       0       0       0       0
  4091 ;;      Totals:         5       0       0       0       0
  4092 ;;Total ram usage:        5 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    2
  4095 ;; This function calls:
  4096 ;;		_gotoxy
  4097 ;;		_putLCD
  4098 ;; This function is called by:
  4099 ;;		_main
  4100 ;;		_checktecla
  4101 ;;		_screen_car
  4102 ;;		_screen_menu
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4106                           	file	"lcd.c"
  4107                           	line	87
  4108                           global __ptext1
  4109                           __ptext1:	;psect for function _writeLCD
  4110  01B4                     psect	text1
  4111                           	file	"lcd.c"
  4112                           	line	87
  4113                           	global	__size_of_writeLCD
  4114                           	__size_of_writeLCD	equ	__end_of_writeLCD-_writeLCD
  4115  0033                     	
  4116                           _writeLCD:	
  4117  01B4                     ;incstack = 0
  4118                           	opt	stack 5
  4119                           ; Regs used in _writeLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4120                           ;writeLCD@x stored from wreg
  4121                           	movwf	(writeLCD@x)
  4122  01B4  00FC               	line	89
  4123                           	
  4124                           l1732:	
  4125  01B5                     ;lcd.c: 87: void writeLCD( unsigned char x, unsigned char y, const char * ptr );lcd.c: 8
                                 8: {;lcd.c: 89:         gotoxy(x,y);
  4126                           	movf	(writeLCD@y),w
  4127  01B5  0878               	movwf	(??_writeLCD+0)+0
  4128  01B6  00FB               	movf	(??_writeLCD+0)+0,w
  4129  01B7  087B               	movwf	(gotoxy@y)
  4130  01B8  00F4               	movf	(writeLCD@x),w
  4131  01B9  087C               	fcall	_gotoxy
  4132  01BA  120A  118A  2137  120A  118A  	line	90
  4133                           ;lcd.c: 90:         while( *ptr )
  4134                           	goto	l1738
  4135  01BF  29D5               	
  4136                           l101:	
  4137  01C0                     	line	91
  4138                           	
  4139                           l1734:	
  4140  01C0                     ;lcd.c: 91:         putLCD( *ptr++ );
  4141                           	movf	(writeLCD@ptr+1),w
  4142  01C0  087A               	bcf	status, 5	;RP0=0, select bank0
  4143  01C1  1283               	bcf	status, 6	;RP1=0, select bank0
  4144  01C2  1303               	movwf	btemp+1
  4145  01C3  00FF               	movf	(writeLCD@ptr),w
  4146  01C4  0879               	movwf	fsr0
  4147  01C5  0084               	fcall	stringtab
  4148  01C6  120A  118A  2003  120A  118A  	fcall	_putLCD
  4149  01CB  120A  118A  221B  120A  118A  	
  4150                           l1736:	
  4151  01D0                     	movlw	01h
  4152  01D0  3001               	addwf	(writeLCD@ptr),f
  4153  01D1  07F9               	skipnc
  4154  01D2  1803               	incf	(writeLCD@ptr+1),f
  4155  01D3  0AFA               	goto	l1738
  4156  01D4  29D5               	
  4157                           l100:	
  4158  01D5                     	line	90
  4159                           	
  4160                           l1738:	
  4161  01D5                     ;lcd.c: 90:         while( *ptr )
  4162                           	movf	(writeLCD@ptr+1),w
  4163  01D5  087A               	bcf	status, 5	;RP0=0, select bank0
  4164  01D6  1283               	bcf	status, 6	;RP1=0, select bank0
  4165  01D7  1303               	movwf	btemp+1
  4166  01D8  00FF               	movf	(writeLCD@ptr),w
  4167  01D9  0879               	movwf	fsr0
  4168  01DA  0084               	fcall	stringtab
  4169  01DB  120A  118A  2003  120A  118A  	xorlw	0
  4170  01E0  3A00               	skipz
  4171  01E1  1D03               	goto	u811
  4172  01E2  29E4               	goto	u810
  4173  01E3  29E5               u811:
  4174  01E4                     	goto	l1734
  4175  01E4  29C0               u810:
  4176  01E5                     	goto	l103
  4177  01E5  29E6               	
  4178                           l102:	
  4179  01E6                     	line	92
  4180                           	
  4181                           l103:	
  4182  01E6                     	return
  4183  01E6  0008               	opt stack 0
  4184                           GLOBAL	__end_of_writeLCD
  4185                           	__end_of_writeLCD:
  4186  01E7                     	signat	_writeLCD,12409
  4187                           	global	_putLCD
  4188                           
  4189 ;; *************** function _putLCD *****************
  4190 ;; Defined at:
  4191 ;;		line 66 in file "lcd.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  c               1    wreg     unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  c               1    2[COMMON] unsigned char 
  4196 ;;  nibble          1    3[COMMON] volatile struct .
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		wreg, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4206 ;;      Params:         0       0       0       0       0
  4207 ;;      Locals:         2       0       0       0       0
  4208 ;;      Temps:          2       0       0       0       0
  4209 ;;      Totals:         4       0       0       0       0
  4210 ;;Total ram usage:        4 bytes
  4211 ;; Hardware stack levels used:    1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_writeLCD
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4219                           	line	66
  4220                           global __ptext2
  4221                           __ptext2:	;psect for function _putLCD
  4222  021B                     psect	text2
  4223                           	file	"lcd.c"
  4224                           	line	66
  4225                           	global	__size_of_putLCD
  4226                           	__size_of_putLCD	equ	__end_of_putLCD-_putLCD
  4227  0034                     	
  4228                           _putLCD:	
  4229  021B                     ;incstack = 0
  4230                           	opt	stack 6
  4231                           ; Regs used in _putLCD: [wreg+status,2+status,0]
  4232                           ;putLCD@c stored from wreg
  4233                           	movwf	(putLCD@c)
  4234  021B  00F2               	line	70
  4235                           	
  4236                           l1580:	
  4237  021C                     ;lcd.c: 66: void putLCD( unsigned char c );lcd.c: 67:  {;lcd.c: 68:         volatile REG
                                 nibble_t nibble;;lcd.c: 70:         nibble.HILO = c;
  4238                           	movf	(putLCD@c),w
  4239  021C  0872               	movwf	(??_putLCD+0)+0
  4240  021D  00F0               	movf	(??_putLCD+0)+0,w
  4241  021E  0870               	movwf	(putLCD@nibble)	;volatile
  4242  021F  00F3               	line	71
  4243                           	
  4244                           l1582:	
  4245  0220                     ;lcd.c: 71:         LCD.RS = 1;
  4246                           	bcf	status, 5	;RP0=0, select bank0
  4247  0220  1283               	bcf	status, 6	;RP1=0, select bank0
  4248  0221  1303               	bsf	(8),4	;volatile
  4249  0222  1608               	line	72
  4250                           	
  4251                           l1584:	
  4252  0223                     ;lcd.c: 72:         LCD.BUS= nibble.HI;
  4253                           	swapf	(putLCD@nibble),w	;volatile
  4254  0223  0E73               	andlw	(1<<4)-1
  4255  0224  390F               	movwf	(??_putLCD+0)+0
  4256  0225  00F0               	movf	(8),w	;volatile
  4257  0226  0808               	xorwf	(??_putLCD+0)+0,w
  4258  0227  0670               	andlw	not ((1<<4)-1)
  4259  0228  39F0               	xorwf	(??_putLCD+0)+0,w
  4260  0229  0670               	movwf	(8)	;volatile
  4261  022A  0088               	line	73
  4262                           	
  4263                           l1586:	
  4264  022B                     ;lcd.c: 73:         LCD.EN = 0;
  4265                           	bcf	(8),5	;volatile
  4266  022B  1288               	line	74
  4267                           	
  4268                           l1588:	
  4269  022C                     ;lcd.c: 74:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4270                           	opt asmopt_push
  4271                           opt asmopt_off
  4272                           movlw	3
  4273  022C  3003               movwf	((??_putLCD+0)+0+1),f
  4274  022D  00F1               	movlw	151
  4275  022E  3097               movwf	((??_putLCD+0)+0),f
  4276  022F  00F0               	u1307:
  4277  0230                     decfsz	((??_putLCD+0)+0),f
  4278  0230  0BF0               	goto	u1307
  4279  0231  2A30               	decfsz	((??_putLCD+0)+0+1),f
  4280  0232  0BF1               	goto	u1307
  4281  0233  2A30               	nop2
  4282  0234  2A35               opt asmopt_pop
  4283                           
  4284                           	line	75
  4285                           	
  4286                           l1590:	
  4287  0235                     ;lcd.c: 75:         LCD.EN = 1;
  4288                           	bcf	status, 5	;RP0=0, select bank0
  4289  0235  1283               	bcf	status, 6	;RP1=0, select bank0
  4290  0236  1303               	bsf	(8),5	;volatile
  4291  0237  1688               	line	77
  4292                           	
  4293                           l1592:	
  4294  0238                     ;lcd.c: 77:         LCD.RS = 1;
  4295                           	bsf	(8),4	;volatile
  4296  0238  1608               	line	78
  4297                           ;lcd.c: 78:         LCD.BUS = nibble.LO;
  4298                           	movf	(putLCD@nibble),w	;volatile
  4299  0239  0873               	andlw	(1<<4)-1
  4300  023A  390F               	movwf	(??_putLCD+0)+0
  4301  023B  00F0               	movf	(8),w	;volatile
  4302  023C  0808               	xorwf	(??_putLCD+0)+0,w
  4303  023D  0670               	andlw	not ((1<<4)-1)
  4304  023E  39F0               	xorwf	(??_putLCD+0)+0,w
  4305  023F  0670               	movwf	(8)	;volatile
  4306  0240  0088               	line	79
  4307                           	
  4308                           l1594:	
  4309  0241                     ;lcd.c: 79:         LCD.EN = 0;
  4310                           	bcf	(8),5	;volatile
  4311  0241  1288               	line	80
  4312                           	
  4313                           l1596:	
  4314  0242                     ;lcd.c: 80:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4315                           	opt asmopt_push
  4316                           opt asmopt_off
  4317                           movlw	3
  4318  0242  3003               movwf	((??_putLCD+0)+0+1),f
  4319  0243  00F1               	movlw	151
  4320  0244  3097               movwf	((??_putLCD+0)+0),f
  4321  0245  00F0               	u1317:
  4322  0246                     decfsz	((??_putLCD+0)+0),f
  4323  0246  0BF0               	goto	u1317
  4324  0247  2A46               	decfsz	((??_putLCD+0)+0+1),f
  4325  0248  0BF1               	goto	u1317
  4326  0249  2A46               	nop2
  4327  024A  2A4B               opt asmopt_pop
  4328                           
  4329                           	line	81
  4330                           	
  4331                           l1598:	
  4332  024B                     ;lcd.c: 81:         LCD.EN = 1;
  4333                           	bcf	status, 5	;RP0=0, select bank0
  4334  024B  1283               	bcf	status, 6	;RP1=0, select bank0
  4335  024C  1303               	bsf	(8),5	;volatile
  4336  024D  1688               	line	82
  4337                           	
  4338                           l94:	
  4339  024E                     	return
  4340  024E  0008               	opt stack 0
  4341                           GLOBAL	__end_of_putLCD
  4342                           	__end_of_putLCD:
  4343  024F                     	signat	_putLCD,4217
  4344                           	global	_gotoxy
  4345                           
  4346 ;; *************** function _gotoxy *****************
  4347 ;; Defined at:
  4348 ;;		line 83 in file "lcd.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  x               1    wreg     unsigned char 
  4351 ;;  y               1    4[COMMON] unsigned char 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  x               1    7[COMMON] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      void 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0, pclath, cstack
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         1       0       0       0       0
  4364 ;;      Locals:         1       0       0       0       0
  4365 ;;      Temps:          2       0       0       0       0
  4366 ;;      Totals:         4       0       0       0       0
  4367 ;;Total ram usage:        4 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; Hardware stack levels required when called:    1
  4370 ;; This function calls:
  4371 ;;		_cmdLCD
  4372 ;; This function is called by:
  4373 ;;		_writeLCD
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4377                           	line	83
  4378                           global __ptext3
  4379                           __ptext3:	;psect for function _gotoxy
  4380  0137                     psect	text3
  4381                           	file	"lcd.c"
  4382                           	line	83
  4383                           	global	__size_of_gotoxy
  4384                           	__size_of_gotoxy	equ	__end_of_gotoxy-_gotoxy
  4385  0018                     	
  4386                           _gotoxy:	
  4387  0137                     ;incstack = 0
  4388                           	opt	stack 5
  4389                           ; Regs used in _gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4390                           ;gotoxy@x stored from wreg
  4391                           	movwf	(gotoxy@x)
  4392  0137  00F7               	line	85
  4393                           	
  4394                           l1600:	
  4395  0138                     ;lcd.c: 83: void gotoxy( unsigned char x, unsigned char y );lcd.c: 84: {;lcd.c: 85:     
                                     cmdLCD((0x80 | 0xC0 * y) + (x & 0X3F));
  4396                           	movlw	low(03Fh)
  4397  0138  303F               	andwf	(gotoxy@x),w
  4398  0139  0577               	movwf	(??_gotoxy+0)+0
  4399  013A  00F5               	movf	(gotoxy@y),w
  4400  013B  0874               	movwf	(??_gotoxy+1)+0
  4401  013C  00F6               	movlw	(06h)-1
  4402  013D  3005               u665:
  4403  013E                     	clrc
  4404  013E  1003               	rlf	(??_gotoxy+1)+0,f
  4405  013F  0DF6               	addlw	-1
  4406  0140  3EFF               	skipz
  4407  0141  1D03               	goto	u665
  4408  0142  293E               	clrc
  4409  0143  1003               	rlf	(??_gotoxy+1)+0,w
  4410  0144  0D76               	xorlw	0ffh
  4411  0145  3AFF               	addlw	1
  4412  0146  3E01               	iorlw	080h
  4413  0147  3880               	addwf	0+(??_gotoxy+0)+0,w
  4414  0148  0775               	fcall	_cmdLCD
  4415  0149  120A  118A  22CB  120A  118A  	line	86
  4416                           	
  4417                           l97:	
  4418  014E                     	return
  4419  014E  0008               	opt stack 0
  4420                           GLOBAL	__end_of_gotoxy
  4421                           	__end_of_gotoxy:
  4422  014F                     	signat	_gotoxy,8313
  4423                           	global	_serialIOscan
  4424                           
  4425 ;; *************** function _serialIOscan *****************
  4426 ;; Defined at:
  4427 ;;		line 76 in file "serialIO.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;		None
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  i               1    8[COMMON] unsigned char 
  4432 ;;  j               1    7[COMMON] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4442 ;;      Params:         0       0       0       0       0
  4443 ;;      Locals:         2       0       0       0       0
  4444 ;;      Temps:          3       0       0       0       0
  4445 ;;      Totals:         5       0       0       0       0
  4446 ;;Total ram usage:        5 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    1
  4449 ;; This function calls:
  4450 ;;		_serialIObyteShift
  4451 ;;		_serialIOload
  4452 ;; This function is called by:
  4453 ;;		_main
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4457                           	file	"serialIO.c"
  4458                           	line	76
  4459                           global __ptext4
  4460                           __ptext4:	;psect for function _serialIOscan
  4461  024F                     psect	text4
  4462                           	file	"serialIO.c"
  4463                           	line	76
  4464                           	global	__size_of_serialIOscan
  4465                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
  4466  003D                     	
  4467                           _serialIOscan:	
  4468  024F                     ;incstack = 0
  4469                           	opt	stack 6
  4470                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4471                           	line	79
  4472                           	
  4473                           l1772:	
  4474  024F                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  4475                           	bcf	status, 5	;RP0=0, select bank0
  4476  024F  1283               	bcf	status, 6	;RP1=0, select bank0
  4477  0250  1303               	movf	(_lenSerialIO),w
  4478  0251  0820               	addlw	0FFh
  4479  0252  3EFF               	movwf	(??_serialIOscan+0)+0
  4480  0253  00F4               	movf	(??_serialIOscan+0)+0,w
  4481  0254  0874               	movwf	(serialIOscan@j)
  4482  0255  00F7               	line	80
  4483                           	
  4484                           l1774:	
  4485  0256                     ;serialIO.c: 80:     serialIOload();
  4486                           	fcall	_serialIOload
  4487  0256  120A  118A  20DE  120A  118A  	line	81
  4488                           	
  4489                           l1776:	
  4490  025B                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  4491                           	clrf	(serialIOscan@i)
  4492  025B  01F8               	goto	l1782
  4493  025C  2A7D               	
  4494                           l312:	
  4495  025D                     	line	83
  4496                           	
  4497                           l1778:	
  4498  025D                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
  4499                           	decf	(serialIOscan@i),w
  4500  025D  0378               	xorlw	0ffh
  4501  025E  3AFF               	addwf	(serialIOscan@j),w
  4502  025F  0777               	bcf	status, 5	;RP0=0, select bank0
  4503  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  4504  0261  1303               	addwf	(_ptrSerialOut),w
  4505  0262  0721               	movwf	(??_serialIOscan+0)+0
  4506  0263  00F4               	movf	0+(??_serialIOscan+0)+0,w
  4507  0264  0874               	movwf	fsr0
  4508  0265  0084               	bcf	status, 7	;select IRP bank0
  4509  0266  1383               	movf	indf,w
  4510  0267  0800               	fcall	_serialIObyteShift
  4511  0268  120A  118A  2189  120A  118A  	movwf	(??_serialIOscan+1)+0
  4512  026D  00F5               	movf	(serialIOscan@i),w
  4513  026E  0878               	bcf	status, 5	;RP0=0, select bank0
  4514  026F  1283               	bcf	status, 6	;RP1=0, select bank0
  4515  0270  1303               	addwf	(_ptrSerialIn),w
  4516  0271  0722               	movwf	(??_serialIOscan+2)+0
  4517  0272  00F6               	movf	0+(??_serialIOscan+2)+0,w
  4518  0273  0876               	movwf	fsr0
  4519  0274  0084               	movf	(??_serialIOscan+1)+0,w
  4520  0275  0875               	bcf	status, 7	;select IRP bank0
  4521  0276  1383               	movwf	indf
  4522  0277  0080               	line	84
  4523                           	
  4524                           l1780:	
  4525  0278                     ;serialIO.c: 84:     }
  4526                           	movlw	low(01h)
  4527  0278  3001               	movwf	(??_serialIOscan+0)+0
  4528  0279  00F4               	movf	(??_serialIOscan+0)+0,w
  4529  027A  0874               	addwf	(serialIOscan@i),f
  4530  027B  07F8               	goto	l1782
  4531  027C  2A7D               	
  4532                           l311:	
  4533  027D                     	
  4534                           l1782:	
  4535  027D                     	bcf	status, 5	;RP0=0, select bank0
  4536  027D  1283               	bcf	status, 6	;RP1=0, select bank0
  4537  027E  1303               	movf	(_lenSerialIO),w
  4538  027F  0820               	subwf	(serialIOscan@i),w
  4539  0280  0278               	skipc
  4540  0281  1C03               	goto	u821
  4541  0282  2A84               	goto	u820
  4542  0283  2A85               u821:
  4543  0284                     	goto	l1778
  4544  0284  2A5D               u820:
  4545  0285                     	goto	l1784
  4546  0285  2A86               	
  4547                           l313:	
  4548  0286                     	line	85
  4549                           	
  4550                           l1784:	
  4551  0286                     ;serialIO.c: 85:     serialIOload();
  4552                           	fcall	_serialIOload
  4553  0286  120A  118A  20DE  120A  118A  	line	86
  4554                           	
  4555                           l314:	
  4556  028B                     	return
  4557  028B  0008               	opt stack 0
  4558                           GLOBAL	__end_of_serialIOscan
  4559                           	__end_of_serialIOscan:
  4560  028C                     	signat	_serialIOscan,89
  4561                           	global	_serialIOload
  4562                           
  4563 ;; *************** function _serialIOload *****************
  4564 ;; Defined at:
  4565 ;;		line 45 in file "serialIO.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;		None
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		None
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4579 ;;      Params:         0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0
  4581 ;;      Temps:          0       0       0       0       0
  4582 ;;      Totals:         0       0       0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels used:    1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_serialIOscan
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4592                           	line	45
  4593                           global __ptext5
  4594                           __ptext5:	;psect for function _serialIOload
  4595  00DE                     psect	text5
  4596                           	file	"serialIO.c"
  4597                           	line	45
  4598                           	global	__size_of_serialIOload
  4599                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
  4600  0005                     	
  4601                           _serialIOload:	
  4602  00DE                     ;incstack = 0
  4603                           	opt	stack 6
  4604                           ; Regs used in _serialIOload: []
  4605                           	line	47
  4606                           	
  4607                           l1602:	
  4608  00DE                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  4609                           	bcf	status, 5	;RP0=0, select bank0
  4610  00DE  1283               	bcf	status, 6	;RP1=0, select bank0
  4611  00DF  1303               	bcf	(5),3	;volatile
  4612  00E0  1185               	line	48
  4613                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  4614                           	bsf	(5),3	;volatile
  4615  00E1  1585               	line	49
  4616                           	
  4617                           l299:	
  4618  00E2                     	return
  4619  00E2  0008               	opt stack 0
  4620                           GLOBAL	__end_of_serialIOload
  4621                           	__end_of_serialIOload:
  4622  00E3                     	signat	_serialIOload,89
  4623                           	global	_serialIObyteShift
  4624                           
  4625 ;; *************** function _serialIObyteShift *****************
  4626 ;; Defined at:
  4627 ;;		line 50 in file "serialIO.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  dataIn          1    wreg     unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  dataIn          1    1[COMMON] unsigned char 
  4632 ;;  dataBit         1    3[COMMON] unsigned char 
  4633 ;;  dataOut         1    2[COMMON] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      unsigned char 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4643 ;;      Params:         0       0       0       0       0
  4644 ;;      Locals:         3       0       0       0       0
  4645 ;;      Temps:          1       0       0       0       0
  4646 ;;      Totals:         4       0       0       0       0
  4647 ;;Total ram usage:        4 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_serialIOscan
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4656                           	line	50
  4657                           global __ptext6
  4658                           __ptext6:	;psect for function _serialIObyteShift
  4659  0189                     psect	text6
  4660                           	file	"serialIO.c"
  4661                           	line	50
  4662                           	global	__size_of_serialIObyteShift
  4663                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
  4664  002B                     	
  4665                           _serialIObyteShift:	
  4666  0189                     ;incstack = 0
  4667                           	opt	stack 6
  4668                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  4669                           ;serialIObyteShift@dataIn stored from wreg
  4670                           	movwf	(serialIObyteShift@dataIn)
  4671  0189  00F1               	line	55
  4672                           	
  4673                           l1604:	
  4674  018A                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
  4675                           	movlw	low(080h)
  4676  018A  3080               	movwf	(??_serialIObyteShift+0)+0
  4677  018B  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4678  018C  0870               	movwf	(serialIObyteShift@dataBit)
  4679  018D  00F3               	line	56
  4680                           	
  4681                           l1606:	
  4682  018E                     ;serialIO.c: 56:     dataOut = 0;
  4683                           	clrf	(serialIObyteShift@dataOut)
  4684  018E  01F2               	line	58
  4685                           ;serialIO.c: 58:     while( dataBit )
  4686                           	goto	l1618
  4687  018F  29A9               	
  4688                           l303:	
  4689  0190                     	line	60
  4690                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  4691                           	bcf	status, 5	;RP0=0, select bank0
  4692  0190  1283               	bcf	status, 6	;RP1=0, select bank0
  4693  0191  1303               	bcf	(5),2	;volatile
  4694  0192  1105               	line	61
  4695                           	
  4696                           l1608:	
  4697  0193                     ;serialIO.c: 61:         if( dataIn & dataBit )
  4698                           	movf	(serialIObyteShift@dataIn),w
  4699  0193  0871               	andwf	(serialIObyteShift@dataBit),w
  4700  0194  0573               	btfsc	status,2
  4701  0195  1903               	goto	u671
  4702  0196  2998               	goto	u670
  4703  0197  2999               u671:
  4704  0198                     	goto	l304
  4705  0198  299B               u670:
  4706  0199                     	line	62
  4707                           	
  4708                           l1610:	
  4709  0199                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
  4710                           	bsf	(5),0	;volatile
  4711  0199  1405               	goto	l305
  4712  019A  299C               	line	63
  4713                           ;serialIO.c: 63:         else
  4714                           	
  4715                           l304:	
  4716  019B                     	line	64
  4717                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  4718                           	bcf	(5),0	;volatile
  4719  019B  1005               	
  4720                           l305:	
  4721  019C                     	line	66
  4722                           ;serialIO.c: 66:         if( SERIALIO.IN)
  4723                           	btfss	(5),1	;volatile
  4724  019C  1C85               	goto	u681
  4725  019D  299F               	goto	u680
  4726  019E  29A0               u681:
  4727  019F                     	goto	l1614
  4728  019F  29A5               u680:
  4729  01A0                     	line	67
  4730                           	
  4731                           l1612:	
  4732  01A0                     ;serialIO.c: 67:             dataOut |= dataBit;
  4733                           	movf	(serialIObyteShift@dataBit),w
  4734  01A0  0873               	movwf	(??_serialIObyteShift+0)+0
  4735  01A1  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4736  01A2  0870               	iorwf	(serialIObyteShift@dataOut),f
  4737  01A3  04F2               	goto	l1614
  4738  01A4  29A5               	
  4739                           l306:	
  4740  01A5                     	line	68
  4741                           	
  4742                           l1614:	
  4743  01A5                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
  4744                           	bsf	(5),2	;volatile
  4745  01A5  1505               	line	69
  4746                           	
  4747                           l1616:	
  4748  01A6                     ;serialIO.c: 69:         dataBit >>= 1;
  4749                           	clrc
  4750  01A6  1003               	rrf	(serialIObyteShift@dataBit),f
  4751  01A7  0CF3               
  4752                           	goto	l1618
  4753  01A8  29A9               	line	70
  4754                           ;serialIO.c: 70:     }
  4755                           	
  4756                           l302:	
  4757  01A9                     	line	58
  4758                           	
  4759                           l1618:	
  4760  01A9                     ;serialIO.c: 58:     while( dataBit )
  4761                           	movf	((serialIObyteShift@dataBit)),w
  4762  01A9  0873               	btfss	status,2
  4763  01AA  1D03               	goto	u691
  4764  01AB  29AD               	goto	u690
  4765  01AC  29AE               u691:
  4766  01AD                     	goto	l303
  4767  01AD  2990               u690:
  4768  01AE                     	
  4769                           l307:	
  4770  01AE                     	line	71
  4771                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  4772                           	bcf	status, 5	;RP0=0, select bank0
  4773  01AE  1283               	bcf	status, 6	;RP1=0, select bank0
  4774  01AF  1303               	bcf	(5),2	;volatile
  4775  01B0  1105               	line	72
  4776                           	
  4777                           l1620:	
  4778  01B1                     ;serialIO.c: 72:     return( dataOut );
  4779                           	movf	(serialIObyteShift@dataOut),w
  4780  01B1  0872               	goto	l308
  4781  01B2  29B3               	
  4782                           l1622:	
  4783  01B3                     	line	73
  4784                           	
  4785                           l308:	
  4786  01B3                     	return
  4787  01B3  0008               	opt stack 0
  4788                           GLOBAL	__end_of_serialIObyteShift
  4789                           	__end_of_serialIObyteShift:
  4790  01B4                     	signat	_serialIObyteShift,4217
  4791                           	global	_putFIFO
  4792                           
  4793 ;; *************** function _putFIFO *****************
  4794 ;; Defined at:
  4795 ;;		line 17 in file "fifo.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  c               1    wreg     unsigned char 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  c               1    1[COMMON] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4809 ;;      Params:         0       0       0       0       0
  4810 ;;      Locals:         1       0       0       0       0
  4811 ;;      Temps:          1       0       0       0       0
  4812 ;;      Totals:         2       0       0       0       0
  4813 ;;Total ram usage:        2 bytes
  4814 ;; Hardware stack levels used:    1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4822                           	file	"fifo.c"
  4823                           	line	17
  4824                           global __ptext7
  4825                           __ptext7:	;psect for function _putFIFO
  4826  00F2                     psect	text7
  4827                           	file	"fifo.c"
  4828                           	line	17
  4829                           	global	__size_of_putFIFO
  4830                           	__size_of_putFIFO	equ	__end_of_putFIFO-_putFIFO
  4831  000E                     	
  4832                           _putFIFO:	
  4833  00F2                     ;incstack = 0
  4834                           	opt	stack 7
  4835                           ; Regs used in _putFIFO: [wreg-fsr0h+status,2+status,0]
  4836                           ;putFIFO@c stored from wreg
  4837                           	movwf	(putFIFO@c)
  4838  00F2  00F1               	line	19
  4839                           	
  4840                           l1624:	
  4841  00F3                     ;fifo.c: 17: void putFIFO( unsigned char c );fifo.c: 18: {;fifo.c: 19:     fifo[ fifoHea
                                 d ] = c;
  4842                           	movf	(putFIFO@c),w
  4843  00F3  0871               	movwf	(??_putFIFO+0)+0
  4844  00F4  00F0               	movf	(_fifoHead),w
  4845  00F5  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  4846  00F6  3E26               	movwf	fsr0
  4847  00F7  0084               	movf	(??_putFIFO+0)+0,w
  4848  00F8  0870               	bcf	status, 7	;select IRP bank0
  4849  00F9  1383               	movwf	indf
  4850  00FA  0080               	line	20
  4851                           	
  4852                           l1626:	
  4853  00FB                     ;fifo.c: 20:     ++fifoHead;
  4854                           	movlw	low(01h)
  4855  00FB  3001               	movwf	(??_putFIFO+0)+0
  4856  00FC  00F0               	movf	(??_putFIFO+0)+0,w
  4857  00FD  0870               	addwf	(_fifoHead),f
  4858  00FE  07FD               	line	21
  4859                           	
  4860                           l9:	
  4861  00FF                     	return
  4862  00FF  0008               	opt stack 0
  4863                           GLOBAL	__end_of_putFIFO
  4864                           	__end_of_putFIFO:
  4865  0100                     	signat	_putFIFO,4217
  4866                           	global	_previousKey
  4867                           
  4868 ;; *************** function _previousKey *****************
  4869 ;; Defined at:
  4870 ;;		line 55 in file "keyboard.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      unsigned char 
  4877 ;; Registers used:
  4878 ;;		wreg
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4884 ;;      Params:         0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0
  4887 ;;      Totals:         0       0       0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_main
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4897                           	file	"keyboard.c"
  4898                           	line	55
  4899                           global __ptext8
  4900                           __ptext8:	;psect for function _previousKey
  4901  00D9                     psect	text8
  4902                           	file	"keyboard.c"
  4903                           	line	55
  4904                           	global	__size_of_previousKey
  4905                           	__size_of_previousKey	equ	__end_of_previousKey-_previousKey
  4906  0005                     	
  4907                           _previousKey:	
  4908  00D9                     ;incstack = 0
  4909                           	opt	stack 7
  4910                           ; Regs used in _previousKey: [wreg]
  4911                           	line	57
  4912                           	
  4913                           l1658:	
  4914  00D9                     ;keyboard.c: 57:     return( prevKey );
  4915                           	bcf	status, 5	;RP0=0, select bank0
  4916  00D9  1283               	bcf	status, 6	;RP1=0, select bank0
  4917  00DA  1303               	movf	(_prevKey),w
  4918  00DB  0824               	goto	l48
  4919  00DC  28DD               	
  4920                           l1660:	
  4921  00DD                     	line	58
  4922                           	
  4923                           l48:	
  4924  00DD                     	return
  4925  00DD  0008               	opt stack 0
  4926                           GLOBAL	__end_of_previousKey
  4927                           	__end_of_previousKey:
  4928  00DE                     	signat	_previousKey,89
  4929                           	global	_keyboardScan
  4930                           
  4931 ;; *************** function _keyboardScan *****************
  4932 ;; Defined at:
  4933 ;;		line 75 in file "keyboard.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  j               1   10[COMMON] unsigned char 
  4938 ;;  i               1    9[COMMON] unsigned char 
  4939 ;;  aux             1    8[COMMON] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      unsigned char 
  4942 ;; Registers used:
  4943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4949 ;;      Params:         0       0       0       0       0
  4950 ;;      Locals:         3       0       0       0       0
  4951 ;;      Temps:          8       0       0       0       0
  4952 ;;      Totals:        11       0       0       0       0
  4953 ;;Total ram usage:       11 bytes
  4954 ;; Hardware stack levels used:    2
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_main
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4962                           	line	75
  4963                           global __ptext9
  4964                           __ptext9:	;psect for function _keyboardScan
  4965  032A                     psect	text9
  4966                           	file	"keyboard.c"
  4967                           	line	75
  4968                           	global	__size_of_keyboardScan
  4969                           	__size_of_keyboardScan	equ	__end_of_keyboardScan-_keyboardScan
  4970  007F                     	
  4971                           _keyboardScan:	
  4972  032A                     ;incstack = 0
  4973                           	opt	stack 6
  4974                           ; Regs used in _keyboardScan: [wreg-fsr0h+status,2+status,0+pclath]
  4975                           	line	78
  4976                           	
  4977                           l1666:	
  4978  032A                     ;keyboard.c: 77:     unsigned char i, j;;keyboard.c: 78:     unsigned char aux = 0;
  4979                           	clrf	(keyboardScan@aux)
  4980  032A  01F8               	line	80
  4981                           ;keyboard.c: 80:     for( j=0; j<4; j++ )
  4982                           	clrf	(keyboardScan@j)
  4983  032B  01FA               	
  4984                           l1668:	
  4985  032C                     	movlw	low(04h)
  4986  032C  3004               	subwf	(keyboardScan@j),w
  4987  032D  027A               	skipc
  4988  032E  1C03               	goto	u731
  4989  032F  2B31               	goto	u730
  4990  0330  2B32               u731:
  4991  0331                     	goto	l1672
  4992  0331  2B34               u730:
  4993  0332                     	goto	l1692
  4994  0332  2B9D               	
  4995                           l1670:	
  4996  0333                     	goto	l1692
  4997  0333  2B9D               	
  4998                           l54:	
  4999  0334                     	line	82
  5000                           	
  5001                           l1672:	
  5002  0334                     ;keyboard.c: 81:     {;keyboard.c: 82:         KEYBOARDbits.cols = ~(0x01<<j);
  5003                           	movlw	low(01h)
  5004  0334  3001               	movwf	(??_keyboardScan+0)+0
  5005  0335  00F0               	incf	(keyboardScan@j),w
  5006  0336  0A7A               	goto	u744
  5007  0337  2B3A               u745:
  5008  0338                     	clrc
  5009  0338  1003               	rlf	(??_keyboardScan+0)+0,f
  5010  0339  0DF0               u744:
  5011  033A                     	addlw	-1
  5012  033A  3EFF               	skipz
  5013  033B  1D03               	goto	u745
  5014  033C  2B38               	movf	0+(??_keyboardScan+0)+0,w
  5015  033D  0870               	xorlw	0ffh
  5016  033E  3AFF               	movwf	(??_keyboardScan+1)+0
  5017  033F  00F1               	swapf	(??_keyboardScan+1)+0,f
  5018  0340  0EF1               	bcf	status, 5	;RP0=0, select bank0
  5019  0341  1283               	bcf	status, 6	;RP1=0, select bank0
  5020  0342  1303               	movf	(6),w	;volatile
  5021  0343  0806               	xorwf	(??_keyboardScan+1)+0,w
  5022  0344  0671               	andlw	not (((1<<4)-1)<<4)
  5023  0345  390F               	xorwf	(??_keyboardScan+1)+0,w
  5024  0346  0671               	movwf	(6)	;volatile
  5025  0347  0086               	line	83
  5026                           	
  5027                           l1674:	
  5028  0348                     ;keyboard.c: 83:         for( i=0; i<4; i++ )
  5029                           	clrf	(keyboardScan@i)
  5030  0348  01F9               	
  5031                           l1676:	
  5032  0349                     	movlw	low(04h)
  5033  0349  3004               	subwf	(keyboardScan@i),w
  5034  034A  0279               	skipc
  5035  034B  1C03               	goto	u751
  5036  034C  2B4E               	goto	u750
  5037  034D  2B4F               u751:
  5038  034E                     	goto	l1680
  5039  034E  2B51               u750:
  5040  034F                     	goto	l1688
  5041  034F  2B92               	
  5042                           l1678:	
  5043  0350                     	goto	l1688
  5044  0350  2B92               	
  5045                           l56:	
  5046  0351                     	line	85
  5047                           	
  5048                           l1680:	
  5049  0351                     ;keyboard.c: 84:         {;keyboard.c: 85:             if( ~KEYBOARDbits.rows & (0x01<<i
                                 ) )
  5050                           	movf	(6),w	;volatile
  5051  0351  0806               	andlw	(1<<4)-1
  5052  0352  390F               	movwf	(??_keyboardScan+0)+0
  5053  0353  00F0               	comf	(??_keyboardScan+0)+0,w
  5054  0354  0970               	movwf	(??_keyboardScan+1)+0
  5055  0355  00F1               	clrf	(??_keyboardScan+1)+0+1
  5056  0356  01F2               	comf	(??_keyboardScan+1)+0+1
  5057  0357  09F2               	incf	(keyboardScan@i),w
  5058  0358  0A79               	movwf	(??_keyboardScan+3)+0
  5059  0359  00F3               	movlw	01h
  5060  035A  3001               	movwf	(??_keyboardScan+4)+0
  5061  035B  00F4               	movlw	0
  5062  035C  3000               	movwf	(??_keyboardScan+4)+0+1
  5063  035D  00F5               	goto	u764
  5064  035E  2B62               u765:
  5065  035F                     	clrc
  5066  035F  1003               	rlf	(??_keyboardScan+4)+0,f
  5067  0360  0DF4               	rlf	(??_keyboardScan+4)+1,f
  5068  0361  0DF5               u764:
  5069  0362                     	decfsz	(??_keyboardScan+3)+0,f
  5070  0362  0BF3               	goto	u765
  5071  0363  2B5F               	
  5072                           	movf	0+(??_keyboardScan+1)+0,w
  5073  0364  0871               	andwf	0+(??_keyboardScan+4)+0,w
  5074  0365  0574               	movwf	(??_keyboardScan+6)+0
  5075  0366  00F6               	movf	1+(??_keyboardScan+1)+0,w
  5076  0367  0872               	andwf	1+(??_keyboardScan+4)+0,w
  5077  0368  0575               	movwf	1+(??_keyboardScan+6)+0
  5078  0369  00F7               	movf	((??_keyboardScan+6)+0),w
  5079  036A  0876               iorwf	((??_keyboardScan+6)+1),w
  5080  036B  0477               	btfsc	status,2
  5081  036C  1903               	goto	u771
  5082  036D  2B6F               	goto	u770
  5083  036E  2B70               u771:
  5084  036F                     	goto	l1684
  5085  036F  2B87               u770:
  5086  0370                     	line	86
  5087                           	
  5088                           l1682:	
  5089  0370                     ;keyboard.c: 86:                 aux = keyboardMatrix[i][j];
  5090                           	movf	(keyboardScan@i),w
  5091  0370  0879               	movwf	(??_keyboardScan+0)+0
  5092  0371  00F0               	movlw	02h
  5093  0372  3002               u785:
  5094  0373                     	clrc
  5095  0373  1003               	rlf	(??_keyboardScan+0)+0,f
  5096  0374  0DF0               	addlw	-1
  5097  0375  3EFF               	skipz
  5098  0376  1D03               	goto	u785
  5099  0377  2B73               	movlw	(low((((_keyboardMatrix)-__stringbase)|8000h)))&0ffh
  5100  0378  3001               	addwf	0+(??_keyboardScan+0)+0,w
  5101  0379  0770               	movwf	(??_keyboardScan+1)+0
  5102  037A  00F1               	movf	(keyboardScan@j),w
  5103  037B  087A               	addwf	0+(??_keyboardScan+1)+0,w
  5104  037C  0771               	movwf	fsr0
  5105  037D  0084               	fcall	stringdir
  5106  037E  120A  118A  200D  120A  118A  	movwf	(??_keyboardScan+2)+0
  5107  0383  00F2               	movf	(??_keyboardScan+2)+0,w
  5108  0384  0872               	movwf	(keyboardScan@aux)
  5109  0385  00F8               	goto	l1684
  5110  0386  2B87               	
  5111                           l58:	
  5112  0387                     	line	87
  5113                           	
  5114                           l1684:	
  5115  0387                     ;keyboard.c: 87:         }
  5116                           	movlw	low(01h)
  5117  0387  3001               	movwf	(??_keyboardScan+0)+0
  5118  0388  00F0               	movf	(??_keyboardScan+0)+0,w
  5119  0389  0870               	addwf	(keyboardScan@i),f
  5120  038A  07F9               	
  5121                           l1686:	
  5122  038B                     	movlw	low(04h)
  5123  038B  3004               	subwf	(keyboardScan@i),w
  5124  038C  0279               	skipc
  5125  038D  1C03               	goto	u791
  5126  038E  2B90               	goto	u790
  5127  038F  2B91               u791:
  5128  0390                     	goto	l1680
  5129  0390  2B51               u790:
  5130  0391                     	goto	l1688
  5131  0391  2B92               	
  5132                           l57:	
  5133  0392                     	line	88
  5134                           	
  5135                           l1688:	
  5136  0392                     ;keyboard.c: 88:     }
  5137                           	movlw	low(01h)
  5138  0392  3001               	movwf	(??_keyboardScan+0)+0
  5139  0393  00F0               	movf	(??_keyboardScan+0)+0,w
  5140  0394  0870               	addwf	(keyboardScan@j),f
  5141  0395  07FA               	
  5142                           l1690:	
  5143  0396                     	movlw	low(04h)
  5144  0396  3004               	subwf	(keyboardScan@j),w
  5145  0397  027A               	skipc
  5146  0398  1C03               	goto	u801
  5147  0399  2B9B               	goto	u800
  5148  039A  2B9C               u801:
  5149  039B                     	goto	l1672
  5150  039B  2B34               u800:
  5151  039C                     	goto	l1692
  5152  039C  2B9D               	
  5153                           l55:	
  5154  039D                     	line	90
  5155                           	
  5156                           l1692:	
  5157  039D                     ;keyboard.c: 90:     prevKey = currKey;
  5158                           	bcf	status, 5	;RP0=0, select bank0
  5159  039D  1283               	bcf	status, 6	;RP1=0, select bank0
  5160  039E  1303               	movf	(_currKey),w
  5161  039F  0823               	movwf	(??_keyboardScan+0)+0
  5162  03A0  00F0               	movf	(??_keyboardScan+0)+0,w
  5163  03A1  0870               	movwf	(_prevKey)
  5164  03A2  00A4               	line	91
  5165                           ;keyboard.c: 91:     currKey = aux;
  5166                           	movf	(keyboardScan@aux),w
  5167  03A3  0878               	movwf	(??_keyboardScan+0)+0
  5168  03A4  00F0               	movf	(??_keyboardScan+0)+0,w
  5169  03A5  0870               	movwf	(_currKey)
  5170  03A6  00A3               	goto	l59
  5171  03A7  2BA8               	line	93
  5172                           	
  5173                           l1694:	
  5174  03A8                     	line	94
  5175                           ;keyboard.c: 93:     return( aux );;	Return value of _keyboardScan is never used
  5176                           	
  5177                           l59:	
  5178  03A8                     	return
  5179  03A8  0008               	opt stack 0
  5180                           GLOBAL	__end_of_keyboardScan
  5181                           	__end_of_keyboardScan:
  5182  03A9                     	signat	_keyboardScan,89
  5183                           	global	_initSerialIO
  5184                           
  5185 ;; *************** function _initSerialIO *****************
  5186 ;; Defined at:
  5187 ;;		line 89 in file "serialIO.c"
  5188 ;; Parameters:    Size  Location     Type
  5189 ;;  ptrIn           1    wreg     PTR unsigned char 
  5190 ;;		 -> main@sensor(1), 
  5191 ;;  ptrOut          1    0[COMMON] PTR unsigned char 
  5192 ;;		 -> main@atuador(1), 
  5193 ;;  length          1    1[COMMON] unsigned char 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  ptrIn           1    3[COMMON] PTR unsigned char 
  5196 ;;		 -> main@sensor(1), 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5206 ;;      Params:         2       0       0       0       0
  5207 ;;      Locals:         1       0       0       0       0
  5208 ;;      Temps:          1       0       0       0       0
  5209 ;;      Totals:         4       0       0       0       0
  5210 ;;Total ram usage:        4 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_main
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5219                           	file	"serialIO.c"
  5220                           	line	89
  5221                           global __ptext10
  5222                           __ptext10:	;psect for function _initSerialIO
  5223  01E7                     psect	text10
  5224                           	file	"serialIO.c"
  5225                           	line	89
  5226                           	global	__size_of_initSerialIO
  5227                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
  5228  0034                     	
  5229                           _initSerialIO:	
  5230  01E7                     ;incstack = 0
  5231                           	opt	stack 7
  5232                           ; Regs used in _initSerialIO: [wreg]
  5233                           ;initSerialIO@ptrIn stored from wreg
  5234                           	movwf	(initSerialIO@ptrIn)
  5235  01E7  00F3               	line	91
  5236                           	
  5237                           l1742:	
  5238  01E8                     ;serialIO.c: 89: void initSerialIO( unsigned char * ptrIn, unsigned char * ptrOut, unsig
                                 ned char length );serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  5239                           	movf	(initSerialIO@ptrIn),w
  5240  01E8  0873               	movwf	(??_initSerialIO+0)+0
  5241  01E9  00F2               	movf	(??_initSerialIO+0)+0,w
  5242  01EA  0872               	bcf	status, 5	;RP0=0, select bank0
  5243  01EB  1283               	bcf	status, 6	;RP1=0, select bank0
  5244  01EC  1303               	movwf	(_ptrSerialIn)
  5245  01ED  00A2               	line	92
  5246                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  5247                           	movf	(initSerialIO@ptrOut),w
  5248  01EE  0870               	movwf	(??_initSerialIO+0)+0
  5249  01EF  00F2               	movf	(??_initSerialIO+0)+0,w
  5250  01F0  0872               	movwf	(_ptrSerialOut)
  5251  01F1  00A1               	line	93
  5252                           ;serialIO.c: 93:     lenSerialIO = length;
  5253                           	movf	(initSerialIO@length),w
  5254  01F2  0871               	movwf	(??_initSerialIO+0)+0
  5255  01F3  00F2               	movf	(??_initSerialIO+0)+0,w
  5256  01F4  0872               	movwf	(_lenSerialIO)
  5257  01F5  00A0               	line	95
  5258                           	
  5259                           l1744:	
  5260  01F6                     ;serialIO.c: 95:     PORTAbits.RA3 = 0;
  5261                           	bcf	(5),3	;volatile
  5262  01F6  1185               	line	96
  5263                           	
  5264                           l1746:	
  5265  01F7                     ;serialIO.c: 96:     ANSELbits.ANS3 = 0;
  5266                           	bsf	status, 5	;RP0=1, select bank3
  5267  01F7  1683               	bsf	status, 6	;RP1=1, select bank3
  5268  01F8  1703               	bcf	(392)^0180h,3	;volatile
  5269  01F9  1188               	line	97
  5270                           	
  5271                           l1748:	
  5272  01FA                     ;serialIO.c: 97:     TRISAbits.TRISA3 = 0;
  5273                           	bsf	status, 5	;RP0=1, select bank1
  5274  01FA  1683               	bcf	status, 6	;RP1=0, select bank1
  5275  01FB  1303               	bcf	(133)^080h,3	;volatile
  5276  01FC  1185               	line	100
  5277                           	
  5278                           l1750:	
  5279  01FD                     ;serialIO.c: 100:     PORTAbits.RA2 = 0;
  5280                           	bcf	status, 5	;RP0=0, select bank0
  5281  01FD  1283               	bcf	status, 6	;RP1=0, select bank0
  5282  01FE  1303               	bcf	(5),2	;volatile
  5283  01FF  1105               	line	101
  5284                           	
  5285                           l1752:	
  5286  0200                     ;serialIO.c: 101:     ANSELbits.ANS2 = 0;
  5287                           	bsf	status, 5	;RP0=1, select bank3
  5288  0200  1683               	bsf	status, 6	;RP1=1, select bank3
  5289  0201  1703               	bcf	(392)^0180h,2	;volatile
  5290  0202  1108               	line	102
  5291                           	
  5292                           l1754:	
  5293  0203                     ;serialIO.c: 102:     TRISAbits.TRISA2 = 0;
  5294                           	bsf	status, 5	;RP0=1, select bank1
  5295  0203  1683               	bcf	status, 6	;RP1=0, select bank1
  5296  0204  1303               	bcf	(133)^080h,2	;volatile
  5297  0205  1105               	line	105
  5298                           	
  5299                           l1756:	
  5300  0206                     ;serialIO.c: 105:     PORTAbits.RA0 = 0;
  5301                           	bcf	status, 5	;RP0=0, select bank0
  5302  0206  1283               	bcf	status, 6	;RP1=0, select bank0
  5303  0207  1303               	bcf	(5),0	;volatile
  5304  0208  1005               	line	106
  5305                           	
  5306                           l1758:	
  5307  0209                     ;serialIO.c: 106:     ANSELbits.ANS0 = 0;
  5308                           	bsf	status, 5	;RP0=1, select bank3
  5309  0209  1683               	bsf	status, 6	;RP1=1, select bank3
  5310  020A  1703               	bcf	(392)^0180h,0	;volatile
  5311  020B  1008               	line	107
  5312                           	
  5313                           l1760:	
  5314  020C                     ;serialIO.c: 107:     TRISAbits.TRISA0 = 0;
  5315                           	bsf	status, 5	;RP0=1, select bank1
  5316  020C  1683               	bcf	status, 6	;RP1=0, select bank1
  5317  020D  1303               	bcf	(133)^080h,0	;volatile
  5318  020E  1005               	line	110
  5319                           	
  5320                           l1762:	
  5321  020F                     ;serialIO.c: 110:     ANSELbits.ANS1 = 0;
  5322                           	bsf	status, 5	;RP0=1, select bank3
  5323  020F  1683               	bsf	status, 6	;RP1=1, select bank3
  5324  0210  1703               	bcf	(392)^0180h,1	;volatile
  5325  0211  1088               	line	111
  5326                           	
  5327                           l1764:	
  5328  0212                     ;serialIO.c: 111:     TRISAbits.TRISA1 = 1;
  5329                           	bsf	status, 5	;RP0=1, select bank1
  5330  0212  1683               	bcf	status, 6	;RP1=0, select bank1
  5331  0213  1303               	bsf	(133)^080h,1	;volatile
  5332  0214  1485               	line	115
  5333                           	
  5334                           l1766:	
  5335  0215                     ;serialIO.c: 115:     SERIALIO.CLK = 0;
  5336                           	bcf	status, 5	;RP0=0, select bank0
  5337  0215  1283               	bcf	status, 6	;RP1=0, select bank0
  5338  0216  1303               	bcf	(5),2	;volatile
  5339  0217  1105               	line	116
  5340                           	
  5341                           l1768:	
  5342  0218                     ;serialIO.c: 116:     SERIALIO.OUT = 0;
  5343                           	bcf	(5),0	;volatile
  5344  0218  1005               	line	117
  5345                           	
  5346                           l1770:	
  5347  0219                     ;serialIO.c: 117:     SERIALIO.SHLD = 1;
  5348                           	bsf	(5),3	;volatile
  5349  0219  1585               	line	120
  5350                           	
  5351                           l317:	
  5352  021A                     	return
  5353  021A  0008               	opt stack 0
  5354                           GLOBAL	__end_of_initSerialIO
  5355                           	__end_of_initSerialIO:
  5356  021B                     	signat	_initSerialIO,12409
  5357                           	global	_initLCD
  5358                           
  5359 ;; *************** function _initLCD *****************
  5360 ;; Defined at:
  5361 ;;		line 20 in file "lcd.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0
  5377 ;;      Temps:          2       0       0       0       0
  5378 ;;      Totals:         2       0       0       0       0
  5379 ;;Total ram usage:        2 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    1
  5382 ;; This function calls:
  5383 ;;		_cmdLCD
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5389                           	file	"lcd.c"
  5390                           	line	20
  5391                           global __ptext11
  5392                           __ptext11:	;psect for function _initLCD
  5393  028C                     psect	text11
  5394                           	file	"lcd.c"
  5395                           	line	20
  5396                           	global	__size_of_initLCD
  5397                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5398  003F                     	
  5399                           _initLCD:	
  5400  028C                     ;incstack = 0
  5401                           	opt	stack 6
  5402                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5403                           	line	22
  5404                           	
  5405                           l1710:	
  5406  028C                     ;lcd.c: 22:         LCD.B0 = 0;
  5407                           	bcf	status, 5	;RP0=0, select bank0
  5408  028C  1283               	bcf	status, 6	;RP1=0, select bank0
  5409  028D  1303               	bcf	(8),6	;volatile
  5410  028E  1308               	line	23
  5411                           ;lcd.c: 23:         LCD.B1 = 0;
  5412                           	bcf	(8),7	;volatile
  5413  028F  1388               	line	24
  5414                           ;lcd.c: 24:         LCD.RS = 0;
  5415                           	bcf	(8),4	;volatile
  5416  0290  1208               	line	25
  5417                           	
  5418                           l1712:	
  5419  0291                     ;lcd.c: 25:         LCD.BUS = 0x3;
  5420                           	movf	(8),w	;volatile
  5421  0291  0808               	andlw	not (((1<<4)-1)<<0)
  5422  0292  39F0               	iorlw	(03h & ((1<<4)-1))<<0
  5423  0293  3803               	movwf	(8)	;volatile
  5424  0294  0088               	line	26
  5425                           	
  5426                           l1714:	
  5427  0295                     ;lcd.c: 26:         LCD.EN = 1;
  5428                           	bsf	(8),5	;volatile
  5429  0295  1688               	line	27
  5430                           	
  5431                           l1716:	
  5432  0296                     ;lcd.c: 27:         TRISD = 0xC0;
  5433                           	movlw	low(0C0h)
  5434  0296  30C0               	bsf	status, 5	;RP0=1, select bank1
  5435  0297  1683               	bcf	status, 6	;RP1=0, select bank1
  5436  0298  1303               	movwf	(136)^080h	;volatile
  5437  0299  0088               	line	29
  5438                           	
  5439                           l1718:	
  5440  029A                     ;lcd.c: 29:         _delay((unsigned long)((100)*(4000000/4000.0)));
  5441                           	opt asmopt_push
  5442                           opt asmopt_off
  5443                           movlw	130
  5444  029A  3082               movwf	((??_initLCD+0)+0+1),f
  5445  029B  00F5               	movlw	221
  5446  029C  30DD               movwf	((??_initLCD+0)+0),f
  5447  029D  00F4               	u1327:
  5448  029E                     decfsz	((??_initLCD+0)+0),f
  5449  029E  0BF4               	goto	u1327
  5450  029F  2A9E               	decfsz	((??_initLCD+0)+0+1),f
  5451  02A0  0BF5               	goto	u1327
  5452  02A1  2A9E               	nop2
  5453  02A2  2AA3               opt asmopt_pop
  5454                           
  5455                           	line	31
  5456                           	
  5457                           l1720:	
  5458  02A3                     ;lcd.c: 31:         cmdLCD(0x20);
  5459                           	movlw	low(020h)
  5460  02A3  3020               	fcall	_cmdLCD
  5461  02A4  120A  118A  22CB  120A  118A  	line	32
  5462                           	
  5463                           l1722:	
  5464  02A9                     ;lcd.c: 32:         cmdLCD(0x28);
  5465                           	movlw	low(028h)
  5466  02A9  3028               	fcall	_cmdLCD
  5467  02AA  120A  118A  22CB  120A  118A  	line	33
  5468                           	
  5469                           l1724:	
  5470  02AF                     ;lcd.c: 33:         cmdLCD(0x0C);
  5471                           	movlw	low(0Ch)
  5472  02AF  300C               	fcall	_cmdLCD
  5473  02B0  120A  118A  22CB  120A  118A  	line	34
  5474                           	
  5475                           l1726:	
  5476  02B5                     ;lcd.c: 34:         cmdLCD(0x01);
  5477                           	movlw	low(01h)
  5478  02B5  3001               	fcall	_cmdLCD
  5479  02B6  120A  118A  22CB  120A  118A  	line	35
  5480                           	
  5481                           l1728:	
  5482  02BB                     ;lcd.c: 35:         cmdLCD(0x02);
  5483                           	movlw	low(02h)
  5484  02BB  3002               	fcall	_cmdLCD
  5485  02BC  120A  118A  22CB  120A  118A  	line	37
  5486                           	
  5487                           l1730:	
  5488  02C1                     ;lcd.c: 37:         _delay((unsigned long)((100)*(4000000/4000.0)));
  5489                           	opt asmopt_push
  5490                           opt asmopt_off
  5491                           movlw	130
  5492  02C1  3082               movwf	((??_initLCD+0)+0+1),f
  5493  02C2  00F5               	movlw	221
  5494  02C3  30DD               movwf	((??_initLCD+0)+0),f
  5495  02C4  00F4               	u1337:
  5496  02C5                     decfsz	((??_initLCD+0)+0),f
  5497  02C5  0BF4               	goto	u1337
  5498  02C6  2AC5               	decfsz	((??_initLCD+0)+0+1),f
  5499  02C7  0BF5               	goto	u1337
  5500  02C8  2AC5               	nop2
  5501  02C9  2ACA               opt asmopt_pop
  5502                           
  5503                           	line	38
  5504                           	
  5505                           l79:	
  5506  02CA                     	return
  5507  02CA  0008               	opt stack 0
  5508                           GLOBAL	__end_of_initLCD
  5509                           	__end_of_initLCD:
  5510  02CB                     	signat	_initLCD,89
  5511                           	global	_initKeyboard
  5512                           
  5513 ;; *************** function _initKeyboard *****************
  5514 ;; Defined at:
  5515 ;;		line 103 in file "keyboard.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5529 ;;      Params:         0       0       0       0       0
  5530 ;;      Locals:         0       0       0       0       0
  5531 ;;      Temps:          0       0       0       0       0
  5532 ;;      Totals:         0       0       0       0       0
  5533 ;;Total ram usage:        0 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5542                           	file	"keyboard.c"
  5543                           	line	103
  5544                           global __ptext12
  5545                           __ptext12:	;psect for function _initKeyboard
  5546  0111                     psect	text12
  5547                           	file	"keyboard.c"
  5548                           	line	103
  5549                           	global	__size_of_initKeyboard
  5550                           	__size_of_initKeyboard	equ	__end_of_initKeyboard-_initKeyboard
  5551  0013                     	
  5552                           _initKeyboard:	
  5553  0111                     ;incstack = 0
  5554                           	opt	stack 7
  5555                           ; Regs used in _initKeyboard: [wreg+status,2]
  5556                           	line	105
  5557                           	
  5558                           l1696:	
  5559  0111                     ;keyboard.c: 105:     PORTB = 0xFF;
  5560                           	movlw	low(0FFh)
  5561  0111  30FF               	bcf	status, 5	;RP0=0, select bank0
  5562  0112  1283               	bcf	status, 6	;RP1=0, select bank0
  5563  0113  1303               	movwf	(6)	;volatile
  5564  0114  0086               	line	106
  5565                           	
  5566                           l1698:	
  5567  0115                     ;keyboard.c: 106:     ANSELH = 0;
  5568                           	bsf	status, 5	;RP0=1, select bank3
  5569  0115  1683               	bsf	status, 6	;RP1=1, select bank3
  5570  0116  1703               	clrf	(393)^0180h	;volatile
  5571  0117  0189               	line	107
  5572                           	
  5573                           l1700:	
  5574  0118                     ;keyboard.c: 107:     TRISB = 0x0F;
  5575                           	movlw	low(0Fh)
  5576  0118  300F               	bsf	status, 5	;RP0=1, select bank1
  5577  0119  1683               	bcf	status, 6	;RP1=0, select bank1
  5578  011A  1303               	movwf	(134)^080h	;volatile
  5579  011B  0086               	line	108
  5580                           	
  5581                           l1702:	
  5582  011C                     ;keyboard.c: 108:     WPUB = 0xFF;
  5583                           	movlw	low(0FFh)
  5584  011C  30FF               	movwf	(149)^080h	;volatile
  5585  011D  0095               	line	109
  5586                           	
  5587                           l1704:	
  5588  011E                     ;keyboard.c: 109:     OPTION_REGbits.nRBPU = 0;
  5589                           	bcf	(129)^080h,7	;volatile
  5590  011E  1381               	line	111
  5591                           	
  5592                           l1706:	
  5593  011F                     ;keyboard.c: 111:     prevKey = 0;
  5594                           	bcf	status, 5	;RP0=0, select bank0
  5595  011F  1283               	bcf	status, 6	;RP1=0, select bank0
  5596  0120  1303               	clrf	(_prevKey)
  5597  0121  01A4               	line	112
  5598                           	
  5599                           l1708:	
  5600  0122                     ;keyboard.c: 112:     currKey = 0;
  5601                           	clrf	(_currKey)
  5602  0122  01A3               	line	113
  5603                           	
  5604                           l62:	
  5605  0123                     	return
  5606  0123  0008               	opt stack 0
  5607                           GLOBAL	__end_of_initKeyboard
  5608                           	__end_of_initKeyboard:
  5609  0124                     	signat	_initKeyboard,89
  5610                           	global	_getFIFO
  5611                           
  5612 ;; *************** function _getFIFO *****************
  5613 ;; Defined at:
  5614 ;;		line 23 in file "fifo.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;  aux             1    1[COMMON] unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5628 ;;      Params:         0       0       0       0       0
  5629 ;;      Locals:         1       0       0       0       0
  5630 ;;      Temps:          1       0       0       0       0
  5631 ;;      Totals:         2       0       0       0       0
  5632 ;;Total ram usage:        2 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_main
  5638 ;;		_checktecla
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5642                           	file	"fifo.c"
  5643                           	line	23
  5644                           global __ptext13
  5645                           __ptext13:	;psect for function _getFIFO
  5646  014F                     psect	text13
  5647                           	file	"fifo.c"
  5648                           	line	23
  5649                           	global	__size_of_getFIFO
  5650                           	__size_of_getFIFO	equ	__end_of_getFIFO-_getFIFO
  5651  0019                     	
  5652                           _getFIFO:	
  5653  014F                     ;incstack = 0
  5654                           	opt	stack 7
  5655                           ; Regs used in _getFIFO: [wreg-fsr0h+status,2+status,0]
  5656                           	line	25
  5657                           	
  5658                           l1628:	
  5659  014F                     ;fifo.c: 25:     unsigned char aux = 0;
  5660                           	clrf	(getFIFO@aux)
  5661  014F  01F1               	line	27
  5662                           	
  5663                           l1630:	
  5664  0150                     ;fifo.c: 27:     if( fifoTail != fifoHead )
  5665                           	bcf	status, 5	;RP0=0, select bank0
  5666  0150  1283               	bcf	status, 6	;RP1=0, select bank0
  5667  0151  1303               	movf	(_fifoTail),w
  5668  0152  0825               	xorwf	(_fifoHead),w
  5669  0153  067D               	skipnz
  5670  0154  1903               	goto	u701
  5671  0155  2957               	goto	u700
  5672  0156  2958               u701:
  5673  0157                     	goto	l1636
  5674  0157  2965               u700:
  5675  0158                     	line	29
  5676                           	
  5677                           l1632:	
  5678  0158                     ;fifo.c: 28:     {;fifo.c: 29:         aux = fifo[ fifoTail ];
  5679                           	movf	(_fifoTail),w
  5680  0158  0825               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5681  0159  3E26               	movwf	fsr0
  5682  015A  0084               	bcf	status, 7	;select IRP bank0
  5683  015B  1383               	movf	indf,w
  5684  015C  0800               	movwf	(??_getFIFO+0)+0
  5685  015D  00F0               	movf	(??_getFIFO+0)+0,w
  5686  015E  0870               	movwf	(getFIFO@aux)
  5687  015F  00F1               	line	30
  5688                           	
  5689                           l1634:	
  5690  0160                     ;fifo.c: 30:         ++fifoTail;
  5691                           	movlw	low(01h)
  5692  0160  3001               	movwf	(??_getFIFO+0)+0
  5693  0161  00F0               	movf	(??_getFIFO+0)+0,w
  5694  0162  0870               	addwf	(_fifoTail),f
  5695  0163  07A5               	goto	l1636
  5696  0164  2965               	line	31
  5697                           ;fifo.c: 31:     }
  5698                           	
  5699                           l12:	
  5700  0165                     	line	32
  5701                           	
  5702                           l1636:	
  5703  0165                     ;fifo.c: 32:     return( aux );
  5704                           	movf	(getFIFO@aux),w
  5705  0165  0871               	goto	l13
  5706  0166  2967               	
  5707                           l1638:	
  5708  0167                     	line	33
  5709                           	
  5710                           l13:	
  5711  0167                     	return
  5712  0167  0008               	opt stack 0
  5713                           GLOBAL	__end_of_getFIFO
  5714                           	__end_of_getFIFO:
  5715  0168                     	signat	_getFIFO,89
  5716                           	global	_displayFIFO
  5717                           
  5718 ;; *************** function _displayFIFO *****************
  5719 ;; Defined at:
  5720 ;;		line 40 in file "fifo.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      PTR void 
  5727 ;; Registers used:
  5728 ;;		wreg
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5734 ;;      Params:         0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0
  5737 ;;      Totals:         0       0       0       0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_main
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5747                           	line	40
  5748                           global __ptext14
  5749                           __ptext14:	;psect for function _displayFIFO
  5750  00D1                     psect	text14
  5751                           	file	"fifo.c"
  5752                           	line	40
  5753                           	global	__size_of_displayFIFO
  5754                           	__size_of_displayFIFO	equ	__end_of_displayFIFO-_displayFIFO
  5755  0003                     	
  5756                           _displayFIFO:	
  5757  00D1                     ;incstack = 0
  5758                           	opt	stack 7
  5759                           ; Regs used in _displayFIFO: [wreg]
  5760                           	line	42
  5761                           	
  5762                           l1640:	
  5763  00D1                     ;fifo.c: 42:     return( fifo );
  5764                           	movlw	(low(_fifo|((0x0)<<8)))&0ffh
  5765  00D1  3026               	goto	l19
  5766  00D2  28D3               	
  5767                           l1642:	
  5768  00D3                     	line	43
  5769                           	
  5770                           l19:	
  5771  00D3                     	return
  5772  00D3  0008               	opt stack 0
  5773                           GLOBAL	__end_of_displayFIFO
  5774                           	__end_of_displayFIFO:
  5775  00D4                     	signat	_displayFIFO,89
  5776                           	global	_delFIFO
  5777                           
  5778 ;; *************** function _delFIFO *****************
  5779 ;; Defined at:
  5780 ;;		line 45 in file "fifo.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  n               1    wreg     unsigned char 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  n               1    1[COMMON] unsigned char 
  5785 ;;  ret             1    2[COMMON] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      unsigned char 
  5788 ;; Registers used:
  5789 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5795 ;;      Params:         0       0       0       0       0
  5796 ;;      Locals:         2       0       0       0       0
  5797 ;;      Temps:          1       0       0       0       0
  5798 ;;      Totals:         3       0       0       0       0
  5799 ;;Total ram usage:        3 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; This function calls:
  5802 ;;		Nothing
  5803 ;; This function is called by:
  5804 ;;		_main
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5808                           	line	45
  5809                           global __ptext15
  5810                           __ptext15:	;psect for function _delFIFO
  5811  0168                     psect	text15
  5812                           	file	"fifo.c"
  5813                           	line	45
  5814                           	global	__size_of_delFIFO
  5815                           	__size_of_delFIFO	equ	__end_of_delFIFO-_delFIFO
  5816  0021                     	
  5817                           _delFIFO:	
  5818  0168                     ;incstack = 0
  5819                           	opt	stack 7
  5820                           ; Regs used in _delFIFO: [wreg-fsr0h+status,2+status,0]
  5821                           ;delFIFO@n stored from wreg
  5822                           	movwf	(delFIFO@n)
  5823  0168  00F1               	line	48
  5824                           	
  5825                           l1644:	
  5826  0169                     ;fifo.c: 45: unsigned char delFIFO( unsigned char n );fifo.c: 46: {;fifo.c: 47:     unsi
                                 gned char ret;;fifo.c: 48:     while( n && fifoHead )
  5827                           	goto	l22
  5828  0169  297A               	
  5829                           l23:	
  5830  016A                     	line	50
  5831                           	
  5832                           l1646:	
  5833  016A                     ;fifo.c: 49:     {;fifo.c: 50:         --fifoHead;
  5834                           	movlw	01h
  5835  016A  3001               	subwf	(_fifoHead),f
  5836  016B  02FD               	line	51
  5837                           	
  5838                           l1648:	
  5839  016C                     ;fifo.c: 51:         ret = fifo[fifoHead];
  5840                           	movf	(_fifoHead),w
  5841  016C  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5842  016D  3E26               	movwf	fsr0
  5843  016E  0084               	bcf	status, 7	;select IRP bank0
  5844  016F  1383               	movf	indf,w
  5845  0170  0800               	movwf	(??_delFIFO+0)+0
  5846  0171  00F0               	movf	(??_delFIFO+0)+0,w
  5847  0172  0870               	movwf	(delFIFO@ret)
  5848  0173  00F2               	line	52
  5849                           	
  5850                           l1650:	
  5851  0174                     ;fifo.c: 52:         fifo[ fifoHead ] = 0;
  5852                           	movf	(_fifoHead),w
  5853  0174  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5854  0175  3E26               	movwf	fsr0
  5855  0176  0084               	clrf	indf
  5856  0177  0180               	line	53
  5857                           ;fifo.c: 53:         --n;
  5858                           	movlw	01h
  5859  0178  3001               	subwf	(delFIFO@n),f
  5860  0179  02F1               	line	54
  5861                           ;fifo.c: 54:     }
  5862                           	
  5863                           l22:	
  5864  017A                     	line	48
  5865                           ;fifo.c: 48:     while( n && fifoHead )
  5866                           	movf	((delFIFO@n)),w
  5867  017A  0871               	btfsc	status,2
  5868  017B  1903               	goto	u711
  5869  017C  297E               	goto	u710
  5870  017D  297F               u711:
  5871  017E                     	goto	l1654
  5872  017E  2986               u710:
  5873  017F                     	
  5874                           l1652:	
  5875  017F                     	movf	((_fifoHead)),w
  5876  017F  087D               	btfss	status,2
  5877  0180  1D03               	goto	u721
  5878  0181  2983               	goto	u720
  5879  0182  2984               u721:
  5880  0183                     	goto	l1646
  5881  0183  296A               u720:
  5882  0184                     	goto	l1654
  5883  0184  2986               	
  5884                           l25:	
  5885  0185                     	goto	l1654
  5886  0185  2986               	
  5887                           l26:	
  5888  0186                     	line	55
  5889                           	
  5890                           l1654:	
  5891  0186                     ;fifo.c: 55:     return( ret );
  5892                           	movf	(delFIFO@ret),w
  5893  0186  0872               	goto	l27
  5894  0187  2988               	
  5895                           l1656:	
  5896  0188                     	line	56
  5897                           	
  5898                           l27:	
  5899  0188                     	return
  5900  0188  0008               	opt stack 0
  5901                           GLOBAL	__end_of_delFIFO
  5902                           	__end_of_delFIFO:
  5903  0189                     	signat	_delFIFO,4217
  5904                           	global	_currentKey
  5905                           
  5906 ;; *************** function _currentKey *****************
  5907 ;; Defined at:
  5908 ;;		line 65 in file "keyboard.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      unsigned char 
  5915 ;; Registers used:
  5916 ;;		wreg
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5922 ;;      Params:         0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0
  5925 ;;      Totals:         0       0       0       0       0
  5926 ;;Total ram usage:        0 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_main
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5935                           	file	"keyboard.c"
  5936                           	line	65
  5937                           global __ptext16
  5938                           __ptext16:	;psect for function _currentKey
  5939  00D4                     psect	text16
  5940                           	file	"keyboard.c"
  5941                           	line	65
  5942                           	global	__size_of_currentKey
  5943                           	__size_of_currentKey	equ	__end_of_currentKey-_currentKey
  5944  0005                     	
  5945                           _currentKey:	
  5946  00D4                     ;incstack = 0
  5947                           	opt	stack 7
  5948                           ; Regs used in _currentKey: [wreg]
  5949                           	line	67
  5950                           	
  5951                           l1662:	
  5952  00D4                     ;keyboard.c: 67:     return( currKey );
  5953                           	bcf	status, 5	;RP0=0, select bank0
  5954  00D4  1283               	bcf	status, 6	;RP1=0, select bank0
  5955  00D5  1303               	movf	(_currKey),w
  5956  00D6  0823               	goto	l51
  5957  00D7  28D8               	
  5958                           l1664:	
  5959  00D8                     	line	68
  5960                           	
  5961                           l51:	
  5962  00D8                     	return
  5963  00D8  0008               	opt stack 0
  5964                           GLOBAL	__end_of_currentKey
  5965                           	__end_of_currentKey:
  5966  00D9                     	signat	_currentKey,89
  5967                           	global	_clearLCD
  5968                           
  5969 ;; *************** function _clearLCD *****************
  5970 ;; Defined at:
  5971 ;;		line 103 in file "lcd.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0
  5988 ;;      Totals:         0       0       0       0       0
  5989 ;;Total ram usage:        0 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    1
  5992 ;; This function calls:
  5993 ;;		_cmdLCD
  5994 ;; This function is called by:
  5995 ;;		_main
  5996 ;;		_screen_car
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6000                           	file	"lcd.c"
  6001                           	line	103
  6002                           global __ptext17
  6003                           __ptext17:	;psect for function _clearLCD
  6004  00E3                     psect	text17
  6005                           	file	"lcd.c"
  6006                           	line	103
  6007                           	global	__size_of_clearLCD
  6008                           	__size_of_clearLCD	equ	__end_of_clearLCD-_clearLCD
  6009  0007                     	
  6010                           _clearLCD:	
  6011  00E3                     ;incstack = 0
  6012                           	opt	stack 6
  6013                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  6014                           	line	105
  6015                           	
  6016                           l1740:	
  6017  00E3                     ;lcd.c: 105:     cmdLCD(0x01);
  6018                           	movlw	low(01h)
  6019  00E3  3001               	fcall	_cmdLCD
  6020  00E4  120A  118A  22CB  120A  118A  	line	106
  6021                           	
  6022                           l112:	
  6023  00E9                     	return
  6024  00E9  0008               	opt stack 0
  6025                           GLOBAL	__end_of_clearLCD
  6026                           	__end_of_clearLCD:
  6027  00EA                     	signat	_clearLCD,89
  6028                           	global	_cmdLCD
  6029                           
  6030 ;; *************** function _cmdLCD *****************
  6031 ;; Defined at:
  6032 ;;		line 40 in file "lcd.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  cmd             1    wreg     unsigned char 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  cmd             1    2[COMMON] unsigned char 
  6037 ;;  nibble          1    3[COMMON] volatile struct .
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  1    wreg      void 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6047 ;;      Params:         0       0       0       0       0
  6048 ;;      Locals:         2       0       0       0       0
  6049 ;;      Temps:          2       0       0       0       0
  6050 ;;      Totals:         4       0       0       0       0
  6051 ;;Total ram usage:        4 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; This function calls:
  6054 ;;		Nothing
  6055 ;; This function is called by:
  6056 ;;		_initLCD
  6057 ;;		_gotoxy
  6058 ;;		_clearLCD
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6062                           	line	40
  6063                           global __ptext18
  6064                           __ptext18:	;psect for function _cmdLCD
  6065  02CB                     psect	text18
  6066                           	file	"lcd.c"
  6067                           	line	40
  6068                           	global	__size_of_cmdLCD
  6069                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  6070  005F                     	
  6071                           _cmdLCD:	
  6072  02CB                     ;incstack = 0
  6073                           	opt	stack 5
  6074                           ; Regs used in _cmdLCD: [wreg+status,2+status,0]
  6075                           ;cmdLCD@cmd stored from wreg
  6076                           	movwf	(cmdLCD@cmd)
  6077  02CB  00F2               	line	44
  6078                           	
  6079                           l1546:	
  6080  02CC                     ;lcd.c: 40: void cmdLCD( unsigned char cmd );lcd.c: 41: {;lcd.c: 42:         volatile RE
                                 Gnibble_t nibble;;lcd.c: 44:         nibble.HILO = cmd;
  6081                           	movf	(cmdLCD@cmd),w
  6082  02CC  0872               	movwf	(??_cmdLCD+0)+0
  6083  02CD  00F0               	movf	(??_cmdLCD+0)+0,w
  6084  02CE  0870               	movwf	(cmdLCD@nibble)	;volatile
  6085  02CF  00F3               	line	45
  6086                           	
  6087                           l1548:	
  6088  02D0                     ;lcd.c: 45:         LCD.RS = 0;
  6089                           	bcf	status, 5	;RP0=0, select bank0
  6090  02D0  1283               	bcf	status, 6	;RP1=0, select bank0
  6091  02D1  1303               	bcf	(8),4	;volatile
  6092  02D2  1208               	line	46
  6093                           	
  6094                           l1550:	
  6095  02D3                     ;lcd.c: 46:         LCD.BUS = nibble.HI ;
  6096                           	swapf	(cmdLCD@nibble),w	;volatile
  6097  02D3  0E73               	andlw	(1<<4)-1
  6098  02D4  390F               	movwf	(??_cmdLCD+0)+0
  6099  02D5  00F0               	movf	(8),w	;volatile
  6100  02D6  0808               	xorwf	(??_cmdLCD+0)+0,w
  6101  02D7  0670               	andlw	not ((1<<4)-1)
  6102  02D8  39F0               	xorwf	(??_cmdLCD+0)+0,w
  6103  02D9  0670               	movwf	(8)	;volatile
  6104  02DA  0088               	line	47
  6105                           	
  6106                           l1552:	
  6107  02DB                     ;lcd.c: 47:          LCD.EN = 0;
  6108                           	bcf	(8),5	;volatile
  6109  02DB  1288               	line	48
  6110                           	
  6111                           l1554:	
  6112  02DC                     ;lcd.c: 48:         if( cmd == 0x01 || cmd == 0x02 )
  6113                           		decf	((cmdLCD@cmd)),w
  6114  02DC  0372               	btfsc	status,2
  6115  02DD  1903               	goto	u611
  6116  02DE  2AE0               	goto	u610
  6117  02DF  2AE1               u611:
  6118  02E0                     	goto	l1558
  6119  02E0  2AE8               u610:
  6120  02E1                     	
  6121                           l1556:	
  6122  02E1                     		movlw	2
  6123  02E1  3002               	xorwf	((cmdLCD@cmd)),w
  6124  02E2  0672               	btfss	status,2
  6125  02E3  1D03               	goto	u621
  6126  02E4  2AE6               	goto	u620
  6127  02E5  2AE7               u621:
  6128  02E6                     	goto	l1560
  6129  02E6  2AF2               u620:
  6130  02E7                     	goto	l1558
  6131  02E7  2AE8               	
  6132                           l84:	
  6133  02E8                     	line	49
  6134                           	
  6135                           l1558:	
  6136  02E8                     ;lcd.c: 49:         _delay((unsigned long)((2)*(4000000/4000.0)));
  6137                           	opt asmopt_push
  6138                           opt asmopt_off
  6139                           movlw	3
  6140  02E8  3003               movwf	((??_cmdLCD+0)+0+1),f
  6141  02E9  00F1               	movlw	151
  6142  02EA  3097               movwf	((??_cmdLCD+0)+0),f
  6143  02EB  00F0               	u1347:
  6144  02EC                     decfsz	((??_cmdLCD+0)+0),f
  6145  02EC  0BF0               	goto	u1347
  6146  02ED  2AEC               	decfsz	((??_cmdLCD+0)+0+1),f
  6147  02EE  0BF1               	goto	u1347
  6148  02EF  2AEC               	nop2
  6149  02F0  2AF1               opt asmopt_pop
  6150                           
  6151                           	goto	l1562
  6152  02F1  2AF7               	line	50
  6153                           ;lcd.c: 50:         else
  6154                           	
  6155                           l82:	
  6156  02F2                     	line	51
  6157                           	
  6158                           l1560:	
  6159  02F2                     ;lcd.c: 51:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  6160                           	opt asmopt_push
  6161                           opt asmopt_off
  6162                           	movlw	13
  6163  02F2  300D               movwf	((??_cmdLCD+0)+0),f
  6164  02F3  00F0               	u1357:
  6165  02F4                     decfsz	(??_cmdLCD+0)+0,f
  6166  02F4  0BF0               	goto	u1357
  6167  02F5  2AF4               opt asmopt_pop
  6168                           
  6169                           	goto	l1562
  6170  02F6  2AF7               	
  6171                           l85:	
  6172  02F7                     	line	52
  6173                           	
  6174                           l1562:	
  6175  02F7                     ;lcd.c: 52:         LCD.EN = 1;
  6176                           	bcf	status, 5	;RP0=0, select bank0
  6177  02F7  1283               	bcf	status, 6	;RP1=0, select bank0
  6178  02F8  1303               	bsf	(8),5	;volatile
  6179  02F9  1688               	line	54
  6180                           	
  6181                           l1564:	
  6182  02FA                     ;lcd.c: 54:         if( cmd != (0x20) )
  6183                           		movlw	32
  6184  02FA  3020               	xorwf	((cmdLCD@cmd)),w
  6185  02FB  0672               	btfsc	status,2
  6186  02FC  1903               	goto	u631
  6187  02FD  2AFF               	goto	u630
  6188  02FE  2B00               u631:
  6189  02FF                     	goto	l91
  6190  02FF  2B29               u630:
  6191  0300                     	line	56
  6192                           	
  6193                           l1566:	
  6194  0300                     ;lcd.c: 55:     {;lcd.c: 56:        LCD.RS = 0;
  6195                           	bcf	(8),4	;volatile
  6196  0300  1208               	line	57
  6197                           	
  6198                           l1568:	
  6199  0301                     ;lcd.c: 57:        LCD.BUS = nibble.LO;
  6200                           	movf	(cmdLCD@nibble),w	;volatile
  6201  0301  0873               	andlw	(1<<4)-1
  6202  0302  390F               	movwf	(??_cmdLCD+0)+0
  6203  0303  00F0               	movf	(8),w	;volatile
  6204  0304  0808               	xorwf	(??_cmdLCD+0)+0,w
  6205  0305  0670               	andlw	not ((1<<4)-1)
  6206  0306  39F0               	xorwf	(??_cmdLCD+0)+0,w
  6207  0307  0670               	movwf	(8)	;volatile
  6208  0308  0088               	line	58
  6209                           	
  6210                           l1570:	
  6211  0309                     ;lcd.c: 58:        LCD.EN = 0;
  6212                           	bcf	(8),5	;volatile
  6213  0309  1288               	line	59
  6214                           ;lcd.c: 59:        if( cmd == 0x01 || cmd == 0x02 )
  6215                           		decf	((cmdLCD@cmd)),w
  6216  030A  0372               	btfsc	status,2
  6217  030B  1903               	goto	u641
  6218  030C  2B0E               	goto	u640
  6219  030D  2B0F               u641:
  6220  030E                     	goto	l1574
  6221  030E  2B16               u640:
  6222  030F                     	
  6223                           l1572:	
  6224  030F                     		movlw	2
  6225  030F  3002               	xorwf	((cmdLCD@cmd)),w
  6226  0310  0672               	btfss	status,2
  6227  0311  1D03               	goto	u651
  6228  0312  2B14               	goto	u650
  6229  0313  2B15               u651:
  6230  0314                     	goto	l1576
  6231  0314  2B20               u650:
  6232  0315                     	goto	l1574
  6233  0315  2B16               	
  6234                           l89:	
  6235  0316                     	line	60
  6236                           	
  6237                           l1574:	
  6238  0316                     ;lcd.c: 60:             _delay((unsigned long)((2)*(4000000/4000.0)));
  6239                           	opt asmopt_push
  6240                           opt asmopt_off
  6241                           movlw	3
  6242  0316  3003               movwf	((??_cmdLCD+0)+0+1),f
  6243  0317  00F1               	movlw	151
  6244  0318  3097               movwf	((??_cmdLCD+0)+0),f
  6245  0319  00F0               	u1367:
  6246  031A                     decfsz	((??_cmdLCD+0)+0),f
  6247  031A  0BF0               	goto	u1367
  6248  031B  2B1A               	decfsz	((??_cmdLCD+0)+0+1),f
  6249  031C  0BF1               	goto	u1367
  6250  031D  2B1A               	nop2
  6251  031E  2B1F               opt asmopt_pop
  6252                           
  6253                           	goto	l1578
  6254  031F  2B25               	line	61
  6255                           ;lcd.c: 61:        else
  6256                           	
  6257                           l87:	
  6258  0320                     	line	62
  6259                           	
  6260                           l1576:	
  6261  0320                     ;lcd.c: 62:             _delay((unsigned long)((40)*(4000000/4000000.0)));
  6262                           	opt asmopt_push
  6263                           opt asmopt_off
  6264                           	movlw	13
  6265  0320  300D               movwf	((??_cmdLCD+0)+0),f
  6266  0321  00F0               	u1377:
  6267  0322                     decfsz	(??_cmdLCD+0)+0,f
  6268  0322  0BF0               	goto	u1377
  6269  0323  2B22               opt asmopt_pop
  6270                           
  6271                           	goto	l1578
  6272  0324  2B25               	
  6273                           l90:	
  6274  0325                     	line	63
  6275                           	
  6276                           l1578:	
  6277  0325                     ;lcd.c: 63:        LCD.EN = 1;
  6278                           	bcf	status, 5	;RP0=0, select bank0
  6279  0325  1283               	bcf	status, 6	;RP1=0, select bank0
  6280  0326  1303               	bsf	(8),5	;volatile
  6281  0327  1688               	goto	l91
  6282  0328  2B29               	line	64
  6283                           ;lcd.c: 64:     }
  6284                           	
  6285                           l86:	
  6286  0329                     	line	65
  6287                           	
  6288                           l91:	
  6289  0329                     	return
  6290  0329  0008               	opt stack 0
  6291                           GLOBAL	__end_of_cmdLCD
  6292                           	__end_of_cmdLCD:
  6293  032A                     	signat	_cmdLCD,4217
  6294                           global	___latbits
  6295                           ___latbits	equ	2
  6296  0002                     	global	btemp
  6297                           	btemp set 07Eh
  6298  007E                     
  6299                           	DABS	1,126,2	;btemp
  6300                           	global	wtemp0
  6301                           	wtemp0 set btemp+0
  6302  007E                     	end


Data Sizes:
    Strings     42
    Constant    22
    Data        17
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     13      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@atuador(BANK0[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@sensor(BANK0[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 

    writeLCD@ptr	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[12]), STR_1(CODE[13]), checktecla@linha2(BANK0[17]), 
		 -> fifo(BANK0[16]), 

    sp__displayFIFO	PTR void  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_writeLCD
    _writeLCD->_gotoxy
    _gotoxy->_cmdLCD
    _serialIOscan->_serialIObyteShift
    _initLCD->_cmdLCD
    _clearLCD->_cmdLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    3335
                                              0 BANK0     13    13      0
                           _clearLCD
                         _currentKey
                            _delFIFO
                        _displayFIFO
                            _getFIFO
                       _initKeyboard
                            _initLCD
                       _initSerialIO
                       _keyboardScan
                        _previousKey
                            _putFIFO
                       _serialIOscan
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             5     2      3    1213
                                              8 COMMON     5     2      3
                        _displayFIFO (ARG)
                             _gotoxy
                             _putLCD
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               4     4      0      67
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _gotoxy                                               4     3      1     297
                                              4 COMMON     4     3      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         5     5      0     205
                                              4 COMMON     5     5      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _putFIFO                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _previousKey                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _keyboardScan                                        11    11      0     210
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     251
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     177
                                              4 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _initKeyboard                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getFIFO                                              2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayFIFO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delFIFO                                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _currentKey                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearLCD                                             0     0      0     177
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               4     4      0     177
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearLCD
     _cmdLCD
   _currentKey
   _delFIFO
   _displayFIFO
   _getFIFO
   _initKeyboard
   _initLCD
     _cmdLCD
   _initSerialIO
   _keyboardScan
   _previousKey
   _putFIFO
   _serialIOscan
     _serialIObyteShift
     _serialIOload
   _writeLCD
     _displayFIFO (ARG)
     _gotoxy (ARG)
       _cmdLCD
     _putLCD (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      42      12        0.0%
ABS                  0      0      42       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Nov 12 15:45:46 2019

              ?_displayFIFO 0070                           l9 00FF                           pc 0002  
                        l12 0165                          l13 0167                          l22 017A  
                        l23 016A                          l25 0185                          l26 0186  
                        l51 00D8                          l27 0188                          l19 00D3  
                        l62 0123                          l54 0334                          l55 039D  
                        l56 0351                          l48 00DD                          l57 0392  
                        l90 0325                          l82 02F2                          l58 0387  
                        l91 0329                          l59 03A8                          l84 02E8  
                        l85 02F7                          l86 0329                          l94 024E  
                        l87 0320                          l79 02CA                          l89 0316  
                        l97 014E                          fsr 0004                         l100 01D5  
                       l101 01C0                         l102 01E6                         l103 01E6  
                       l112 00E9                         l200 0498                         l201 04A9  
                       l210 04D9                         l202 04AF                         l211 04DF  
                       l203 04B8                         l220 054D                         l212 04E8  
                       l204 04B9                         l221 0552                         l213 04E9  
                       l205 04BF                         l302 01A9                         l230 05D4  
                       l222 0568                         l214 04FE                         l206 04C8  
                       l303 0190                         l311 027D                         l231 05D9  
                       l223 056D                         l215 0503                         l207 04C9  
                       l304 019B                         l312 025D                         l240 0609  
                       l232 05DF                         l224 0583                         l216 0518  
                       l208 04CF                         l305 019C                         l313 0286  
                       l241 060F                         l233 05E8                         l225 0588  
                       l217 051D                         l209 04D8                         l306 01A5  
                       l314 028B                         l250 06DE                         l242 0618  
                       l234 05E9                         l226 059E                         l218 0532  
                       l170 03F3                         l307 01AE                         l243 07DB  
                       l251 06E8                         l235 05EF                         l227 05A3  
                       l219 0537                         l171 04A7                         l163 03CC  
                       l308 01B3                         l244 0791                         l260 0734  
                       l252 06E9                         l164 061A                         l236 05F8  
                       l228 05B9                         l180 042A                         l172 03FE  
                       l317 021A                         l261 0735                         l253 06FA  
                       l245 06B3                         l237 05F9                         l229 05BE  
                       l173 04A6                         l181 04A2                         l165 03D2  
                       l270 0743                         l262 0736                         l254 0704  
                       l246 06C2                         l166 0694                         l238 05FF  
                       l190 0461                         l182 0435                         l174 0409  
                       l271 0783                         l263 0737                         l255 0705  
                       l247 06CC                         l239 0608                         l175 04A5  
                       l183 04A1                         l191 049D                         l167 03D3  
                       l280 07E1                         l248 07CB                         l272 0747  
                       l264 0738                         l256 0716                         l192 046C  
                       l184 0440                         l176 0414                         l168 03E8  
                       l281 07E2                         l273 074A                         l265 0739  
                       l257 0720                         l249 06CD                         l169 04A8  
                       l177 04A4                         l185 04A0                         l193 049C  
                       l282 07E2                         l274 074C                         l266 073A  
                       l258 0721                         l194 0477                         l186 044B  
                       l178 041F                         l275 074F                         l267 073B  
                       l259 0733                         l179 04A3                         l187 049F  
                       l195 049B                         l276 0751                         l268 0742  
                       l196 0482                         l188 0456                         l269 075A  
                       l277 0754                         l189 049E                         l197 049A  
                       l278 0756                         l198 048D                         l279 0789  
                       l199 0499                         l299 00E2                         _LCD 0008  
                       u610 02E1                         u611 02E0                         u620 02E7  
                       u700 0158                         u621 02E6                         u701 0157  
                       u630 0300                         u710 017F                         u631 02FF  
                       u711 017E                         u640 030F                         u720 0184  
                       u800 039C                         u641 030E                         u721 0183  
                       u801 039B                         u650 0315                         u730 0332  
                       u810 01E5                         u651 0314                         u731 0331  
                       u811 01E4                         u820 0285                         u900 03E3  
                       u821 0284                         u901 03E2                         u750 034F  
                       u670 0199                         u910 03EE                         u751 034E  
                       u671 0198                         u911 03ED                         u744 033A  
                       u680 01A0                         u920 03F9                         u745 0338  
                       u681 019F                         u665 013E                         u921 03F8  
                       u770 0370                         u690 01AE                         u930 0404  
                       u771 036F                         u691 01AD                         u931 0403  
                       u764 0362                         u940 040F                         u765 035F  
                       u941 040E                         u790 0391                         u950 041A  
                       u791 0390                         u951 0419                         u960 0425  
                       u785 0373                         u961 0424                         u970 0430  
                       u971 042F                         u980 043B                         u981 043A  
                       u990 0446                         u991 0445                         fsr0 0004  
                       indf 0000                __CFG_LVP$OFF 0000                        l2000 06E9  
                      l2010 070B                        l2002 06EF                        l2020 072C  
                      l2012 070F                        l2004 06F3                        l2030 0754  
                      l2022 073B                        l2014 0716                        l2006 06FA  
                      l2040 0790                        l2032 0759                        l2024 0743  
                      l2016 0721                        l2008 0705                        l2026 074A  
                      l2034 075A                        l2018 0727                        l2042 0791  
                      l2028 074F                        l2036 0783                        l2044 07CB  
                      l2038 0789                        l2046 07DB                        l1600 0138  
                      l1610 0199                        l1602 00DE                        l1700 0118  
                      l1620 01B1                        l1612 01A0                        l1604 018A  
                      l1550 02D3                        l1630 0150                        l1702 011C  
                      l1710 028C                        l1622 01B3                        l1614 01A5  
                      l1606 018E                        l1560 02F2                        l1552 02DB  
                      l1640 00D1                        l1632 0158                        l1704 011E  
                      l1720 02A3                        l1712 0291                        l1624 00F3  
                      l1616 01A6                        l1608 0193                        l2192 0624  
                      l1570 0309                        l1562 02F7                        l1554 02DC  
                      l1546 02CC                        l1650 0174                        l1642 00D3  
                      l1634 0160                        l1706 011F                        l1730 02C1  
                      l1722 02A9                        l1714 0295                        l1626 00FB  
                      l1618 01A9                        l2194 068C                        l1572 030F  
                      l1564 02FA                        l1556 02E1                        l1548 02D0  
                      l1740 00E3                        l1652 017F                        l1644 0169  
                      l1636 0165                        l1628 014F                        l1708 0122  
                      l1724 02AF                        l1716 0296                        l1660 00DD  
                      l1580 021C                        l1732 01B5                        l2196 0769  
                      l1900 0488                        l1574 0316                        l1566 0300  
                      l1558 02E8                        l1662 00D4                        l1654 0186  
                      l1646 016A                        l1638 0167                        l1726 02B5  
                      l1718 029A                        l1750 01FD                        l1742 01E8  
                      l1670 0333                        l1590 0235                        l1582 0220  
                      l1734 01C0                        l2198 0799                        l1910 04BA  
                      l1902 048D                        l1830 03BA                        l1576 0320  
                      l1568 0301                        l1664 00D8                        l1656 0188  
                      l1648 016C                        l1728 02BB                        l1760 020C  
                      l1752 0200                        l1744 01F6                        l1680 0351  
                      l1672 0334                        l1592 0238                        l1584 0223  
                      l1736 01D0                        l1920 04E3                        l1912 04C3  
                      l1904 0493                        l1840 03E3                        l1832 03C8  
                      l1824 03A9                        l1578 0325                        l1770 0219  
                      l1762 020F                        l1754 0203                        l1746 01F7  
                      l1690 0396                        l1682 0370                        l1674 0348  
                      l1666 032A                        l1658 00D9                        l1594 0241  
                      l1586 022B                        l1738 01D5                        l1930 051D  
                      l1922 04E9                        l1914 04CA                        l1906 04AA  
                      l1850 03FE                        l1842 03E8                        l1834 03CC  
                      l1826 03B0                        l1764 0212                        l1756 0206  
                      l1748 01FA                        l1684 0387                        l1676 0349  
                      l1692 039D                        l1668 032C                        l1780 0278  
                      l1772 024F                        l1596 0242                        l1588 022C  
                      l1940 0568                        l1932 0532                        l1924 04FE  
                      l1916 04D3                        l1908 04B3                        l1860 041A  
                      l1852 0404                        l1844 03EE                        l1836 03D3  
                      l1828 03B5                        l1766 0215                        l1758 0209  
                      l1694 03A8                        l1686 038B                        l1678 0350  
                      l1782 027D                        l1774 0256                        l1598 024B  
                      l1950 05A3                        l1942 056D                        l1934 0537  
                      l1926 0503                        l1918 04DA                        l1870 0435  
                      l1862 041F                        l1854 0409                        l1846 03F3  
                      l1838 03DD                        l1696 0111                        l1768 0218  
                      l1688 0392                        l1784 0286                        l1776 025B  
                      l1960 05E3                        l1952 05B9                        l1944 0583  
                      l1936 054D                        l1928 0518                        l1880 0451  
                      l1872 043B                        l1864 0425                        l1856 040F  
                      l1848 03F9                        l1698 0115                        l1778 025D  
                      l1970 060A                        l1962 05EA                        l1954 05BE  
                      l1946 0588                        l1938 0552                        l1890 046C  
                      l1882 0456                        l1874 0440                        l1866 042A  
                      l1858 0414                        l1980 069E                        l1972 0613  
                      l1964 05F3                        l1956 05D4                        l1948 059E  
                      l1892 0472                        l1884 045C                        l1876 0446  
                      l1868 0430                        l1990 06C2                        l1982 06A8  
                      l1974 0619                        l1966 05FA                        l1958 05DA  
                      l1894 0477                        l1886 0461                        l1878 044B  
                      l1992 06CD                        l1984 06B3                        l1968 0603  
                      l1896 047D                        l1888 0467                        l1976 061A  
                      l1994 06D3                        l1986 06B7                        l1898 0482  
                      l1978 0694                        l1996 06D7                        l1988 06BB  
                      l1998 06DE                 main@atuador 004E                        STR_1 003A  
                      STR_2 0047                        STR_3 0029                        u1000 0451  
                      u1001 0450                        u1010 045C                        u1011 045B  
                      u1100 04E3                        u1020 0467                        u1101 04E2  
                      u1021 0466                        u1110 05E3                        u1030 0472  
                      u1111 05E2                        u1031 0471                        u1200 070F  
                      u1120 05F3                        u1040 047D                        u1201 070E  
                      u1121 05F2                        u1041 047C                        u1130 0603  
                      u1050 0488                        u1131 0602                        u1051 0487  
                      u1140 0613                        u1060 0493                        u1141 0612  
                      u1061 0492                        u1150 069E                        u1070 04B3  
                      u1151 069D                        u1071 04B2                        u1160 06A8  
                      u1080 04C3                        u1161 06A7                        u1217 04F1  
                      u1081 04C2                        u1170 06BB                        u1090 04D3  
                      u1307 0230                        u1171 06BA                        u1227 050B  
                      u1091 04D2                        u1180 06D7                        u1317 0246  
                      u1181 06D6                        u1237 0525                        u1190 06F3  
                      u1327 029E                        u1191 06F2                        u1247 053F  
                      u1337 02C5                        u1257 055A                        u1347 02EC  
                      u1267 0575                        u1357 02F4                        u1277 0590  
                      u1367 031A                        u1287 05AB                        u1377 0322  
                      u1297 05C6                        _WPUB 0095                        _fifo 0026  
                      _main 03A9                        btemp 007E                        start 0000  
                     ?_main 0070               __CFG_WDTE$OFF 0000             __end_of_delFIFO 0189  
                     _PORTB 0006             __end_of_getFIFO 0168                       _TRISB 0086  
                     _TRISD 0088             __end_of_initLCD 02CB                       main@a 004A  
                     main@b 004B                       main@c 004C                       main@d 004D  
           __end_of_putFIFO 0100                       pclath 000A                       status 0003  
                     wtemp0 007E              __CFG_MCLRE$OFF 0000             __initialization 07E5  
              __end_of_main 07E5               ?_initKeyboard 0070                      ??_main 0047  
             ?_initSerialIO 0070                      _ANSELH 0189               ?_keyboardScan 0070  
          __end_of_clearLCD 00EA                      _cmdLCD 02CB              ??_initKeyboard 0070  
                 ??_delFIFO 0070                   ??_getFIFO 0070        __size_of_displayFIFO 0003  
                    _gotoxy 0137                      _putLCD 021B              ??_initSerialIO 0072  
                 ??_initLCD 0074                   ??_putFIFO 0070            __end_of_writeLCD 01E7  
            ??_keyboardScan 0070                ?_previousKey 0070     __end_of__initialization 07FC  
         _serialIObyteShift 0189          ?_serialIObyteShift 0070              __pcstackCOMMON 0070  
              __pidataBANK0 0100         ??_serialIObyteShift 0070              _OPTION_REGbits 0081  
         initSerialIO@ptrIn 0073                  delFIFO@ret 0072                  __pbssBANK0 0020  
 __end_of_serialIObyteShift 01B4        __end_of_indicePassos 0028                  __pmaintext 03A9  
              cmdLCD@nibble 0073                     ?_cmdLCD 0070                     ?_gotoxy 0074  
                   ?_putLCD 0070     serialIObyteShift@dataIn 0071                   ?_clearLCD 0070  
      __end_of_initKeyboard 0124                  __stringtab 0003               ?_serialIOload 0070  
             ?_serialIOscan 0070        __end_of_initSerialIO 021B                  getFIFO@aux 0071  
           __size_of_cmdLCD 005F                     _delFIFO 0168                  _currentKey 00D4  
                   _getFIFO 014F                   _ANSELbits 0188        __end_of_keyboardScan 03A9  
           __size_of_gotoxy 0018                   ?_writeLCD 0078             __size_of_putLCD 0034  
                   __ptext1 01B4                     __ptext2 021B                     __ptext3 0137  
                   __ptext4 024F                     __ptext5 00DE                     __ptext6 0189  
                   __ptext7 00F2                     __ptext8 00D9                     __ptext9 032A  
                   _initLCD 028C                     _currKey 0023                  ??_clearLCD 0074  
                   _putFIFO 00F2             checktecla@F1328 0036                     _prevKey 0024  
                   clrloop0 00EB        end_of_initialization 07FC              ??_serialIOload 0070  
            ??_serialIOscan 0074  __size_of_serialIObyteShift 002B                     gotoxy@x 0077  
                   gotoxy@y 0074        __size_of_previousKey 0005                     putLCD@c 0072  
                ??_writeLCD 007B                   _PORTAbits 0005       __end_of_indPassosSize 0029  
              _KEYBOARDbits 0006                   _TRISAbits 0085             keyboardScan@aux 0078  
                main@estado 0051                  main@sensor 004F               ??_displayFIFO 0070  
            __end_of_cmdLCD 032A                 ?_currentKey 0070                _indicePassos 0023  
            __end_of_gotoxy 014F              __end_of_putLCD 024F         start_initialization 07E5  
     __size_of_initKeyboard 0013       __size_of_initSerialIO 0034          initSerialIO@length 0071  
        initSerialIO@ptrOut 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_keyboardScan 007F  
                  ??_cmdLCD 0070                  init_fetch0 0124              _keyboardMatrix 0013  
               __pdataBANK0 0036                _initKeyboard 0111                    ??_gotoxy 0075  
                  ??_putLCD 0070        __end_of_serialIOload 00E3        __end_of_serialIOscan 028C  
       __end_of_displayFIFO 00D4                _initSerialIO 01E7                 __pbssCOMMON 007D  
                 ___latbits 0002               __pcstackBANK0 0047           __size_of_clearLCD 0007  
       __size_of_currentKey 0005                _keyboardScan 032A      __end_of_keyboardMatrix 0023  
                 cmdLCD@cmd 0072                    ?_delFIFO 0070               serialIOscan@i 0078  
             serialIOscan@j 0077                    ?_getFIFO 0070                   __pstrings 0003  
                  ?_initLCD 0070           __size_of_writeLCD 0033                    ?_putFIFO 0070  
  serialIObyteShift@dataBit 0073    serialIObyteShift@dataOut 0072                 writeLCD@ptr 0079  
                 clear_ram0 00EA                    _SERIALIO 0005                 _displayFIFO 00D1  
               __stringbase 0012                putLCD@nibble 0073                 _lenSerialIO 0020  
                 main@tecla 0050               ??_previousKey 0070       __size_of_serialIOload 0005  
     __size_of_serialIOscan 003D                ??_currentKey 0070            __size_of_delFIFO 0021  
          __size_of_getFIFO 0019          __end_of__stringtab 0013                    delFIFO@n 0071  
          __size_of_initLCD 003F                    _clearLCD 00E3                    _fifoHead 007D  
          __size_of_putFIFO 000E                    _fifoTail 0025                    __ptext10 01E7  
                  __ptext11 028C                    __ptext12 0111                    __ptext13 014F  
                  __ptext14 00D1                    __ptext15 0168                    __ptext16 00D4  
                  __ptext17 00E3                    __ptext18 02CB                _serialIOload 00DE  
              _serialIOscan 024F               __size_of_main 043C          __end_of_currentKey 00D9  
       __end_of_previousKey 00DE               keyboardScan@i 0079               keyboardScan@j 007A  
                  main@rest 0053                    _writeLCD 01B4                    init_ram0 0128  
                  putFIFO@c 0071                   writeLCD@x 007C                   writeLCD@y 0078  
                 stringcode 000D                _ptrSerialOut 0021               _indPassosSize 0028  
                  stringdir 000D                    stringtab 0003                 _ptrSerialIn 0022  
               _previousKey 00D9  
