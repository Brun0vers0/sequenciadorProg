

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Nov 11 17:23:15 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_clearLCD
  1180                           	FNCALL	_main,_currentKey
  1181                           	FNCALL	_main,_delFIFO
  1182                           	FNCALL	_main,_displayFIFO
  1183                           	FNCALL	_main,_getFIFO
  1184                           	FNCALL	_main,_initKeyboard
  1185                           	FNCALL	_main,_initLCD
  1186                           	FNCALL	_main,_initSerialIO
  1187                           	FNCALL	_main,_keyboardScan
  1188                           	FNCALL	_main,_previousKey
  1189                           	FNCALL	_main,_putFIFO
  1190                           	FNCALL	_main,_serialIOscan
  1191                           	FNCALL	_main,_writeLCD
  1192                           	FNCALL	_writeLCD,_gotoxy
  1193                           	FNCALL	_writeLCD,_putLCD
  1194                           	FNCALL	_gotoxy,_cmdLCD
  1195                           	FNCALL	_serialIOscan,_serialIObyteShift
  1196                           	FNCALL	_serialIOscan,_serialIOload
  1197                           	FNCALL	_initLCD,_cmdLCD
  1198                           	FNCALL	_clearLCD,_cmdLCD
  1199                           	FNROOT	_main
  1200                           	global	_keyboardMatrix
  1201                           psect	strings,class=STRING,delta=2,noexec
  1202                           global __pstrings
  1203                           __pstrings:
  1204  0003                     stringtab:
  1205  0003                     	global    __stringtab
  1206                           __stringtab:
  1207  0003                     ;	String table - string pointers are 1 byte each
  1208                           stringcode:stringdir:
  1209  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1210  0003  3000               movwf pclath
  1211  0004  008A               movf fsr,w
  1212  0005  0804               incf fsr
  1213  0006  0A84               	addwf pc
  1214  0007  0782               	global __stringbase
  1215                           __stringbase:
  1216  0008                     	retlw	0
  1217  0008  3400               psect	strings
  1218                           	global    __end_of__stringtab
  1219                           __end_of__stringtab:
  1220  0009                     	file	"keyboard.c"
  1221                           	line	39
  1222                           _keyboardMatrix:
  1223  0009                     	retlw	031h
  1224  0009  3431               	retlw	032h
  1225  000A  3432               	retlw	033h
  1226  000B  3433               	retlw	041h
  1227  000C  3441               	retlw	034h
  1228  000D  3434               	retlw	035h
  1229  000E  3435               	retlw	036h
  1230  000F  3436               	retlw	042h
  1231  0010  3442               	retlw	037h
  1232  0011  3437               	retlw	038h
  1233  0012  3438               	retlw	039h
  1234  0013  3439               	retlw	043h
  1235  0014  3443               	retlw	02Ah
  1236  0015  342A               	retlw	030h
  1237  0016  3430               	retlw	023h
  1238  0017  3423               	retlw	044h
  1239  0018  3444               	global __end_of_keyboardMatrix
  1240                           __end_of_keyboardMatrix:
  1241  0019                     	global	_keyboardMatrix
  1242                           	global	_fifoTail
  1243                           	global	_fifoHead
  1244                           	global	_lenSerialIO
  1245                           	global	_ptrSerialOut
  1246                           	global	_ptrSerialIn
  1247                           	global	_currKey
  1248                           	global	_prevKey
  1249                           	global	_fifo
  1250                           	global	_SERIALIO
  1251                           _SERIALIO	set	5
  1252  0005                     	global	_PORTAbits
  1253                           _PORTAbits	set	0x5
  1254  0005                     	global	_LCD
  1255                           _LCD	set	8
  1256  0008                     	global	_PORTB
  1257                           _PORTB	set	0x6
  1258  0006                     	global	_KEYBOARDbits
  1259                           _KEYBOARDbits	set	0x6
  1260  0006                     	global	_TRISAbits
  1261                           _TRISAbits	set	0x85
  1262  0085                     	global	_TRISD
  1263                           _TRISD	set	0x88
  1264  0088                     	global	_OPTION_REGbits
  1265                           _OPTION_REGbits	set	0x81
  1266  0081                     	global	_WPUB
  1267                           _WPUB	set	0x95
  1268  0095                     	global	_TRISB
  1269                           _TRISB	set	0x86
  1270  0086                     	global	_ANSELbits
  1271                           _ANSELbits	set	0x188
  1272  0188                     	global	_ANSELH
  1273                           _ANSELH	set	0x189
  1274  0189                     ; #config settings
  1275                           global __CFG_FOSC$INTRC_NOCLKOUT
  1276                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1277  0000                     global __CFG_WDTE$OFF
  1278                           __CFG_WDTE$OFF equ 0x0
  1279  0000                     global __CFG_MCLRE$OFF
  1280                           __CFG_MCLRE$OFF equ 0x0
  1281  0000                     global __CFG_LVP$OFF
  1282                           __CFG_LVP$OFF equ 0x0
  1283  0000                     	file	"C:\Users\18175218\AppData\Local\Temp\s9pc."
  1284                           	line	#
  1285                           psect cinit,class=CODE,delta=2
  1286                           global start_initialization
  1287                           start_initialization:
  1288  07F1                     
  1289                           global __initialization
  1290                           __initialization:
  1291  07F1                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1292                           global __pbssCOMMON
  1293                           __pbssCOMMON:
  1294  007C                     _fifoTail:
  1295  007C                            ds      1
  1296  007C                     
  1297                           _fifoHead:
  1298  007D                            ds      1
  1299  007D                     
  1300                           psect	bssBANK0,class=BANK0,space=1,noexec
  1301                           global __pbssBANK0
  1302                           __pbssBANK0:
  1303  0020                     _lenSerialIO:
  1304  0020                            ds      1
  1305  0020                     
  1306                           _ptrSerialOut:
  1307  0021                            ds      1
  1308  0021                     
  1309                           _ptrSerialIn:
  1310  0022                            ds      1
  1311  0022                     
  1312                           _currKey:
  1313  0023                            ds      1
  1314  0023                     
  1315                           _prevKey:
  1316  0024                            ds      1
  1317  0024                     
  1318                           _fifo:
  1319  0025                            ds      16
  1320  0025                     
  1321                           	file	"C:\Users\18175218\AppData\Local\Temp\s9pc."
  1322                           	line	#
  1323                           psect clrtext,class=CODE,delta=2
  1324                           global clear_ram0
  1325                           ;	Called with FSR containing the base address, and
  1326                           ;	W with the last address+1
  1327                           clear_ram0:
  1328  012A                     	clrwdt			;clear the watchdog before getting into this loop
  1329  012A  0064               clrloop0:
  1330  012B                     	clrf	indf		;clear RAM location pointed to by FSR
  1331  012B  0180               	incf	fsr,f		;increment pointer
  1332  012C  0A84               	xorwf	fsr,w		;XOR with final address
  1333  012D  0604               	btfsc	status,2	;have we reached the end yet?
  1334  012E  1903               	retlw	0		;all done for this memory range, return
  1335  012F  3400               	xorwf	fsr,w		;XOR again to restore value
  1336  0130  0604               	goto	clrloop0		;do the next byte
  1337  0131  292B               
  1338                           ; Clear objects allocated to COMMON
  1339                           psect cinit,class=CODE,delta=2,merge=1
  1340                           	clrf	((__pbssCOMMON)+0)&07Fh
  1341  07F1  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
  1342  07F2  01FD               ; Clear objects allocated to BANK0
  1343                           psect cinit,class=CODE,delta=2,merge=1
  1344                           	bcf	status, 7	;select IRP bank0
  1345  07F3  1383               	movlw	low(__pbssBANK0)
  1346  07F4  3020               	movwf	fsr
  1347  07F5  0084               	movlw	low((__pbssBANK0)+015h)
  1348  07F6  3035               	fcall	clear_ram0
  1349  07F7  120A  118A  212A  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1350                           global end_of_initialization,__end_of__initialization
  1351                           
  1352                           ;End of C runtime variable initialization code
  1353                           
  1354                           end_of_initialization:
  1355  07FC                     __end_of__initialization:
  1356  07FC                     clrf status
  1357  07FC  0183               ljmp _main	;jump to C main() function
  1358  07FD  120A  118A  2BB4   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1359                           global __pcstackCOMMON
  1360                           __pcstackCOMMON:
  1361  0070                     ?_displayFIFO:	; 1 bytes @ 0x0
  1362  0070                     ??_displayFIFO:	; 1 bytes @ 0x0
  1363  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1364  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1365  0070                     ?_initSerialIO:	; 1 bytes @ 0x0
  1366  0070                     ?_serialIOscan:	; 1 bytes @ 0x0
  1367  0070                     ?_putFIFO:	; 1 bytes @ 0x0
  1368  0070                     ??_putFIFO:	; 1 bytes @ 0x0
  1369  0070                     ?_getFIFO:	; 1 bytes @ 0x0
  1370  0070                     ??_getFIFO:	; 1 bytes @ 0x0
  1371  0070                     ?_delFIFO:	; 1 bytes @ 0x0
  1372  0070                     ??_delFIFO:	; 1 bytes @ 0x0
  1373  0070                     ?_previousKey:	; 1 bytes @ 0x0
  1374  0070                     ??_previousKey:	; 1 bytes @ 0x0
  1375  0070                     ?_currentKey:	; 1 bytes @ 0x0
  1376  0070                     ??_currentKey:	; 1 bytes @ 0x0
  1377  0070                     ?_keyboardScan:	; 1 bytes @ 0x0
  1378  0070                     ??_keyboardScan:	; 1 bytes @ 0x0
  1379  0070                     ?_initKeyboard:	; 1 bytes @ 0x0
  1380  0070                     ??_initKeyboard:	; 1 bytes @ 0x0
  1381  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1382  0070                     ?_putLCD:	; 1 bytes @ 0x0
  1383  0070                     ??_putLCD:	; 1 bytes @ 0x0
  1384  0070                     ?_clearLCD:	; 1 bytes @ 0x0
  1385  0070                     ?_main:	; 1 bytes @ 0x0
  1386  0070                     ?_serialIOload:	; 1 bytes @ 0x0
  1387  0070                     ??_serialIOload:	; 1 bytes @ 0x0
  1388  0070                     ?_serialIObyteShift:	; 1 bytes @ 0x0
  1389  0070                     ??_serialIObyteShift:	; 1 bytes @ 0x0
  1390  0070                     	global	initSerialIO@ptrOut
  1391                           initSerialIO@ptrOut:	; 1 bytes @ 0x0
  1392  0070                     	ds	1
  1393  0070                     	global	putFIFO@c
  1394                           putFIFO@c:	; 1 bytes @ 0x1
  1395  0071                     	global	getFIFO@aux
  1396                           getFIFO@aux:	; 1 bytes @ 0x1
  1397  0071                     	global	delFIFO@n
  1398                           delFIFO@n:	; 1 bytes @ 0x1
  1399  0071                     	global	serialIObyteShift@dataIn
  1400                           serialIObyteShift@dataIn:	; 1 bytes @ 0x1
  1401  0071                     	global	initSerialIO@length
  1402                           initSerialIO@length:	; 1 bytes @ 0x1
  1403  0071                     	ds	1
  1404  0071                     ??_initSerialIO:	; 1 bytes @ 0x2
  1405  0072                     	global	delFIFO@ret
  1406                           delFIFO@ret:	; 1 bytes @ 0x2
  1407  0072                     	global	cmdLCD@cmd
  1408                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1409  0072                     	global	putLCD@c
  1410                           putLCD@c:	; 1 bytes @ 0x2
  1411  0072                     	global	serialIObyteShift@dataOut
  1412                           serialIObyteShift@dataOut:	; 1 bytes @ 0x2
  1413  0072                     	ds	1
  1414  0072                     	global	cmdLCD@nibble
  1415                           cmdLCD@nibble:	; 1 bytes @ 0x3
  1416  0073                     	global	putLCD@nibble
  1417                           putLCD@nibble:	; 1 bytes @ 0x3
  1418  0073                     	global	serialIObyteShift@dataBit
  1419                           serialIObyteShift@dataBit:	; 1 bytes @ 0x3
  1420  0073                     	global	initSerialIO@ptrIn
  1421                           initSerialIO@ptrIn:	; 1 bytes @ 0x3
  1422  0073                     	ds	1
  1423  0073                     ??_serialIOscan:	; 1 bytes @ 0x4
  1424  0074                     ??_initLCD:	; 1 bytes @ 0x4
  1425  0074                     ?_gotoxy:	; 1 bytes @ 0x4
  1426  0074                     ??_clearLCD:	; 1 bytes @ 0x4
  1427  0074                     	global	gotoxy@y
  1428                           gotoxy@y:	; 1 bytes @ 0x4
  1429  0074                     	ds	1
  1430  0074                     ??_gotoxy:	; 1 bytes @ 0x5
  1431  0075                     	ds	2
  1432  0075                     	global	gotoxy@x
  1433                           gotoxy@x:	; 1 bytes @ 0x7
  1434  0077                     	global	serialIOscan@j
  1435                           serialIOscan@j:	; 1 bytes @ 0x7
  1436  0077                     	ds	1
  1437  0077                     ?_writeLCD:	; 1 bytes @ 0x8
  1438  0078                     	global	keyboardScan@aux
  1439                           keyboardScan@aux:	; 1 bytes @ 0x8
  1440  0078                     	global	writeLCD@y
  1441                           writeLCD@y:	; 1 bytes @ 0x8
  1442  0078                     	global	serialIOscan@i
  1443                           serialIOscan@i:	; 1 bytes @ 0x8
  1444  0078                     	ds	1
  1445  0078                     	global	keyboardScan@i
  1446                           keyboardScan@i:	; 1 bytes @ 0x9
  1447  0079                     	global	writeLCD@ptr
  1448                           writeLCD@ptr:	; 1 bytes @ 0x9
  1449  0079                     	ds	1
  1450  0079                     ??_writeLCD:	; 1 bytes @ 0xA
  1451  007A                     	global	keyboardScan@j
  1452                           keyboardScan@j:	; 1 bytes @ 0xA
  1453  007A                     	ds	1
  1454  007A                     	global	writeLCD@x
  1455                           writeLCD@x:	; 1 bytes @ 0xB
  1456  007B                     	ds	1
  1457  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1458                           global __pcstackBANK0
  1459                           __pcstackBANK0:
  1460  0035                     ??_main:	; 1 bytes @ 0x0
  1461  0035                     	ds	3
  1462  0035                     	global	main@a
  1463                           main@a:	; 1 bytes @ 0x3
  1464  0038                     	ds	1
  1465  0038                     	global	main@b
  1466                           main@b:	; 1 bytes @ 0x4
  1467  0039                     	ds	1
  1468  0039                     	global	main@c
  1469                           main@c:	; 1 bytes @ 0x5
  1470  003A                     	ds	1
  1471  003A                     	global	main@d
  1472                           main@d:	; 1 bytes @ 0x6
  1473  003B                     	ds	1
  1474  003B                     	global	main@atuador
  1475                           main@atuador:	; 1 bytes @ 0x7
  1476  003C                     	ds	1
  1477  003C                     	global	main@sensor
  1478                           main@sensor:	; 1 bytes @ 0x8
  1479  003D                     	ds	1
  1480  003D                     	global	main@tecla
  1481                           main@tecla:	; 1 bytes @ 0x9
  1482  003E                     	ds	1
  1483  003E                     	global	main@estado
  1484                           main@estado:	; 2 bytes @ 0xA
  1485  003F                     	ds	2
  1486  003F                     	global	main@rest
  1487                           main@rest:	; 1 bytes @ 0xC
  1488  0041                     	ds	1
  1489  0041                     ;!
  1490                           ;!Data Sizes:
  1491                           ;!    Strings     0
  1492                           ;!    Constant    16
  1493                           ;!    Data        0
  1494                           ;!    BSS         23
  1495                           ;!    Persistent  0
  1496                           ;!    Stack       0
  1497                           ;!
  1498                           ;!Auto Spaces:
  1499                           ;!    Space          Size  Autos    Used
  1500                           ;!    COMMON           14     12      14
  1501                           ;!    BANK0            80     13      34
  1502                           ;!    BANK1            80      0       0
  1503                           ;!    BANK3            96      0       0
  1504                           ;!    BANK2            96      0       0
  1505                           
  1506                           ;!
  1507                           ;!Pointer List with Targets:
  1508                           ;!
  1509                           ;!    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
  1510                           ;!		 -> main@atuador(BANK0[1]), 
  1511                           ;!
  1512                           ;!    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
  1513                           ;!		 -> main@sensor(BANK0[1]), 
  1514                           ;!
  1515                           ;!    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
  1516                           ;!		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 
  1517                           ;!
  1518                           ;!    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
  1519                           ;!		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 
  1520                           ;!
  1521                           ;!    writeLCD@ptr	PTR const unsigned char  size(1) Largest target is 16
  1522                           ;!		 -> fifo(BANK0[16]), 
  1523                           ;!
  1524                           ;!    sp__displayFIFO	PTR void  size(1) Largest target is 16
  1525                           ;!		 -> fifo(BANK0[16]), 
  1526                           ;!
  1527                           
  1528                           
  1529                           ;!
  1530                           ;!Critical Paths under _main in COMMON
  1531                           ;!
  1532                           ;!    _main->_writeLCD
  1533                           ;!    _writeLCD->_gotoxy
  1534                           ;!    _gotoxy->_cmdLCD
  1535                           ;!    _serialIOscan->_serialIObyteShift
  1536                           ;!    _initLCD->_cmdLCD
  1537                           ;!    _clearLCD->_cmdLCD
  1538                           ;!
  1539                           ;!Critical Paths under _main in BANK0
  1540                           ;!
  1541                           ;!    None.
  1542                           ;!
  1543                           ;!Critical Paths under _main in BANK1
  1544                           ;!
  1545                           ;!    None.
  1546                           ;!
  1547                           ;!Critical Paths under _main in BANK3
  1548                           ;!
  1549                           ;!    None.
  1550                           ;!
  1551                           ;!Critical Paths under _main in BANK2
  1552                           ;!
  1553                           ;!    None.
  1554                           
  1555 ;;
  1556 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1557 ;;
  1558                           
  1559                           ;!
  1560                           ;!Call Graph Tables:
  1561                           ;!
  1562                           ;! ---------------------------------------------------------------------------------
  1563                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1564                           ;! ---------------------------------------------------------------------------------
  1565                           ;! (0) _main                                                13    13      0    2727
  1566                           ;!                                              0 BANK0     13    13      0
  1567                           ;!                           _clearLCD
  1568                           ;!                         _currentKey
  1569                           ;!                            _delFIFO
  1570                           ;!                        _displayFIFO
  1571                           ;!                            _getFIFO
  1572                           ;!                       _initKeyboard
  1573                           ;!                            _initLCD
  1574                           ;!                       _initSerialIO
  1575                           ;!                       _keyboardScan
  1576                           ;!                        _previousKey
  1577                           ;!                            _putFIFO
  1578                           ;!                       _serialIOscan
  1579                           ;!                           _writeLCD
  1580                           ;! ---------------------------------------------------------------------------------
  1581                           ;! (1) _writeLCD                                             4     2      2     605
  1582                           ;!                                              8 COMMON     4     2      2
  1583                           ;!                        _displayFIFO (ARG)
  1584                           ;!                             _gotoxy
  1585                           ;!                             _putLCD
  1586                           ;! ---------------------------------------------------------------------------------
  1587                           ;! (2) _putLCD                                               4     4      0      67
  1588                           ;!                                              0 COMMON     4     4      0
  1589                           ;! ---------------------------------------------------------------------------------
  1590                           ;! (2) _gotoxy                                               4     3      1     297
  1591                           ;!                                              4 COMMON     4     3      1
  1592                           ;!                             _cmdLCD
  1593                           ;! ---------------------------------------------------------------------------------
  1594                           ;! (1) _serialIOscan                                         5     5      0     205
  1595                           ;!                                              4 COMMON     5     5      0
  1596                           ;!                  _serialIObyteShift
  1597                           ;!                       _serialIOload
  1598                           ;! ---------------------------------------------------------------------------------
  1599                           ;! (2) _serialIOload                                         0     0      0       0
  1600                           ;! ---------------------------------------------------------------------------------
  1601                           ;! (2) _serialIObyteShift                                    4     4      0     114
  1602                           ;!                                              0 COMMON     4     4      0
  1603                           ;! ---------------------------------------------------------------------------------
  1604                           ;! (1) _putFIFO                                              2     2      0      22
  1605                           ;!                                              0 COMMON     2     2      0
  1606                           ;! ---------------------------------------------------------------------------------
  1607                           ;! (1) _previousKey                                          0     0      0       0
  1608                           ;! ---------------------------------------------------------------------------------
  1609                           ;! (2) _keyboardScan                                        11    11      0     210
  1610                           ;!                                              0 COMMON    11    11      0
  1611                           ;! ---------------------------------------------------------------------------------
  1612                           ;! (1) _initSerialIO                                         4     2      2     251
  1613                           ;!                                              0 COMMON     4     2      2
  1614                           ;! ---------------------------------------------------------------------------------
  1615                           ;! (1) _initLCD                                              2     2      0     177
  1616                           ;!                                              4 COMMON     2     2      0
  1617                           ;!                             _cmdLCD
  1618                           ;! ---------------------------------------------------------------------------------
  1619                           ;! (1) _initKeyboard                                         0     0      0       0
  1620                           ;! ---------------------------------------------------------------------------------
  1621                           ;! (1) _getFIFO                                              2     2      0      24
  1622                           ;!                                              0 COMMON     2     2      0
  1623                           ;! ---------------------------------------------------------------------------------
  1624                           ;! (1) _displayFIFO                                          0     0      0       0
  1625                           ;! ---------------------------------------------------------------------------------
  1626                           ;! (1) _delFIFO                                              3     3      0      46
  1627                           ;!                                              0 COMMON     3     3      0
  1628                           ;! ---------------------------------------------------------------------------------
  1629                           ;! (1) _currentKey                                           0     0      0       0
  1630                           ;! ---------------------------------------------------------------------------------
  1631                           ;! (1) _clearLCD                                             0     0      0     177
  1632                           ;!                             _cmdLCD
  1633                           ;! ---------------------------------------------------------------------------------
  1634                           ;! (3) _cmdLCD                                               4     4      0     177
  1635                           ;!                                              0 COMMON     4     4      0
  1636                           ;! ---------------------------------------------------------------------------------
  1637                           ;! Estimated maximum stack depth 3
  1638                           ;! ---------------------------------------------------------------------------------
  1639                           ;!
  1640                           ;! Call Graph Graphs:
  1641                           ;!
  1642                           ;! _main (ROOT)
  1643                           ;!   _clearLCD
  1644                           ;!     _cmdLCD
  1645                           ;!   _currentKey
  1646                           ;!   _delFIFO
  1647                           ;!   _displayFIFO
  1648                           ;!   _getFIFO
  1649                           ;!   _initKeyboard
  1650                           ;!   _initLCD
  1651                           ;!     _cmdLCD
  1652                           ;!   _initSerialIO
  1653                           ;!   _keyboardScan
  1654                           ;!   _previousKey
  1655                           ;!   _putFIFO
  1656                           ;!   _serialIOscan
  1657                           ;!     _serialIObyteShift
  1658                           ;!     _serialIOload
  1659                           ;!   _writeLCD
  1660                           ;!     _displayFIFO (ARG)
  1661                           ;!     _gotoxy (ARG)
  1662                           ;!       _cmdLCD
  1663                           ;!     _putLCD (ARG)
  1664                           ;!
  1665                           
  1666                           ;! Address spaces:
  1667                           
  1668                           ;!Name               Size   Autos  Total    Cost      Usage
  1669                           ;!BITCOMMON            E      0       0       0        0.0%
  1670                           ;!EEDATA             100      0       0       0        0.0%
  1671                           ;!NULL                 0      0       0       0        0.0%
  1672                           ;!CODE                 0      0       0       0        0.0%
  1673                           ;!COMMON               E      C       E       1      100.0%
  1674                           ;!BITSFR0              0      0       0       1        0.0%
  1675                           ;!SFR0                 0      0       0       1        0.0%
  1676                           ;!BITSFR1              0      0       0       2        0.0%
  1677                           ;!SFR1                 0      0       0       2        0.0%
  1678                           ;!STACK                0      0       0       2        0.0%
  1679                           ;!ABS                  0      0      30       3        0.0%
  1680                           ;!BITBANK0            50      0       0       4        0.0%
  1681                           ;!BITSFR3              0      0       0       4        0.0%
  1682                           ;!SFR3                 0      0       0       4        0.0%
  1683                           ;!BANK0               50      D      22       5       42.5%
  1684                           ;!BITSFR2              0      0       0       5        0.0%
  1685                           ;!SFR2                 0      0       0       5        0.0%
  1686                           ;!BITBANK1            50      0       0       6        0.0%
  1687                           ;!BANK1               50      0       0       7        0.0%
  1688                           ;!BITBANK3            60      0       0       8        0.0%
  1689                           ;!BANK3               60      0       0       9        0.0%
  1690                           ;!BITBANK2            60      0       0      10        0.0%
  1691                           ;!BANK2               60      0       0      11        0.0%
  1692                           ;!DATA                 0      0      30      12        0.0%
  1693                           
  1694                           	global	_main
  1695                           
  1696 ;; *************** function _main *****************
  1697 ;; Defined at:
  1698 ;;		line 48 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  estado          2   10[BANK0 ] int 
  1703 ;;  rest            1   12[BANK0 ] unsigned char 
  1704 ;;  tecla           1    9[BANK0 ] unsigned char 
  1705 ;;  sensor          1    8[BANK0 ] struct .
  1706 ;;  atuador         1    7[BANK0 ] struct .
  1707 ;;  d               1    6[BANK0 ] unsigned char 
  1708 ;;  c               1    5[BANK0 ] unsigned char 
  1709 ;;  b               1    4[BANK0 ] unsigned char 
  1710 ;;  a               1    3[BANK0 ] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : B00/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         0       0       0       0       0
  1721 ;;      Locals:         0      10       0       0       0
  1722 ;;      Temps:          0       3       0       0       0
  1723 ;;      Totals:         0      13       0       0       0
  1724 ;;Total ram usage:       13 bytes
  1725 ;; Hardware stack levels required when called:    3
  1726 ;; This function calls:
  1727 ;;		_clearLCD
  1728 ;;		_currentKey
  1729 ;;		_delFIFO
  1730 ;;		_displayFIFO
  1731 ;;		_getFIFO
  1732 ;;		_initKeyboard
  1733 ;;		_initLCD
  1734 ;;		_initSerialIO
  1735 ;;		_keyboardScan
  1736 ;;		_previousKey
  1737 ;;		_putFIFO
  1738 ;;		_serialIOscan
  1739 ;;		_writeLCD
  1740 ;; This function is called by:
  1741 ;;		Startup code after reset
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1745                           	file	"main.c"
  1746                           	line	48
  1747                           global __pmaintext
  1748                           __pmaintext:	;psect for function _main
  1749  03B4                     psect	maintext
  1750                           	file	"main.c"
  1751                           	line	48
  1752                           	global	__size_of_main
  1753                           	__size_of_main	equ	__end_of_main-_main
  1754  043D                     	
  1755                           _main:	
  1756  03B4                     ;incstack = 0
  1757                           	opt	stack 5
  1758                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1759                           	line	50
  1760                           	
  1761                           l1722:	
  1762  03B4                     ;main.c: 50:     unsigned char tecla = 0;
  1763                           	bcf	status, 5	;RP0=0, select bank0
  1764  03B4  1283               	bcf	status, 6	;RP1=0, select bank0
  1765  03B5  1303               	clrf	(main@tecla)
  1766  03B6  01BE               	line	51
  1767                           ;main.c: 51:     unsigned char a,b,c,d = 0;
  1768                           	clrf	(main@d)
  1769  03B7  01BB               	line	52
  1770                           ;main.c: 52:     unsigned char rest = 0;
  1771                           	clrf	(main@rest)
  1772  03B8  01C1               	line	55
  1773                           ;main.c: 53:     SENSORESbits_t sensor;;main.c: 54:     ATUADORESbits_t atuador;;main.c:
                                  55:     int estado = 0;
  1774                           	clrf	(main@estado)
  1775  03B9  01BF               	clrf	(main@estado+1)
  1776  03BA  01C0               	line	58
  1777                           	
  1778                           l1724:	
  1779  03BB                     ;main.c: 58:     initLCD();
  1780                           	fcall	_initLCD
  1781  03BB  120A  118A  2297  120A  118A  	line	59
  1782                           	
  1783                           l1726:	
  1784  03C0                     ;main.c: 59:     initKeyboard();
  1785                           	fcall	_initKeyboard
  1786  03C0  120A  118A  2140  120A  118A  	line	60
  1787                           	
  1788                           l1728:	
  1789  03C5                     ;main.c: 60:     initSerialIO( &sensor, &atuador, 1 );
  1790                           	movlw	(low(main@atuador|((0x0)<<8)))&0ffh
  1791  03C5  303C               	bcf	status, 5	;RP0=0, select bank0
  1792  03C6  1283               	bcf	status, 6	;RP1=0, select bank0
  1793  03C7  1303               	movwf	(??_main+0)+0
  1794  03C8  00B5               	movf	(??_main+0)+0,w
  1795  03C9  0835               	movwf	(initSerialIO@ptrOut)
  1796  03CA  00F0               	clrf	(initSerialIO@length)
  1797  03CB  01F1               	incf	(initSerialIO@length),f
  1798  03CC  0AF1               	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  1799  03CD  303D               	fcall	_initSerialIO
  1800  03CE  120A  118A  21F2  120A  118A  	line	61
  1801                           	
  1802                           l1730:	
  1803  03D3                     ;main.c: 61:     atuador.ABCD = 0x00;
  1804                           	bcf	status, 5	;RP0=0, select bank0
  1805  03D3  1283               	bcf	status, 6	;RP1=0, select bank0
  1806  03D4  1303               	clrf	(main@atuador)
  1807  03D5  01BC               	goto	l1732
  1808  03D6  2BD7               	line	62
  1809                           ;main.c: 62:     while( 1 )
  1810                           	
  1811                           l139:	
  1812  03D7                     	line	64
  1813                           	
  1814                           l1732:	
  1815  03D7                     ;main.c: 63:     {;main.c: 64:         keyboardScan();
  1816                           	fcall	_keyboardScan
  1817  03D7  120A  118A  2335  120A  118A  	line	65
  1818                           ;main.c: 65:         switch( estado )
  1819                           	goto	l1874
  1820  03DC  2E25               	line	67
  1821                           ;main.c: 66:         {;main.c: 67:             case 0:
  1822                           	
  1823                           l141:	
  1824  03DD                     	line	69
  1825                           ;main.c: 69:                     break;
  1826                           	goto	l1876
  1827  03DD  2E9F               	line	70
  1828                           ;main.c: 70:             case 10:
  1829                           	
  1830                           l143:	
  1831  03DE                     	line	71
  1832                           	
  1833                           l1734:	
  1834  03DE                     ;main.c: 71:                     rest = getFIFO();
  1835                           	fcall	_getFIFO
  1836  03DE  120A  118A  2153  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1837  03E3  1283               	bcf	status, 6	;RP1=0, select bank0
  1838  03E4  1303               	movwf	(??_main+0)+0
  1839  03E5  00B5               	movf	(??_main+0)+0,w
  1840  03E6  0835               	movwf	(main@rest)
  1841  03E7  00C1               	line	72
  1842                           	
  1843                           l1736:	
  1844  03E8                     ;main.c: 72:                     if( rest == 'A' )
  1845                           		movlw	65
  1846  03E8  3041               	xorwf	((main@rest)),w
  1847  03E9  0641               	btfss	status,2
  1848  03EA  1D03               	goto	u761
  1849  03EB  2BED               	goto	u760
  1850  03EC  2BEE               u761:
  1851  03ED                     	goto	l1740
  1852  03ED  2BF3               u760:
  1853  03EE                     	line	73
  1854                           	
  1855                           l1738:	
  1856  03EE                     ;main.c: 73:                         estado = 100;
  1857                           	movlw	064h
  1858  03EE  3064               	movwf	(main@estado)
  1859  03EF  00BF               	movlw	0
  1860  03F0  3000               	movwf	((main@estado))+1
  1861  03F1  00C0               	goto	l1876
  1862  03F2  2E9F               	line	74
  1863                           ;main.c: 74:                     else if( rest == 'B' )
  1864                           	
  1865                           l144:	
  1866  03F3                     	
  1867                           l1740:	
  1868  03F3                     		movlw	66
  1869  03F3  3042               	xorwf	((main@rest)),w
  1870  03F4  0641               	btfss	status,2
  1871  03F5  1D03               	goto	u771
  1872  03F6  2BF8               	goto	u770
  1873  03F7  2BF9               u771:
  1874  03F8                     	goto	l1744
  1875  03F8  2BFE               u770:
  1876  03F9                     	line	75
  1877                           	
  1878                           l1742:	
  1879  03F9                     ;main.c: 75:                         estado = 110;
  1880                           	movlw	06Eh
  1881  03F9  306E               	movwf	(main@estado)
  1882  03FA  00BF               	movlw	0
  1883  03FB  3000               	movwf	((main@estado))+1
  1884  03FC  00C0               	goto	l1876
  1885  03FD  2E9F               	line	76
  1886                           ;main.c: 76:                     else if( rest == 'C' )
  1887                           	
  1888                           l146:	
  1889  03FE                     	
  1890                           l1744:	
  1891  03FE                     		movlw	67
  1892  03FE  3043               	xorwf	((main@rest)),w
  1893  03FF  0641               	btfss	status,2
  1894  0400  1D03               	goto	u781
  1895  0401  2C03               	goto	u780
  1896  0402  2C04               u781:
  1897  0403                     	goto	l1748
  1898  0403  2C09               u780:
  1899  0404                     	line	77
  1900                           	
  1901                           l1746:	
  1902  0404                     ;main.c: 77:                         estado = 120;
  1903                           	movlw	078h
  1904  0404  3078               	movwf	(main@estado)
  1905  0405  00BF               	movlw	0
  1906  0406  3000               	movwf	((main@estado))+1
  1907  0407  00C0               	goto	l1876
  1908  0408  2E9F               	line	78
  1909                           ;main.c: 78:                     else if( rest == 'D' )
  1910                           	
  1911                           l148:	
  1912  0409                     	
  1913                           l1748:	
  1914  0409                     		movlw	68
  1915  0409  3044               	xorwf	((main@rest)),w
  1916  040A  0641               	btfss	status,2
  1917  040B  1D03               	goto	u791
  1918  040C  2C0E               	goto	u790
  1919  040D  2C0F               u791:
  1920  040E                     	goto	l1752
  1921  040E  2C14               u790:
  1922  040F                     	line	79
  1923                           	
  1924                           l1750:	
  1925  040F                     ;main.c: 79:                         estado = 130;
  1926                           	movlw	082h
  1927  040F  3082               	movwf	(main@estado)
  1928  0410  00BF               	movlw	0
  1929  0411  3000               	movwf	((main@estado))+1
  1930  0412  00C0               	goto	l1876
  1931  0413  2E9F               	line	80
  1932                           ;main.c: 80:                     else if( rest == '1' )
  1933                           	
  1934                           l150:	
  1935  0414                     	
  1936                           l1752:	
  1937  0414                     		movlw	49
  1938  0414  3031               	xorwf	((main@rest)),w
  1939  0415  0641               	btfss	status,2
  1940  0416  1D03               	goto	u801
  1941  0417  2C19               	goto	u800
  1942  0418  2C1A               u801:
  1943  0419                     	goto	l1756
  1944  0419  2C1F               u800:
  1945  041A                     	line	81
  1946                           	
  1947                           l1754:	
  1948  041A                     ;main.c: 81:                         estado = 140;
  1949                           	movlw	08Ch
  1950  041A  308C               	movwf	(main@estado)
  1951  041B  00BF               	movlw	0
  1952  041C  3000               	movwf	((main@estado))+1
  1953  041D  00C0               	goto	l1876
  1954  041E  2E9F               	line	82
  1955                           ;main.c: 82:                     else if( rest == '2' )
  1956                           	
  1957                           l152:	
  1958  041F                     	
  1959                           l1756:	
  1960  041F                     		movlw	50
  1961  041F  3032               	xorwf	((main@rest)),w
  1962  0420  0641               	btfss	status,2
  1963  0421  1D03               	goto	u811
  1964  0422  2C24               	goto	u810
  1965  0423  2C25               u811:
  1966  0424                     	goto	l1760
  1967  0424  2C2A               u810:
  1968  0425                     	line	83
  1969                           	
  1970                           l1758:	
  1971  0425                     ;main.c: 83:                         estado = 150;
  1972                           	movlw	096h
  1973  0425  3096               	movwf	(main@estado)
  1974  0426  00BF               	movlw	0
  1975  0427  3000               	movwf	((main@estado))+1
  1976  0428  00C0               	goto	l1876
  1977  0429  2E9F               	line	84
  1978                           ;main.c: 84:                     else if( rest == '3' )
  1979                           	
  1980                           l154:	
  1981  042A                     	
  1982                           l1760:	
  1983  042A                     		movlw	51
  1984  042A  3033               	xorwf	((main@rest)),w
  1985  042B  0641               	btfss	status,2
  1986  042C  1D03               	goto	u821
  1987  042D  2C2F               	goto	u820
  1988  042E  2C30               u821:
  1989  042F                     	goto	l1764
  1990  042F  2C35               u820:
  1991  0430                     	line	85
  1992                           	
  1993                           l1762:	
  1994  0430                     ;main.c: 85:                         estado = 160;
  1995                           	movlw	0A0h
  1996  0430  30A0               	movwf	(main@estado)
  1997  0431  00BF               	movlw	0
  1998  0432  3000               	movwf	((main@estado))+1
  1999  0433  00C0               	goto	l1876
  2000  0434  2E9F               	line	86
  2001                           ;main.c: 86:                     else if( rest == '4' )
  2002                           	
  2003                           l156:	
  2004  0435                     	
  2005                           l1764:	
  2006  0435                     		movlw	52
  2007  0435  3034               	xorwf	((main@rest)),w
  2008  0436  0641               	btfss	status,2
  2009  0437  1D03               	goto	u831
  2010  0438  2C3A               	goto	u830
  2011  0439  2C3B               u831:
  2012  043A                     	goto	l1768
  2013  043A  2C40               u830:
  2014  043B                     	line	87
  2015                           	
  2016                           l1766:	
  2017  043B                     ;main.c: 87:                         estado = 170;
  2018                           	movlw	0AAh
  2019  043B  30AA               	movwf	(main@estado)
  2020  043C  00BF               	movlw	0
  2021  043D  3000               	movwf	((main@estado))+1
  2022  043E  00C0               	goto	l1876
  2023  043F  2E9F               	line	88
  2024                           ;main.c: 88:                     else if( rest == '5' )
  2025                           	
  2026                           l158:	
  2027  0440                     	
  2028                           l1768:	
  2029  0440                     		movlw	53
  2030  0440  3035               	xorwf	((main@rest)),w
  2031  0441  0641               	btfss	status,2
  2032  0442  1D03               	goto	u841
  2033  0443  2C45               	goto	u840
  2034  0444  2C46               u841:
  2035  0445                     	goto	l1772
  2036  0445  2C4B               u840:
  2037  0446                     	line	89
  2038                           	
  2039                           l1770:	
  2040  0446                     ;main.c: 89:                         estado = 180;
  2041                           	movlw	0B4h
  2042  0446  30B4               	movwf	(main@estado)
  2043  0447  00BF               	movlw	0
  2044  0448  3000               	movwf	((main@estado))+1
  2045  0449  00C0               	goto	l1876
  2046  044A  2E9F               	line	90
  2047                           ;main.c: 90:                     else if( rest == '6' )
  2048                           	
  2049                           l160:	
  2050  044B                     	
  2051                           l1772:	
  2052  044B                     		movlw	54
  2053  044B  3036               	xorwf	((main@rest)),w
  2054  044C  0641               	btfss	status,2
  2055  044D  1D03               	goto	u851
  2056  044E  2C50               	goto	u850
  2057  044F  2C51               u851:
  2058  0450                     	goto	l1776
  2059  0450  2C56               u850:
  2060  0451                     	line	91
  2061                           	
  2062                           l1774:	
  2063  0451                     ;main.c: 91:                         estado = 190;
  2064                           	movlw	0BEh
  2065  0451  30BE               	movwf	(main@estado)
  2066  0452  00BF               	movlw	0
  2067  0453  3000               	movwf	((main@estado))+1
  2068  0454  00C0               	goto	l1876
  2069  0455  2E9F               	line	92
  2070                           ;main.c: 92:                     else if( rest == '7' )
  2071                           	
  2072                           l162:	
  2073  0456                     	
  2074                           l1776:	
  2075  0456                     		movlw	55
  2076  0456  3037               	xorwf	((main@rest)),w
  2077  0457  0641               	btfss	status,2
  2078  0458  1D03               	goto	u861
  2079  0459  2C5B               	goto	u860
  2080  045A  2C5C               u861:
  2081  045B                     	goto	l1780
  2082  045B  2C61               u860:
  2083  045C                     	line	93
  2084                           	
  2085                           l1778:	
  2086  045C                     ;main.c: 93:                         estado = 200;
  2087                           	movlw	0C8h
  2088  045C  30C8               	movwf	(main@estado)
  2089  045D  00BF               	movlw	0
  2090  045E  3000               	movwf	((main@estado))+1
  2091  045F  00C0               	goto	l1876
  2092  0460  2E9F               	line	94
  2093                           ;main.c: 94:                     else if( rest == '8' )
  2094                           	
  2095                           l164:	
  2096  0461                     	
  2097                           l1780:	
  2098  0461                     		movlw	56
  2099  0461  3038               	xorwf	((main@rest)),w
  2100  0462  0641               	btfss	status,2
  2101  0463  1D03               	goto	u871
  2102  0464  2C66               	goto	u870
  2103  0465  2C67               u871:
  2104  0466                     	goto	l1784
  2105  0466  2C6C               u870:
  2106  0467                     	line	95
  2107                           	
  2108                           l1782:	
  2109  0467                     ;main.c: 95:                         estado = 210;
  2110                           	movlw	0D2h
  2111  0467  30D2               	movwf	(main@estado)
  2112  0468  00BF               	movlw	0
  2113  0469  3000               	movwf	((main@estado))+1
  2114  046A  00C0               	goto	l1876
  2115  046B  2E9F               	line	96
  2116                           ;main.c: 96:                     else if( rest == '9' )
  2117                           	
  2118                           l166:	
  2119  046C                     	
  2120                           l1784:	
  2121  046C                     		movlw	57
  2122  046C  3039               	xorwf	((main@rest)),w
  2123  046D  0641               	btfss	status,2
  2124  046E  1D03               	goto	u881
  2125  046F  2C71               	goto	u880
  2126  0470  2C72               u881:
  2127  0471                     	goto	l1788
  2128  0471  2C77               u880:
  2129  0472                     	line	97
  2130                           	
  2131                           l1786:	
  2132  0472                     ;main.c: 97:                         estado = 220;
  2133                           	movlw	0DCh
  2134  0472  30DC               	movwf	(main@estado)
  2135  0473  00BF               	movlw	0
  2136  0474  3000               	movwf	((main@estado))+1
  2137  0475  00C0               	goto	l1876
  2138  0476  2E9F               	line	98
  2139                           ;main.c: 98:                     else if( rest == 'a' )
  2140                           	
  2141                           l168:	
  2142  0477                     	
  2143                           l1788:	
  2144  0477                     		movlw	97
  2145  0477  3061               	xorwf	((main@rest)),w
  2146  0478  0641               	btfss	status,2
  2147  0479  1D03               	goto	u891
  2148  047A  2C7C               	goto	u890
  2149  047B  2C7D               u891:
  2150  047C                     	goto	l1792
  2151  047C  2C82               u890:
  2152  047D                     	line	99
  2153                           	
  2154                           l1790:	
  2155  047D                     ;main.c: 99:                         estado = 230;
  2156                           	movlw	0E6h
  2157  047D  30E6               	movwf	(main@estado)
  2158  047E  00BF               	movlw	0
  2159  047F  3000               	movwf	((main@estado))+1
  2160  0480  00C0               	goto	l1876
  2161  0481  2E9F               	line	100
  2162                           ;main.c: 100:                     else if( rest == 'b' )
  2163                           	
  2164                           l170:	
  2165  0482                     	
  2166                           l1792:	
  2167  0482                     		movlw	98
  2168  0482  3062               	xorwf	((main@rest)),w
  2169  0483  0641               	btfss	status,2
  2170  0484  1D03               	goto	u901
  2171  0485  2C87               	goto	u900
  2172  0486  2C88               u901:
  2173  0487                     	goto	l1796
  2174  0487  2C8D               u900:
  2175  0488                     	line	101
  2176                           	
  2177                           l1794:	
  2178  0488                     ;main.c: 101:                         estado = 240;
  2179                           	movlw	0F0h
  2180  0488  30F0               	movwf	(main@estado)
  2181  0489  00BF               	movlw	0
  2182  048A  3000               	movwf	((main@estado))+1
  2183  048B  00C0               	goto	l1876
  2184  048C  2E9F               	line	102
  2185                           ;main.c: 102:                     else if( rest == 'c' )
  2186                           	
  2187                           l172:	
  2188  048D                     	
  2189                           l1796:	
  2190  048D                     		movlw	99
  2191  048D  3063               	xorwf	((main@rest)),w
  2192  048E  0641               	btfss	status,2
  2193  048F  1D03               	goto	u911
  2194  0490  2C92               	goto	u910
  2195  0491  2C93               u911:
  2196  0492                     	goto	l1800
  2197  0492  2C98               u910:
  2198  0493                     	line	103
  2199                           	
  2200                           l1798:	
  2201  0493                     ;main.c: 103:                         estado = 250;
  2202                           	movlw	0FAh
  2203  0493  30FA               	movwf	(main@estado)
  2204  0494  00BF               	movlw	0
  2205  0495  3000               	movwf	((main@estado))+1
  2206  0496  00C0               	goto	l1876
  2207  0497  2E9F               	line	104
  2208                           ;main.c: 104:                     else if( rest == 'd' )
  2209                           	
  2210                           l174:	
  2211  0498                     	
  2212                           l1800:	
  2213  0498                     		movlw	100
  2214  0498  3064               	xorwf	((main@rest)),w
  2215  0499  0641               	btfss	status,2
  2216  049A  1D03               	goto	u921
  2217  049B  2C9D               	goto	u920
  2218  049C  2C9E               u921:
  2219  049D                     	goto	l1876
  2220  049D  2E9F               u920:
  2221  049E                     	line	105
  2222                           	
  2223                           l1802:	
  2224  049E                     ;main.c: 105:                         estado = 260;
  2225                           	movlw	04h
  2226  049E  3004               	movwf	(main@estado)
  2227  049F  00BF               	movlw	01h
  2228  04A0  3001               	movwf	((main@estado))+1
  2229  04A1  00C0               	goto	l1876
  2230  04A2  2E9F               	
  2231                           l176:	
  2232  04A3                     	goto	l1876
  2233  04A3  2E9F               	
  2234                           l175:	
  2235  04A4                     	goto	l1876
  2236  04A4  2E9F               	
  2237                           l173:	
  2238  04A5                     	goto	l1876
  2239  04A5  2E9F               	
  2240                           l171:	
  2241  04A6                     	goto	l1876
  2242  04A6  2E9F               	
  2243                           l169:	
  2244  04A7                     	goto	l1876
  2245  04A7  2E9F               	
  2246                           l167:	
  2247  04A8                     	goto	l1876
  2248  04A8  2E9F               	
  2249                           l165:	
  2250  04A9                     	goto	l1876
  2251  04A9  2E9F               	
  2252                           l163:	
  2253  04AA                     	goto	l1876
  2254  04AA  2E9F               	
  2255                           l161:	
  2256  04AB                     	goto	l1876
  2257  04AB  2E9F               	
  2258                           l159:	
  2259  04AC                     	goto	l1876
  2260  04AC  2E9F               	
  2261                           l157:	
  2262  04AD                     	goto	l1876
  2263  04AD  2E9F               	
  2264                           l155:	
  2265  04AE                     	goto	l1876
  2266  04AE  2E9F               	
  2267                           l153:	
  2268  04AF                     	goto	l1876
  2269  04AF  2E9F               	
  2270                           l151:	
  2271  04B0                     	goto	l1876
  2272  04B0  2E9F               	
  2273                           l149:	
  2274  04B1                     	goto	l1876
  2275  04B1  2E9F               	
  2276                           l147:	
  2277  04B2                     	goto	l1876
  2278  04B2  2E9F               	
  2279                           l145:	
  2280  04B3                     	line	106
  2281                           ;main.c: 106:                     break;
  2282                           	goto	l1876
  2283  04B3  2E9F               	line	107
  2284                           ;main.c: 107:             case 100:
  2285                           	
  2286                           l177:	
  2287  04B4                     	line	108
  2288                           ;main.c: 108:                     atuador.A = 1;
  2289                           	bsf	(main@atuador),7
  2290  04B4  17BC               	line	109
  2291                           	
  2292                           l1804:	
  2293  04B5                     ;main.c: 109:                     estado = 101;
  2294                           	movlw	065h
  2295  04B5  3065               	movwf	(main@estado)
  2296  04B6  00BF               	movlw	0
  2297  04B7  3000               	movwf	((main@estado))+1
  2298  04B8  00C0               	line	110
  2299                           ;main.c: 110:                     break;
  2300                           	goto	l1876
  2301  04B9  2E9F               	line	111
  2302                           ;main.c: 111:             case 101:
  2303                           	
  2304                           l178:	
  2305  04BA                     	line	112
  2306                           ;main.c: 112:                     if( sensor.A1 == 1)
  2307                           	btfss	(main@sensor),1
  2308  04BA  1CBD               	goto	u931
  2309  04BB  2CBD               	goto	u930
  2310  04BC  2CBE               u931:
  2311  04BD                     	goto	l1876
  2312  04BD  2E9F               u930:
  2313  04BE                     	line	113
  2314                           	
  2315                           l1806:	
  2316  04BE                     ;main.c: 113:                         estado = 10;
  2317                           	movlw	0Ah
  2318  04BE  300A               	movwf	(main@estado)
  2319  04BF  00BF               	movlw	0
  2320  04C0  3000               	movwf	((main@estado))+1
  2321  04C1  00C0               	goto	l1876
  2322  04C2  2E9F               	
  2323                           l179:	
  2324  04C3                     	line	114
  2325                           ;main.c: 114:                     break;
  2326                           	goto	l1876
  2327  04C3  2E9F               	line	115
  2328                           ;main.c: 115:             case 110:
  2329                           	
  2330                           l180:	
  2331  04C4                     	line	116
  2332                           ;main.c: 116:                     atuador.B = 1;
  2333                           	bsf	(main@atuador),6
  2334  04C4  173C               	line	117
  2335                           	
  2336                           l1808:	
  2337  04C5                     ;main.c: 117:                     estado = 111;
  2338                           	movlw	06Fh
  2339  04C5  306F               	movwf	(main@estado)
  2340  04C6  00BF               	movlw	0
  2341  04C7  3000               	movwf	((main@estado))+1
  2342  04C8  00C0               	line	118
  2343                           ;main.c: 118:                     break;
  2344                           	goto	l1876
  2345  04C9  2E9F               	line	119
  2346                           ;main.c: 119:             case 111:
  2347                           	
  2348                           l181:	
  2349  04CA                     	line	120
  2350                           ;main.c: 120:                     if( sensor.B1 == 1)
  2351                           	btfss	(main@sensor),3
  2352  04CA  1DBD               	goto	u941
  2353  04CB  2CCD               	goto	u940
  2354  04CC  2CCE               u941:
  2355  04CD                     	goto	l1876
  2356  04CD  2E9F               u940:
  2357  04CE                     	line	121
  2358                           	
  2359                           l1810:	
  2360  04CE                     ;main.c: 121:                         estado = 10;
  2361                           	movlw	0Ah
  2362  04CE  300A               	movwf	(main@estado)
  2363  04CF  00BF               	movlw	0
  2364  04D0  3000               	movwf	((main@estado))+1
  2365  04D1  00C0               	goto	l1876
  2366  04D2  2E9F               	
  2367                           l182:	
  2368  04D3                     	line	122
  2369                           ;main.c: 122:                     break;
  2370                           	goto	l1876
  2371  04D3  2E9F               	line	123
  2372                           ;main.c: 123:             case 120:
  2373                           	
  2374                           l183:	
  2375  04D4                     	line	124
  2376                           ;main.c: 124:                     atuador.C = 1;
  2377                           	bsf	(main@atuador),5
  2378  04D4  16BC               	line	125
  2379                           	
  2380                           l1812:	
  2381  04D5                     ;main.c: 125:                     estado = 121;
  2382                           	movlw	079h
  2383  04D5  3079               	movwf	(main@estado)
  2384  04D6  00BF               	movlw	0
  2385  04D7  3000               	movwf	((main@estado))+1
  2386  04D8  00C0               	line	126
  2387                           ;main.c: 126:                     break;
  2388                           	goto	l1876
  2389  04D9  2E9F               	line	127
  2390                           ;main.c: 127:             case 121:
  2391                           	
  2392                           l184:	
  2393  04DA                     	line	128
  2394                           ;main.c: 128:                     if( sensor.C1 == 1)
  2395                           	btfss	(main@sensor),5
  2396  04DA  1EBD               	goto	u951
  2397  04DB  2CDD               	goto	u950
  2398  04DC  2CDE               u951:
  2399  04DD                     	goto	l1876
  2400  04DD  2E9F               u950:
  2401  04DE                     	line	129
  2402                           	
  2403                           l1814:	
  2404  04DE                     ;main.c: 129:                         estado = 10;
  2405                           	movlw	0Ah
  2406  04DE  300A               	movwf	(main@estado)
  2407  04DF  00BF               	movlw	0
  2408  04E0  3000               	movwf	((main@estado))+1
  2409  04E1  00C0               	goto	l1876
  2410  04E2  2E9F               	
  2411                           l185:	
  2412  04E3                     	line	130
  2413                           ;main.c: 130:                     break;
  2414                           	goto	l1876
  2415  04E3  2E9F               	line	131
  2416                           ;main.c: 131:             case 130:
  2417                           	
  2418                           l186:	
  2419  04E4                     	line	132
  2420                           ;main.c: 132:                     atuador.D = 1;
  2421                           	bsf	(main@atuador),4
  2422  04E4  163C               	line	133
  2423                           	
  2424                           l1816:	
  2425  04E5                     ;main.c: 133:                     estado = 131;
  2426                           	movlw	083h
  2427  04E5  3083               	movwf	(main@estado)
  2428  04E6  00BF               	movlw	0
  2429  04E7  3000               	movwf	((main@estado))+1
  2430  04E8  00C0               	line	134
  2431                           ;main.c: 134:                     break;
  2432                           	goto	l1876
  2433  04E9  2E9F               	line	135
  2434                           ;main.c: 135:             case 131:
  2435                           	
  2436                           l187:	
  2437  04EA                     	line	136
  2438                           ;main.c: 136:                     if( sensor.D1 == 1)
  2439                           	btfss	(main@sensor),7
  2440  04EA  1FBD               	goto	u961
  2441  04EB  2CED               	goto	u960
  2442  04EC  2CEE               u961:
  2443  04ED                     	goto	l1876
  2444  04ED  2E9F               u960:
  2445  04EE                     	line	137
  2446                           	
  2447                           l1818:	
  2448  04EE                     ;main.c: 137:                         estado = 10;
  2449                           	movlw	0Ah
  2450  04EE  300A               	movwf	(main@estado)
  2451  04EF  00BF               	movlw	0
  2452  04F0  3000               	movwf	((main@estado))+1
  2453  04F1  00C0               	goto	l1876
  2454  04F2  2E9F               	
  2455                           l188:	
  2456  04F3                     	line	138
  2457                           ;main.c: 138:                     break;
  2458                           	goto	l1876
  2459  04F3  2E9F               	line	139
  2460                           ;main.c: 139:             case 140:
  2461                           	
  2462                           l189:	
  2463  04F4                     	line	140
  2464                           	
  2465                           l1820:	
  2466  04F4                     ;main.c: 140:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2467                           	opt asmopt_push
  2468                           opt asmopt_off
  2469                           movlw  6
  2470  04F4  3006               	bcf	status, 5	;RP0=0, select bank0
  2471  04F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2472  04F6  1303               movwf	((??_main+0)+0+2),f
  2473  04F7  00B7               movlw	19
  2474  04F8  3013               movwf	((??_main+0)+0+1),f
  2475  04F9  00B6               	movlw	173
  2476  04FA  30AD               movwf	((??_main+0)+0),f
  2477  04FB  00B5               	u1077:
  2478  04FC                     decfsz	((??_main+0)+0),f
  2479  04FC  0BB5               	goto	u1077
  2480  04FD  2CFC               	decfsz	((??_main+0)+0+1),f
  2481  04FE  0BB6               	goto	u1077
  2482  04FF  2CFC               	decfsz	((??_main+0)+0+2),f
  2483  0500  0BB7               	goto	u1077
  2484  0501  2CFC               opt asmopt_pop
  2485                           
  2486                           	line	141
  2487                           ;main.c: 141:                     estado = 141;
  2488                           	movlw	08Dh
  2489  0502  308D               	bcf	status, 5	;RP0=0, select bank0
  2490  0503  1283               	bcf	status, 6	;RP1=0, select bank0
  2491  0504  1303               	movwf	(main@estado)
  2492  0505  00BF               	movlw	0
  2493  0506  3000               	movwf	((main@estado))+1
  2494  0507  00C0               	line	142
  2495                           ;main.c: 142:                     break;
  2496                           	goto	l1876
  2497  0508  2E9F               	line	143
  2498                           ;main.c: 143:             case 141:
  2499                           	
  2500                           l190:	
  2501  0509                     	line	144
  2502                           	
  2503                           l1822:	
  2504  0509                     ;main.c: 144:                     estado = 10;
  2505                           	movlw	0Ah
  2506  0509  300A               	movwf	(main@estado)
  2507  050A  00BF               	movlw	0
  2508  050B  3000               	movwf	((main@estado))+1
  2509  050C  00C0               	line	145
  2510                           ;main.c: 145:                     break;
  2511                           	goto	l1876
  2512  050D  2E9F               	line	146
  2513                           ;main.c: 146:             case 150:
  2514                           	
  2515                           l191:	
  2516  050E                     	line	147
  2517                           	
  2518                           l1824:	
  2519  050E                     ;main.c: 147:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
  2520                           	opt asmopt_push
  2521                           opt asmopt_off
  2522                           movlw  11
  2523  050E  300B               	bcf	status, 5	;RP0=0, select bank0
  2524  050F  1283               	bcf	status, 6	;RP1=0, select bank0
  2525  0510  1303               movwf	((??_main+0)+0+2),f
  2526  0511  00B7               movlw	38
  2527  0512  3026               movwf	((??_main+0)+0+1),f
  2528  0513  00B6               	movlw	93
  2529  0514  305D               movwf	((??_main+0)+0),f
  2530  0515  00B5               	u1087:
  2531  0516                     decfsz	((??_main+0)+0),f
  2532  0516  0BB5               	goto	u1087
  2533  0517  2D16               	decfsz	((??_main+0)+0+1),f
  2534  0518  0BB6               	goto	u1087
  2535  0519  2D16               	decfsz	((??_main+0)+0+2),f
  2536  051A  0BB7               	goto	u1087
  2537  051B  2D16               opt asmopt_pop
  2538                           
  2539                           	line	148
  2540                           ;main.c: 148:                     estado = 151;
  2541                           	movlw	097h
  2542  051C  3097               	bcf	status, 5	;RP0=0, select bank0
  2543  051D  1283               	bcf	status, 6	;RP1=0, select bank0
  2544  051E  1303               	movwf	(main@estado)
  2545  051F  00BF               	movlw	0
  2546  0520  3000               	movwf	((main@estado))+1
  2547  0521  00C0               	line	149
  2548                           ;main.c: 149:                     break;
  2549                           	goto	l1876
  2550  0522  2E9F               	line	150
  2551                           ;main.c: 150:             case 151:
  2552                           	
  2553                           l192:	
  2554  0523                     	line	151
  2555                           	
  2556                           l1826:	
  2557  0523                     ;main.c: 151:                     estado = 10;
  2558                           	movlw	0Ah
  2559  0523  300A               	movwf	(main@estado)
  2560  0524  00BF               	movlw	0
  2561  0525  3000               	movwf	((main@estado))+1
  2562  0526  00C0               	line	152
  2563                           ;main.c: 152:                     break;
  2564                           	goto	l1876
  2565  0527  2E9F               	line	153
  2566                           ;main.c: 153:             case 160:
  2567                           	
  2568                           l193:	
  2569  0528                     	line	154
  2570                           	
  2571                           l1828:	
  2572  0528                     ;main.c: 154:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
  2573                           	opt asmopt_push
  2574                           opt asmopt_off
  2575                           movlw  16
  2576  0528  3010               	bcf	status, 5	;RP0=0, select bank0
  2577  0529  1283               	bcf	status, 6	;RP1=0, select bank0
  2578  052A  1303               movwf	((??_main+0)+0+2),f
  2579  052B  00B7               movlw	57
  2580  052C  3039               movwf	((??_main+0)+0+1),f
  2581  052D  00B6               	movlw	13
  2582  052E  300D               movwf	((??_main+0)+0),f
  2583  052F  00B5               	u1097:
  2584  0530                     decfsz	((??_main+0)+0),f
  2585  0530  0BB5               	goto	u1097
  2586  0531  2D30               	decfsz	((??_main+0)+0+1),f
  2587  0532  0BB6               	goto	u1097
  2588  0533  2D30               	decfsz	((??_main+0)+0+2),f
  2589  0534  0BB7               	goto	u1097
  2590  0535  2D30               opt asmopt_pop
  2591                           
  2592                           	line	155
  2593                           ;main.c: 155:                     estado = 161;
  2594                           	movlw	0A1h
  2595  0536  30A1               	bcf	status, 5	;RP0=0, select bank0
  2596  0537  1283               	bcf	status, 6	;RP1=0, select bank0
  2597  0538  1303               	movwf	(main@estado)
  2598  0539  00BF               	movlw	0
  2599  053A  3000               	movwf	((main@estado))+1
  2600  053B  00C0               	line	156
  2601                           ;main.c: 156:                     break;
  2602                           	goto	l1876
  2603  053C  2E9F               	line	157
  2604                           ;main.c: 157:             case 161:
  2605                           	
  2606                           l194:	
  2607  053D                     	line	158
  2608                           	
  2609                           l1830:	
  2610  053D                     ;main.c: 158:                     estado = 10;
  2611                           	movlw	0Ah
  2612  053D  300A               	movwf	(main@estado)
  2613  053E  00BF               	movlw	0
  2614  053F  3000               	movwf	((main@estado))+1
  2615  0540  00C0               	line	159
  2616                           ;main.c: 159:                     break;
  2617                           	goto	l1876
  2618  0541  2E9F               	line	160
  2619                           ;main.c: 160:             case 170:
  2620                           	
  2621                           l195:	
  2622  0542                     	line	161
  2623                           	
  2624                           l1832:	
  2625  0542                     ;main.c: 161:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
  2626                           	opt asmopt_push
  2627                           opt asmopt_off
  2628                           movlw  21
  2629  0542  3015               	bcf	status, 5	;RP0=0, select bank0
  2630  0543  1283               	bcf	status, 6	;RP1=0, select bank0
  2631  0544  1303               movwf	((??_main+0)+0+2),f
  2632  0545  00B7               movlw	75
  2633  0546  304B               movwf	((??_main+0)+0+1),f
  2634  0547  00B6               	movlw	189
  2635  0548  30BD               movwf	((??_main+0)+0),f
  2636  0549  00B5               	u1107:
  2637  054A                     decfsz	((??_main+0)+0),f
  2638  054A  0BB5               	goto	u1107
  2639  054B  2D4A               	decfsz	((??_main+0)+0+1),f
  2640  054C  0BB6               	goto	u1107
  2641  054D  2D4A               	decfsz	((??_main+0)+0+2),f
  2642  054E  0BB7               	goto	u1107
  2643  054F  2D4A               	nop2
  2644  0550  2D51               opt asmopt_pop
  2645                           
  2646                           	line	162
  2647                           ;main.c: 162:                     estado = 171;
  2648                           	movlw	0ABh
  2649  0551  30AB               	bcf	status, 5	;RP0=0, select bank0
  2650  0552  1283               	bcf	status, 6	;RP1=0, select bank0
  2651  0553  1303               	movwf	(main@estado)
  2652  0554  00BF               	movlw	0
  2653  0555  3000               	movwf	((main@estado))+1
  2654  0556  00C0               	line	163
  2655                           ;main.c: 163:                     break;
  2656                           	goto	l1876
  2657  0557  2E9F               	line	164
  2658                           ;main.c: 164:             case 171:
  2659                           	
  2660                           l196:	
  2661  0558                     	line	165
  2662                           	
  2663                           l1834:	
  2664  0558                     ;main.c: 165:                     estado = 10;
  2665                           	movlw	0Ah
  2666  0558  300A               	movwf	(main@estado)
  2667  0559  00BF               	movlw	0
  2668  055A  3000               	movwf	((main@estado))+1
  2669  055B  00C0               	line	166
  2670                           ;main.c: 166:                     break;
  2671                           	goto	l1876
  2672  055C  2E9F               	line	167
  2673                           ;main.c: 167:             case 180:
  2674                           	
  2675                           l197:	
  2676  055D                     	line	168
  2677                           	
  2678                           l1836:	
  2679  055D                     ;main.c: 168:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
  2680                           	opt asmopt_push
  2681                           opt asmopt_off
  2682                           movlw  26
  2683  055D  301A               	bcf	status, 5	;RP0=0, select bank0
  2684  055E  1283               	bcf	status, 6	;RP1=0, select bank0
  2685  055F  1303               movwf	((??_main+0)+0+2),f
  2686  0560  00B7               movlw	94
  2687  0561  305E               movwf	((??_main+0)+0+1),f
  2688  0562  00B6               	movlw	109
  2689  0563  306D               movwf	((??_main+0)+0),f
  2690  0564  00B5               	u1117:
  2691  0565                     decfsz	((??_main+0)+0),f
  2692  0565  0BB5               	goto	u1117
  2693  0566  2D65               	decfsz	((??_main+0)+0+1),f
  2694  0567  0BB6               	goto	u1117
  2695  0568  2D65               	decfsz	((??_main+0)+0+2),f
  2696  0569  0BB7               	goto	u1117
  2697  056A  2D65               	nop2
  2698  056B  2D6C               opt asmopt_pop
  2699                           
  2700                           	line	169
  2701                           ;main.c: 169:                     estado = 181;
  2702                           	movlw	0B5h
  2703  056C  30B5               	bcf	status, 5	;RP0=0, select bank0
  2704  056D  1283               	bcf	status, 6	;RP1=0, select bank0
  2705  056E  1303               	movwf	(main@estado)
  2706  056F  00BF               	movlw	0
  2707  0570  3000               	movwf	((main@estado))+1
  2708  0571  00C0               	line	170
  2709                           ;main.c: 170:                     break;
  2710                           	goto	l1876
  2711  0572  2E9F               	line	171
  2712                           ;main.c: 171:             case 181:
  2713                           	
  2714                           l198:	
  2715  0573                     	line	172
  2716                           	
  2717                           l1838:	
  2718  0573                     ;main.c: 172:                     estado = 10;
  2719                           	movlw	0Ah
  2720  0573  300A               	movwf	(main@estado)
  2721  0574  00BF               	movlw	0
  2722  0575  3000               	movwf	((main@estado))+1
  2723  0576  00C0               	line	173
  2724                           ;main.c: 173:                     break;
  2725                           	goto	l1876
  2726  0577  2E9F               	line	174
  2727                           ;main.c: 174:             case 190:
  2728                           	
  2729                           l199:	
  2730  0578                     	line	175
  2731                           	
  2732                           l1840:	
  2733  0578                     ;main.c: 175:                     _delay((unsigned long)((6000)*(4000000/4000.0)));
  2734                           	opt asmopt_push
  2735                           opt asmopt_off
  2736                           movlw  31
  2737  0578  301F               	bcf	status, 5	;RP0=0, select bank0
  2738  0579  1283               	bcf	status, 6	;RP1=0, select bank0
  2739  057A  1303               movwf	((??_main+0)+0+2),f
  2740  057B  00B7               movlw	113
  2741  057C  3071               movwf	((??_main+0)+0+1),f
  2742  057D  00B6               	movlw	29
  2743  057E  301D               movwf	((??_main+0)+0),f
  2744  057F  00B5               	u1127:
  2745  0580                     decfsz	((??_main+0)+0),f
  2746  0580  0BB5               	goto	u1127
  2747  0581  2D80               	decfsz	((??_main+0)+0+1),f
  2748  0582  0BB6               	goto	u1127
  2749  0583  2D80               	decfsz	((??_main+0)+0+2),f
  2750  0584  0BB7               	goto	u1127
  2751  0585  2D80               	nop2
  2752  0586  2D87               opt asmopt_pop
  2753                           
  2754                           	line	176
  2755                           ;main.c: 176:                     estado = 191;
  2756                           	movlw	0BFh
  2757  0587  30BF               	bcf	status, 5	;RP0=0, select bank0
  2758  0588  1283               	bcf	status, 6	;RP1=0, select bank0
  2759  0589  1303               	movwf	(main@estado)
  2760  058A  00BF               	movlw	0
  2761  058B  3000               	movwf	((main@estado))+1
  2762  058C  00C0               	line	177
  2763                           ;main.c: 177:                     break;
  2764                           	goto	l1876
  2765  058D  2E9F               	line	178
  2766                           ;main.c: 178:             case 191:
  2767                           	
  2768                           l200:	
  2769  058E                     	line	179
  2770                           	
  2771                           l1842:	
  2772  058E                     ;main.c: 179:                     estado = 10;
  2773                           	movlw	0Ah
  2774  058E  300A               	movwf	(main@estado)
  2775  058F  00BF               	movlw	0
  2776  0590  3000               	movwf	((main@estado))+1
  2777  0591  00C0               	line	180
  2778                           ;main.c: 180:                     break;
  2779                           	goto	l1876
  2780  0592  2E9F               	line	181
  2781                           ;main.c: 181:             case 200:
  2782                           	
  2783                           l201:	
  2784  0593                     	line	182
  2785                           	
  2786                           l1844:	
  2787  0593                     ;main.c: 182:                     _delay((unsigned long)((7000)*(4000000/4000.0)));
  2788                           	opt asmopt_push
  2789                           opt asmopt_off
  2790                           movlw  36
  2791  0593  3024               	bcf	status, 5	;RP0=0, select bank0
  2792  0594  1283               	bcf	status, 6	;RP1=0, select bank0
  2793  0595  1303               movwf	((??_main+0)+0+2),f
  2794  0596  00B7               movlw	131
  2795  0597  3083               movwf	((??_main+0)+0+1),f
  2796  0598  00B6               	movlw	206
  2797  0599  30CE               movwf	((??_main+0)+0),f
  2798  059A  00B5               	u1137:
  2799  059B                     decfsz	((??_main+0)+0),f
  2800  059B  0BB5               	goto	u1137
  2801  059C  2D9B               	decfsz	((??_main+0)+0+1),f
  2802  059D  0BB6               	goto	u1137
  2803  059E  2D9B               	decfsz	((??_main+0)+0+2),f
  2804  059F  0BB7               	goto	u1137
  2805  05A0  2D9B               	nop
  2806  05A1  0000               opt asmopt_pop
  2807                           
  2808                           	line	183
  2809                           ;main.c: 183:                     estado = 201;
  2810                           	movlw	0C9h
  2811  05A2  30C9               	bcf	status, 5	;RP0=0, select bank0
  2812  05A3  1283               	bcf	status, 6	;RP1=0, select bank0
  2813  05A4  1303               	movwf	(main@estado)
  2814  05A5  00BF               	movlw	0
  2815  05A6  3000               	movwf	((main@estado))+1
  2816  05A7  00C0               	line	184
  2817                           ;main.c: 184:                     break;
  2818                           	goto	l1876
  2819  05A8  2E9F               	line	185
  2820                           ;main.c: 185:             case 201:
  2821                           	
  2822                           l202:	
  2823  05A9                     	line	186
  2824                           	
  2825                           l1846:	
  2826  05A9                     ;main.c: 186:                     estado = 10;
  2827                           	movlw	0Ah
  2828  05A9  300A               	movwf	(main@estado)
  2829  05AA  00BF               	movlw	0
  2830  05AB  3000               	movwf	((main@estado))+1
  2831  05AC  00C0               	line	187
  2832                           ;main.c: 187:                     break;
  2833                           	goto	l1876
  2834  05AD  2E9F               	line	188
  2835                           ;main.c: 188:             case 210:
  2836                           	
  2837                           l203:	
  2838  05AE                     	line	189
  2839                           	
  2840                           l1848:	
  2841  05AE                     ;main.c: 189:                     _delay((unsigned long)((8000)*(4000000/4000.0)));
  2842                           	opt asmopt_push
  2843                           opt asmopt_off
  2844                           movlw  41
  2845  05AE  3029               	bcf	status, 5	;RP0=0, select bank0
  2846  05AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2847  05B0  1303               movwf	((??_main+0)+0+2),f
  2848  05B1  00B7               movlw	150
  2849  05B2  3096               movwf	((??_main+0)+0+1),f
  2850  05B3  00B6               	movlw	126
  2851  05B4  307E               movwf	((??_main+0)+0),f
  2852  05B5  00B5               	u1147:
  2853  05B6                     decfsz	((??_main+0)+0),f
  2854  05B6  0BB5               	goto	u1147
  2855  05B7  2DB6               	decfsz	((??_main+0)+0+1),f
  2856  05B8  0BB6               	goto	u1147
  2857  05B9  2DB6               	decfsz	((??_main+0)+0+2),f
  2858  05BA  0BB7               	goto	u1147
  2859  05BB  2DB6               	nop
  2860  05BC  0000               opt asmopt_pop
  2861                           
  2862                           	line	190
  2863                           ;main.c: 190:                     estado = 211;
  2864                           	movlw	0D3h
  2865  05BD  30D3               	bcf	status, 5	;RP0=0, select bank0
  2866  05BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2867  05BF  1303               	movwf	(main@estado)
  2868  05C0  00BF               	movlw	0
  2869  05C1  3000               	movwf	((main@estado))+1
  2870  05C2  00C0               	line	191
  2871                           ;main.c: 191:                     break;
  2872                           	goto	l1876
  2873  05C3  2E9F               	line	192
  2874                           ;main.c: 192:             case 211:
  2875                           	
  2876                           l204:	
  2877  05C4                     	line	193
  2878                           	
  2879                           l1850:	
  2880  05C4                     ;main.c: 193:                     estado = 10;
  2881                           	movlw	0Ah
  2882  05C4  300A               	movwf	(main@estado)
  2883  05C5  00BF               	movlw	0
  2884  05C6  3000               	movwf	((main@estado))+1
  2885  05C7  00C0               	line	194
  2886                           ;main.c: 194:                     break;
  2887                           	goto	l1876
  2888  05C8  2E9F               	line	195
  2889                           ;main.c: 195:             case 220:
  2890                           	
  2891                           l205:	
  2892  05C9                     	line	196
  2893                           	
  2894                           l1852:	
  2895  05C9                     ;main.c: 196:                     _delay((unsigned long)((9000)*(4000000/4000.0)));
  2896                           	opt asmopt_push
  2897                           opt asmopt_off
  2898                           movlw  46
  2899  05C9  302E               	bcf	status, 5	;RP0=0, select bank0
  2900  05CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2901  05CB  1303               movwf	((??_main+0)+0+2),f
  2902  05CC  00B7               movlw	169
  2903  05CD  30A9               movwf	((??_main+0)+0+1),f
  2904  05CE  00B6               	movlw	46
  2905  05CF  302E               movwf	((??_main+0)+0),f
  2906  05D0  00B5               	u1157:
  2907  05D1                     decfsz	((??_main+0)+0),f
  2908  05D1  0BB5               	goto	u1157
  2909  05D2  2DD1               	decfsz	((??_main+0)+0+1),f
  2910  05D3  0BB6               	goto	u1157
  2911  05D4  2DD1               	decfsz	((??_main+0)+0+2),f
  2912  05D5  0BB7               	goto	u1157
  2913  05D6  2DD1               	nop
  2914  05D7  0000               opt asmopt_pop
  2915                           
  2916                           	line	197
  2917                           ;main.c: 197:                     estado = 221;
  2918                           	movlw	0DDh
  2919  05D8  30DD               	bcf	status, 5	;RP0=0, select bank0
  2920  05D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2921  05DA  1303               	movwf	(main@estado)
  2922  05DB  00BF               	movlw	0
  2923  05DC  3000               	movwf	((main@estado))+1
  2924  05DD  00C0               	line	198
  2925                           ;main.c: 198:                     break;
  2926                           	goto	l1876
  2927  05DE  2E9F               	line	199
  2928                           ;main.c: 199:             case 221:
  2929                           	
  2930                           l206:	
  2931  05DF                     	line	200
  2932                           	
  2933                           l1854:	
  2934  05DF                     ;main.c: 200:                     estado = 10;
  2935                           	movlw	0Ah
  2936  05DF  300A               	movwf	(main@estado)
  2937  05E0  00BF               	movlw	0
  2938  05E1  3000               	movwf	((main@estado))+1
  2939  05E2  00C0               	line	201
  2940                           ;main.c: 201:                     break;
  2941                           	goto	l1876
  2942  05E3  2E9F               	line	203
  2943                           ;main.c: 203:             case 230:
  2944                           	
  2945                           l207:	
  2946  05E4                     	line	204
  2947                           ;main.c: 204:                     atuador.A = 0;
  2948                           	bcf	(main@atuador),7
  2949  05E4  13BC               	line	205
  2950                           	
  2951                           l1856:	
  2952  05E5                     ;main.c: 205:                     estado = 231;
  2953                           	movlw	0E7h
  2954  05E5  30E7               	movwf	(main@estado)
  2955  05E6  00BF               	movlw	0
  2956  05E7  3000               	movwf	((main@estado))+1
  2957  05E8  00C0               	line	206
  2958                           ;main.c: 206:                     break;
  2959                           	goto	l1876
  2960  05E9  2E9F               	line	207
  2961                           ;main.c: 207:             case 231:
  2962                           	
  2963                           l208:	
  2964  05EA                     	line	208
  2965                           ;main.c: 208:                     if( sensor.A0 == 1)
  2966                           	btfss	(main@sensor),0
  2967  05EA  1C3D               	goto	u971
  2968  05EB  2DED               	goto	u970
  2969  05EC  2DEE               u971:
  2970  05ED                     	goto	l1876
  2971  05ED  2E9F               u970:
  2972  05EE                     	line	209
  2973                           	
  2974                           l1858:	
  2975  05EE                     ;main.c: 209:                         estado = 10;
  2976                           	movlw	0Ah
  2977  05EE  300A               	movwf	(main@estado)
  2978  05EF  00BF               	movlw	0
  2979  05F0  3000               	movwf	((main@estado))+1
  2980  05F1  00C0               	goto	l1876
  2981  05F2  2E9F               	
  2982                           l209:	
  2983  05F3                     	line	210
  2984                           ;main.c: 210:                     break;
  2985                           	goto	l1876
  2986  05F3  2E9F               	line	211
  2987                           ;main.c: 211:             case 240:
  2988                           	
  2989                           l210:	
  2990  05F4                     	line	212
  2991                           ;main.c: 212:                     atuador.B = 0;
  2992                           	bcf	(main@atuador),6
  2993  05F4  133C               	line	213
  2994                           	
  2995                           l1860:	
  2996  05F5                     ;main.c: 213:                     estado = 241;
  2997                           	movlw	0F1h
  2998  05F5  30F1               	movwf	(main@estado)
  2999  05F6  00BF               	movlw	0
  3000  05F7  3000               	movwf	((main@estado))+1
  3001  05F8  00C0               	line	214
  3002                           ;main.c: 214:                     break;
  3003                           	goto	l1876
  3004  05F9  2E9F               	line	215
  3005                           ;main.c: 215:             case 241:
  3006                           	
  3007                           l211:	
  3008  05FA                     	line	216
  3009                           ;main.c: 216:                     if( sensor.B0 == 1)
  3010                           	btfss	(main@sensor),2
  3011  05FA  1D3D               	goto	u981
  3012  05FB  2DFD               	goto	u980
  3013  05FC  2DFE               u981:
  3014  05FD                     	goto	l1876
  3015  05FD  2E9F               u980:
  3016  05FE                     	line	217
  3017                           	
  3018                           l1862:	
  3019  05FE                     ;main.c: 217:                         estado = 10;
  3020                           	movlw	0Ah
  3021  05FE  300A               	movwf	(main@estado)
  3022  05FF  00BF               	movlw	0
  3023  0600  3000               	movwf	((main@estado))+1
  3024  0601  00C0               	goto	l1876
  3025  0602  2E9F               	
  3026                           l212:	
  3027  0603                     	line	218
  3028                           ;main.c: 218:                     break;
  3029                           	goto	l1876
  3030  0603  2E9F               	line	219
  3031                           ;main.c: 219:             case 250:
  3032                           	
  3033                           l213:	
  3034  0604                     	line	220
  3035                           ;main.c: 220:                     atuador.C = 0;
  3036                           	bcf	(main@atuador),5
  3037  0604  12BC               	line	221
  3038                           	
  3039                           l1864:	
  3040  0605                     ;main.c: 221:                     estado = 251;
  3041                           	movlw	0FBh
  3042  0605  30FB               	movwf	(main@estado)
  3043  0606  00BF               	movlw	0
  3044  0607  3000               	movwf	((main@estado))+1
  3045  0608  00C0               	line	222
  3046                           ;main.c: 222:                     break;
  3047                           	goto	l1876
  3048  0609  2E9F               	line	223
  3049                           ;main.c: 223:             case 251:
  3050                           	
  3051                           l214:	
  3052  060A                     	line	224
  3053                           ;main.c: 224:                     if( sensor.C0 == 1)
  3054                           	btfss	(main@sensor),4
  3055  060A  1E3D               	goto	u991
  3056  060B  2E0D               	goto	u990
  3057  060C  2E0E               u991:
  3058  060D                     	goto	l1876
  3059  060D  2E9F               u990:
  3060  060E                     	line	225
  3061                           	
  3062                           l1866:	
  3063  060E                     ;main.c: 225:                         estado = 10;
  3064                           	movlw	0Ah
  3065  060E  300A               	movwf	(main@estado)
  3066  060F  00BF               	movlw	0
  3067  0610  3000               	movwf	((main@estado))+1
  3068  0611  00C0               	goto	l1876
  3069  0612  2E9F               	
  3070                           l215:	
  3071  0613                     	line	226
  3072                           ;main.c: 226:                     break;
  3073                           	goto	l1876
  3074  0613  2E9F               	line	227
  3075                           ;main.c: 227:             case 260:
  3076                           	
  3077                           l216:	
  3078  0614                     	line	228
  3079                           ;main.c: 228:                     atuador.D = 0;
  3080                           	bcf	(main@atuador),4
  3081  0614  123C               	line	229
  3082                           	
  3083                           l1868:	
  3084  0615                     ;main.c: 229:                     estado = 261;
  3085                           	movlw	05h
  3086  0615  3005               	movwf	(main@estado)
  3087  0616  00BF               	movlw	01h
  3088  0617  3001               	movwf	((main@estado))+1
  3089  0618  00C0               	line	230
  3090                           ;main.c: 230:                     break;
  3091                           	goto	l1876
  3092  0619  2E9F               	line	231
  3093                           ;main.c: 231:             case 261:
  3094                           	
  3095                           l217:	
  3096  061A                     	line	232
  3097                           ;main.c: 232:                     if( sensor.D0 == 1)
  3098                           	btfss	(main@sensor),6
  3099  061A  1F3D               	goto	u1001
  3100  061B  2E1D               	goto	u1000
  3101  061C  2E1E               u1001:
  3102  061D                     	goto	l1876
  3103  061D  2E9F               u1000:
  3104  061E                     	line	233
  3105                           	
  3106                           l1870:	
  3107  061E                     ;main.c: 233:                         estado = 10;
  3108                           	movlw	0Ah
  3109  061E  300A               	movwf	(main@estado)
  3110  061F  00BF               	movlw	0
  3111  0620  3000               	movwf	((main@estado))+1
  3112  0621  00C0               	goto	l1876
  3113  0622  2E9F               	
  3114                           l218:	
  3115  0623                     	line	234
  3116                           ;main.c: 234:                     break;
  3117                           	goto	l1876
  3118  0623  2E9F               	line	236
  3119                           	
  3120                           l1872:	
  3121  0624                     ;main.c: 236:         }
  3122                           	goto	l1876
  3123  0624  2E9F               	
  3124                           l140:	
  3125  0625                     	
  3126                           l1874:	
  3127  0625                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  3128                           ; Switch size 1, requested type "space"
  3129                           ; Number of cases is 2, Range of values is 0 to 1
  3130                           ; switch strategies available:
  3131                           ; Name         Instructions Cycles
  3132                           ; simple_byte            7     4 (average)
  3133                           ; direct_byte           14     8 (fixed)
  3134                           ; jumptable            260     6 (fixed)
  3135                           ;	Chosen strategy is simple_byte
  3136                           
  3137                           	bcf	status, 5	;RP0=0, select bank0
  3138  0625  1283               	bcf	status, 6	;RP1=0, select bank0
  3139  0626  1303               	movf (main@estado+1),w
  3140  0627  0840               	opt asmopt_push
  3141                           	opt asmopt_off
  3142                           	xorlw	0^0	; case 0
  3143  0628  3A00               	skipnz
  3144  0629  1903               	goto	l2088
  3145  062A  2E2F               	xorlw	1^0	; case 1
  3146  062B  3A01               	skipnz
  3147  062C  1903               	goto	l2090
  3148  062D  2E97               	goto	l1876
  3149  062E  2E9F               	opt asmopt_pop
  3150                           	
  3151                           l2088:	
  3152  062F                     ; Switch size 1, requested type "space"
  3153                           ; Number of cases is 34, Range of values is 0 to 251
  3154                           ; switch strategies available:
  3155                           ; Name         Instructions Cycles
  3156                           ; simple_byte          103    52 (average)
  3157                           ; jumptable            260     6 (fixed)
  3158                           ;	Chosen strategy is simple_byte
  3159                           
  3160                           	movf (main@estado),w
  3161  062F  083F               	opt asmopt_push
  3162                           	opt asmopt_off
  3163                           	xorlw	0^0	; case 0
  3164  0630  3A00               	skipnz
  3165  0631  1903               	goto	l1876
  3166  0632  2E9F               	xorlw	10^0	; case 10
  3167  0633  3A0A               	skipnz
  3168  0634  1903               	goto	l1734
  3169  0635  2BDE               	xorlw	100^10	; case 100
  3170  0636  3A6E               	skipnz
  3171  0637  1903               	goto	l177
  3172  0638  2CB4               	xorlw	101^100	; case 101
  3173  0639  3A01               	skipnz
  3174  063A  1903               	goto	l178
  3175  063B  2CBA               	xorlw	110^101	; case 110
  3176  063C  3A0B               	skipnz
  3177  063D  1903               	goto	l180
  3178  063E  2CC4               	xorlw	111^110	; case 111
  3179  063F  3A01               	skipnz
  3180  0640  1903               	goto	l181
  3181  0641  2CCA               	xorlw	120^111	; case 120
  3182  0642  3A17               	skipnz
  3183  0643  1903               	goto	l183
  3184  0644  2CD4               	xorlw	121^120	; case 121
  3185  0645  3A01               	skipnz
  3186  0646  1903               	goto	l184
  3187  0647  2CDA               	xorlw	130^121	; case 130
  3188  0648  3AFB               	skipnz
  3189  0649  1903               	goto	l186
  3190  064A  2CE4               	xorlw	131^130	; case 131
  3191  064B  3A01               	skipnz
  3192  064C  1903               	goto	l187
  3193  064D  2CEA               	xorlw	140^131	; case 140
  3194  064E  3A0F               	skipnz
  3195  064F  1903               	goto	l1820
  3196  0650  2CF4               	xorlw	141^140	; case 141
  3197  0651  3A01               	skipnz
  3198  0652  1903               	goto	l1822
  3199  0653  2D09               	xorlw	150^141	; case 150
  3200  0654  3A1B               	skipnz
  3201  0655  1903               	goto	l1824
  3202  0656  2D0E               	xorlw	151^150	; case 151
  3203  0657  3A01               	skipnz
  3204  0658  1903               	goto	l1826
  3205  0659  2D23               	xorlw	160^151	; case 160
  3206  065A  3A37               	skipnz
  3207  065B  1903               	goto	l1828
  3208  065C  2D28               	xorlw	161^160	; case 161
  3209  065D  3A01               	skipnz
  3210  065E  1903               	goto	l1830
  3211  065F  2D3D               	xorlw	170^161	; case 170
  3212  0660  3A0B               	skipnz
  3213  0661  1903               	goto	l1832
  3214  0662  2D42               	xorlw	171^170	; case 171
  3215  0663  3A01               	skipnz
  3216  0664  1903               	goto	l1834
  3217  0665  2D58               	xorlw	180^171	; case 180
  3218  0666  3A1F               	skipnz
  3219  0667  1903               	goto	l1836
  3220  0668  2D5D               	xorlw	181^180	; case 181
  3221  0669  3A01               	skipnz
  3222  066A  1903               	goto	l1838
  3223  066B  2D73               	xorlw	190^181	; case 190
  3224  066C  3A0B               	skipnz
  3225  066D  1903               	goto	l1840
  3226  066E  2D78               	xorlw	191^190	; case 191
  3227  066F  3A01               	skipnz
  3228  0670  1903               	goto	l1842
  3229  0671  2D8E               	xorlw	200^191	; case 200
  3230  0672  3A77               	skipnz
  3231  0673  1903               	goto	l1844
  3232  0674  2D93               	xorlw	201^200	; case 201
  3233  0675  3A01               	skipnz
  3234  0676  1903               	goto	l1846
  3235  0677  2DA9               	xorlw	210^201	; case 210
  3236  0678  3A1B               	skipnz
  3237  0679  1903               	goto	l1848
  3238  067A  2DAE               	xorlw	211^210	; case 211
  3239  067B  3A01               	skipnz
  3240  067C  1903               	goto	l1850
  3241  067D  2DC4               	xorlw	220^211	; case 220
  3242  067E  3A0F               	skipnz
  3243  067F  1903               	goto	l1852
  3244  0680  2DC9               	xorlw	221^220	; case 221
  3245  0681  3A01               	skipnz
  3246  0682  1903               	goto	l1854
  3247  0683  2DDF               	xorlw	230^221	; case 230
  3248  0684  3A3B               	skipnz
  3249  0685  1903               	goto	l207
  3250  0686  2DE4               	xorlw	231^230	; case 231
  3251  0687  3A01               	skipnz
  3252  0688  1903               	goto	l208
  3253  0689  2DEA               	xorlw	240^231	; case 240
  3254  068A  3A17               	skipnz
  3255  068B  1903               	goto	l210
  3256  068C  2DF4               	xorlw	241^240	; case 241
  3257  068D  3A01               	skipnz
  3258  068E  1903               	goto	l211
  3259  068F  2DFA               	xorlw	250^241	; case 250
  3260  0690  3A0B               	skipnz
  3261  0691  1903               	goto	l213
  3262  0692  2E04               	xorlw	251^250	; case 251
  3263  0693  3A01               	skipnz
  3264  0694  1903               	goto	l214
  3265  0695  2E0A               	goto	l1876
  3266  0696  2E9F               	opt asmopt_pop
  3267                           	
  3268                           l2090:	
  3269  0697                     ; Switch size 1, requested type "space"
  3270                           ; Number of cases is 2, Range of values is 4 to 5
  3271                           ; switch strategies available:
  3272                           ; Name         Instructions Cycles
  3273                           ; simple_byte            7     4 (average)
  3274                           ; direct_byte           17    11 (fixed)
  3275                           ; jumptable            263     9 (fixed)
  3276                           ;	Chosen strategy is simple_byte
  3277                           
  3278                           	movf (main@estado),w
  3279  0697  083F               	opt asmopt_push
  3280                           	opt asmopt_off
  3281                           	xorlw	4^0	; case 4
  3282  0698  3A04               	skipnz
  3283  0699  1903               	goto	l216
  3284  069A  2E14               	xorlw	5^4	; case 5
  3285  069B  3A01               	skipnz
  3286  069C  1903               	goto	l217
  3287  069D  2E1A               	goto	l1876
  3288  069E  2E9F               	opt asmopt_pop
  3289                           
  3290                           	
  3291                           l142:	
  3292  069F                     	line	237
  3293                           	
  3294                           l1876:	
  3295  069F                     ;main.c: 237:         if( currentKey() && !previousKey() )
  3296                           	fcall	_currentKey
  3297  069F  120A  118A  2114  120A  118A  	xorlw	0
  3298  06A4  3A00               	skipnz
  3299  06A5  1903               	goto	u1011
  3300  06A6  2EA8               	goto	u1010
  3301  06A7  2EA9               u1011:
  3302  06A8                     	goto	l219
  3303  06A8  2FE7               u1010:
  3304  06A9                     	
  3305                           l1878:	
  3306  06A9                     	fcall	_previousKey
  3307  06A9  120A  118A  2119  120A  118A  	xorlw	0
  3308  06AE  3A00               	skipz
  3309  06AF  1D03               	goto	u1021
  3310  06B0  2EB2               	goto	u1020
  3311  06B1  2EB3               u1021:
  3312  06B2                     	goto	l219
  3313  06B2  2FE7               u1020:
  3314  06B3                     	line	239
  3315                           	
  3316                           l1880:	
  3317  06B3                     ;main.c: 238:         {;main.c: 239:             tecla = currentKey();
  3318                           	fcall	_currentKey
  3319  06B3  120A  118A  2114  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3320  06B8  1283               	bcf	status, 6	;RP1=0, select bank0
  3321  06B9  1303               	movwf	(??_main+0)+0
  3322  06BA  00B5               	movf	(??_main+0)+0,w
  3323  06BB  0835               	movwf	(main@tecla)
  3324  06BC  00BE               	line	240
  3325                           ;main.c: 240:             switch(tecla)
  3326                           	goto	l1940
  3327  06BD  2F9C               	line	242
  3328                           ;main.c: 241:             {;main.c: 242:                 case 'A':
  3329                           	
  3330                           l221:	
  3331  06BE                     	line	243
  3332                           	
  3333                           l1882:	
  3334  06BE                     ;main.c: 243:                         ++a;
  3335                           	movlw	low(01h)
  3336  06BE  3001               	movwf	(??_main+0)+0
  3337  06BF  00B5               	movf	(??_main+0)+0,w
  3338  06C0  0835               	addwf	(main@a),f
  3339  06C1  07B8               	line	244
  3340                           	
  3341                           l1884:	
  3342  06C2                     ;main.c: 244:                         if( a % 2 )
  3343                           	btfss	(main@a),(0)&7
  3344  06C2  1C38               	goto	u1031
  3345  06C3  2EC5               	goto	u1030
  3346  06C4  2EC6               u1031:
  3347  06C5                     	goto	l1888
  3348  06C5  2ECD               u1030:
  3349  06C6                     	line	245
  3350                           	
  3351                           l1886:	
  3352  06C6                     ;main.c: 245:                             putFIFO( tecla );
  3353                           	movf	(main@tecla),w
  3354  06C6  083E               	fcall	_putFIFO
  3355  06C7  120A  118A  2132  120A  118A  	goto	l1942
  3356  06CC  2FD6               	line	246
  3357                           ;main.c: 246:                         else
  3358                           	
  3359                           l222:	
  3360  06CD                     	line	247
  3361                           	
  3362                           l1888:	
  3363  06CD                     ;main.c: 247:                             putFIFO( tecla | 0x20 );
  3364                           	bcf	status, 5	;RP0=0, select bank0
  3365  06CD  1283               	bcf	status, 6	;RP1=0, select bank0
  3366  06CE  1303               	movf	(main@tecla),w
  3367  06CF  083E               	iorlw	020h
  3368  06D0  3820               	fcall	_putFIFO
  3369  06D1  120A  118A  2132  120A  118A  	goto	l1942
  3370  06D6  2FD6               	
  3371                           l223:	
  3372  06D7                     	line	248
  3373                           ;main.c: 248:                         break;
  3374                           	goto	l1942
  3375  06D7  2FD6               	line	249
  3376                           ;main.c: 249:                 case 'B':
  3377                           	
  3378                           l225:	
  3379  06D8                     	line	250
  3380                           	
  3381                           l1890:	
  3382  06D8                     ;main.c: 250:                         ++b;
  3383                           	movlw	low(01h)
  3384  06D8  3001               	bcf	status, 5	;RP0=0, select bank0
  3385  06D9  1283               	bcf	status, 6	;RP1=0, select bank0
  3386  06DA  1303               	movwf	(??_main+0)+0
  3387  06DB  00B5               	movf	(??_main+0)+0,w
  3388  06DC  0835               	addwf	(main@b),f
  3389  06DD  07B9               	line	251
  3390                           	
  3391                           l1892:	
  3392  06DE                     ;main.c: 251:                         if( b % 2 )
  3393                           	btfss	(main@b),(0)&7
  3394  06DE  1C39               	goto	u1041
  3395  06DF  2EE1               	goto	u1040
  3396  06E0  2EE2               u1041:
  3397  06E1                     	goto	l1896
  3398  06E1  2EE9               u1040:
  3399  06E2                     	line	252
  3400                           	
  3401                           l1894:	
  3402  06E2                     ;main.c: 252:                             putFIFO( tecla );
  3403                           	movf	(main@tecla),w
  3404  06E2  083E               	fcall	_putFIFO
  3405  06E3  120A  118A  2132  120A  118A  	goto	l1942
  3406  06E8  2FD6               	line	253
  3407                           ;main.c: 253:                         else
  3408                           	
  3409                           l226:	
  3410  06E9                     	line	254
  3411                           	
  3412                           l1896:	
  3413  06E9                     ;main.c: 254:                             putFIFO( tecla | 0x20 );
  3414                           	bcf	status, 5	;RP0=0, select bank0
  3415  06E9  1283               	bcf	status, 6	;RP1=0, select bank0
  3416  06EA  1303               	movf	(main@tecla),w
  3417  06EB  083E               	iorlw	020h
  3418  06EC  3820               	fcall	_putFIFO
  3419  06ED  120A  118A  2132  120A  118A  	goto	l1942
  3420  06F2  2FD6               	
  3421                           l227:	
  3422  06F3                     	line	255
  3423                           ;main.c: 255:                         break;
  3424                           	goto	l1942
  3425  06F3  2FD6               	line	256
  3426                           ;main.c: 256:                 case 'C':
  3427                           	
  3428                           l228:	
  3429  06F4                     	line	257
  3430                           	
  3431                           l1898:	
  3432  06F4                     ;main.c: 257:                         ++c;
  3433                           	movlw	low(01h)
  3434  06F4  3001               	bcf	status, 5	;RP0=0, select bank0
  3435  06F5  1283               	bcf	status, 6	;RP1=0, select bank0
  3436  06F6  1303               	movwf	(??_main+0)+0
  3437  06F7  00B5               	movf	(??_main+0)+0,w
  3438  06F8  0835               	addwf	(main@c),f
  3439  06F9  07BA               	line	258
  3440                           	
  3441                           l1900:	
  3442  06FA                     ;main.c: 258:                         if( c % 2 )
  3443                           	btfss	(main@c),(0)&7
  3444  06FA  1C3A               	goto	u1051
  3445  06FB  2EFD               	goto	u1050
  3446  06FC  2EFE               u1051:
  3447  06FD                     	goto	l1904
  3448  06FD  2F05               u1050:
  3449  06FE                     	line	259
  3450                           	
  3451                           l1902:	
  3452  06FE                     ;main.c: 259:                             putFIFO( tecla );
  3453                           	movf	(main@tecla),w
  3454  06FE  083E               	fcall	_putFIFO
  3455  06FF  120A  118A  2132  120A  118A  	goto	l1942
  3456  0704  2FD6               	line	260
  3457                           ;main.c: 260:                         else
  3458                           	
  3459                           l229:	
  3460  0705                     	line	261
  3461                           	
  3462                           l1904:	
  3463  0705                     ;main.c: 261:                             putFIFO( tecla | 0x20 );
  3464                           	bcf	status, 5	;RP0=0, select bank0
  3465  0705  1283               	bcf	status, 6	;RP1=0, select bank0
  3466  0706  1303               	movf	(main@tecla),w
  3467  0707  083E               	iorlw	020h
  3468  0708  3820               	fcall	_putFIFO
  3469  0709  120A  118A  2132  120A  118A  	goto	l1942
  3470  070E  2FD6               	
  3471                           l230:	
  3472  070F                     	line	262
  3473                           ;main.c: 262:                         break;
  3474                           	goto	l1942
  3475  070F  2FD6               	line	263
  3476                           ;main.c: 263:                 case 'D':
  3477                           	
  3478                           l231:	
  3479  0710                     	line	264
  3480                           	
  3481                           l1906:	
  3482  0710                     ;main.c: 264:                         ++d;
  3483                           	movlw	low(01h)
  3484  0710  3001               	bcf	status, 5	;RP0=0, select bank0
  3485  0711  1283               	bcf	status, 6	;RP1=0, select bank0
  3486  0712  1303               	movwf	(??_main+0)+0
  3487  0713  00B5               	movf	(??_main+0)+0,w
  3488  0714  0835               	addwf	(main@d),f
  3489  0715  07BB               	line	265
  3490                           	
  3491                           l1908:	
  3492  0716                     ;main.c: 265:                         if( d % 2 )
  3493                           	btfss	(main@d),(0)&7
  3494  0716  1C3B               	goto	u1061
  3495  0717  2F19               	goto	u1060
  3496  0718  2F1A               u1061:
  3497  0719                     	goto	l1912
  3498  0719  2F21               u1060:
  3499  071A                     	line	266
  3500                           	
  3501                           l1910:	
  3502  071A                     ;main.c: 266:                             putFIFO( tecla );
  3503                           	movf	(main@tecla),w
  3504  071A  083E               	fcall	_putFIFO
  3505  071B  120A  118A  2132  120A  118A  	goto	l1942
  3506  0720  2FD6               	line	267
  3507                           ;main.c: 267:                         else
  3508                           	
  3509                           l232:	
  3510  0721                     	line	268
  3511                           	
  3512                           l1912:	
  3513  0721                     ;main.c: 268:                             putFIFO( tecla | 0x20 );
  3514                           	bcf	status, 5	;RP0=0, select bank0
  3515  0721  1283               	bcf	status, 6	;RP1=0, select bank0
  3516  0722  1303               	movf	(main@tecla),w
  3517  0723  083E               	iorlw	020h
  3518  0724  3820               	fcall	_putFIFO
  3519  0725  120A  118A  2132  120A  118A  	goto	l1942
  3520  072A  2FD6               	
  3521                           l233:	
  3522  072B                     	line	269
  3523                           ;main.c: 269:                         break;
  3524                           	goto	l1942
  3525  072B  2FD6               	line	270
  3526                           ;main.c: 270:                 case '0':
  3527                           	
  3528                           l234:	
  3529  072C                     	line	271
  3530                           	
  3531                           l1914:	
  3532  072C                     ;main.c: 271:                         delFIFO(16);
  3533                           	movlw	low(010h)
  3534  072C  3010               	fcall	_delFIFO
  3535  072D  120A  118A  2182  120A  118A  	line	272
  3536                           	
  3537                           l1916:	
  3538  0732                     ;main.c: 272:                         clearLCD();
  3539                           	fcall	_clearLCD
  3540  0732  120A  118A  2123  120A  118A  	line	273
  3541                           	
  3542                           l1918:	
  3543  0737                     ;main.c: 273:                         a = b = c = d = 0;
  3544                           	bcf	status, 5	;RP0=0, select bank0
  3545  0737  1283               	bcf	status, 6	;RP1=0, select bank0
  3546  0738  1303               	clrf	(main@d)
  3547  0739  01BB               	clrf	(main@c)
  3548  073A  01BA               	clrf	(main@b)
  3549  073B  01B9               	clrf	(main@a)
  3550  073C  01B8               	line	274
  3551                           ;main.c: 274:                         break;
  3552                           	goto	l1942
  3553  073D  2FD6               	line	275
  3554                           ;main.c: 275:                 case '1':
  3555                           	
  3556                           l235:	
  3557  073E                     	goto	l1920
  3558  073E  2F46               	line	276
  3559                           ;main.c: 276:                 case '2':
  3560                           	
  3561                           l236:	
  3562  073F                     	goto	l1920
  3563  073F  2F46               	line	277
  3564                           ;main.c: 277:                 case '3':
  3565                           	
  3566                           l237:	
  3567  0740                     	goto	l1920
  3568  0740  2F46               	line	278
  3569                           ;main.c: 278:                 case '4':
  3570                           	
  3571                           l238:	
  3572  0741                     	goto	l1920
  3573  0741  2F46               	line	279
  3574                           ;main.c: 279:                 case '5':
  3575                           	
  3576                           l239:	
  3577  0742                     	goto	l1920
  3578  0742  2F46               	line	280
  3579                           ;main.c: 280:                 case '6':
  3580                           	
  3581                           l240:	
  3582  0743                     	goto	l1920
  3583  0743  2F46               	line	281
  3584                           ;main.c: 281:                 case '7':
  3585                           	
  3586                           l241:	
  3587  0744                     	goto	l1920
  3588  0744  2F46               	line	282
  3589                           ;main.c: 282:                 case '8':
  3590                           	
  3591                           l242:	
  3592  0745                     	goto	l1920
  3593  0745  2F46               	line	283
  3594                           ;main.c: 283:                 case '9':
  3595                           	
  3596                           l243:	
  3597  0746                     	line	284
  3598                           	
  3599                           l1920:	
  3600  0746                     ;main.c: 284:                         putFIFO(tecla);
  3601                           	movf	(main@tecla),w
  3602  0746  083E               	fcall	_putFIFO
  3603  0747  120A  118A  2132  120A  118A  	line	285
  3604                           ;main.c: 285:                         break;
  3605                           	goto	l1942
  3606  074C  2FD6               	line	286
  3607                           ;main.c: 286:                 case '*':
  3608                           	
  3609                           l244:	
  3610  074D                     	line	287
  3611                           ;main.c: 287:                         switch( delFIFO(1) )
  3612                           	goto	l1932
  3613  074D  2F65               	line	289
  3614                           ;main.c: 288:                         {;main.c: 289:                             case 'A
                                 ': a = 0; break;
  3615                           	
  3616                           l246:	
  3617  074E                     	
  3618                           l1922:	
  3619  074E                     	bcf	status, 5	;RP0=0, select bank0
  3620  074E  1283               	bcf	status, 6	;RP1=0, select bank0
  3621  074F  1303               	clrf	(main@a)
  3622  0750  01B8               	goto	l1934
  3623  0751  2F8E               	line	290
  3624                           ;main.c: 290:                             case 'a': a = 1; break;
  3625                           	
  3626                           l248:	
  3627  0752                     	clrf	(main@a)
  3628  0752  01B8               	incf	(main@a),f
  3629  0753  0AB8               	goto	l1934
  3630  0754  2F8E               	line	291
  3631                           ;main.c: 291:                             case 'B': b = 0; break;
  3632                           	
  3633                           l249:	
  3634  0755                     	
  3635                           l1924:	
  3636  0755                     	clrf	(main@b)
  3637  0755  01B9               	goto	l1934
  3638  0756  2F8E               	line	292
  3639                           ;main.c: 292:                             case 'b': b = 1; break;
  3640                           	
  3641                           l250:	
  3642  0757                     	clrf	(main@b)
  3643  0757  01B9               	incf	(main@b),f
  3644  0758  0AB9               	goto	l1934
  3645  0759  2F8E               	line	293
  3646                           ;main.c: 293:                             case 'C': c = 0; break;
  3647                           	
  3648                           l251:	
  3649  075A                     	
  3650                           l1926:	
  3651  075A                     	clrf	(main@c)
  3652  075A  01BA               	goto	l1934
  3653  075B  2F8E               	line	294
  3654                           ;main.c: 294:                             case 'c': c = 1; break;
  3655                           	
  3656                           l252:	
  3657  075C                     	clrf	(main@c)
  3658  075C  01BA               	incf	(main@c),f
  3659  075D  0ABA               	goto	l1934
  3660  075E  2F8E               	line	295
  3661                           ;main.c: 295:                             case 'D': d = 0; break;
  3662                           	
  3663                           l253:	
  3664  075F                     	
  3665                           l1928:	
  3666  075F                     	clrf	(main@d)
  3667  075F  01BB               	goto	l1934
  3668  0760  2F8E               	line	296
  3669                           ;main.c: 296:                             case 'd': d = 1; break;
  3670                           	
  3671                           l254:	
  3672  0761                     	clrf	(main@d)
  3673  0761  01BB               	incf	(main@d),f
  3674  0762  0ABB               	goto	l1934
  3675  0763  2F8E               	line	297
  3676                           	
  3677                           l1930:	
  3678  0764                     ;main.c: 297:                         }
  3679                           	goto	l1934
  3680  0764  2F8E               	
  3681                           l245:	
  3682  0765                     	
  3683                           l1932:	
  3684  0765                     	movlw	low(01h)
  3685  0765  3001               	fcall	_delFIFO
  3686  0766  120A  118A  2182  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3687  076B  1283               	bcf	status, 6	;RP1=0, select bank0
  3688  076C  1303               	movwf	(??_main+0)+0
  3689  076D  00B5               	clrf	(??_main+0)+0+1
  3690  076E  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3691                           ; Switch size 1, requested type "space"
  3692                           ; Number of cases is 1, Range of values is 0 to 0
  3693                           ; switch strategies available:
  3694                           ; Name         Instructions Cycles
  3695                           ; simple_byte            4     3 (average)
  3696                           ; direct_byte           11     8 (fixed)
  3697                           ; jumptable            260     6 (fixed)
  3698                           ;	Chosen strategy is simple_byte
  3699                           
  3700                           	movf 1+(??_main+0)+0,w
  3701  076F  0836               	opt asmopt_push
  3702                           	opt asmopt_off
  3703                           	xorlw	0^0	; case 0
  3704  0770  3A00               	skipnz
  3705  0771  1903               	goto	l2092
  3706  0772  2F74               	goto	l1934
  3707  0773  2F8E               	opt asmopt_pop
  3708                           	
  3709                           l2092:	
  3710  0774                     ; Switch size 1, requested type "space"
  3711                           ; Number of cases is 8, Range of values is 65 to 100
  3712                           ; switch strategies available:
  3713                           ; Name         Instructions Cycles
  3714                           ; simple_byte           25    13 (average)
  3715                           ; direct_byte          119    11 (fixed)
  3716                           ; jumptable            263     9 (fixed)
  3717                           ;	Chosen strategy is simple_byte
  3718                           
  3719                           	movf 0+(??_main+0)+0,w
  3720  0774  0835               	opt asmopt_push
  3721                           	opt asmopt_off
  3722                           	xorlw	65^0	; case 65
  3723  0775  3A41               	skipnz
  3724  0776  1903               	goto	l1922
  3725  0777  2F4E               	xorlw	66^65	; case 66
  3726  0778  3A03               	skipnz
  3727  0779  1903               	goto	l1924
  3728  077A  2F55               	xorlw	67^66	; case 67
  3729  077B  3A01               	skipnz
  3730  077C  1903               	goto	l1926
  3731  077D  2F5A               	xorlw	68^67	; case 68
  3732  077E  3A07               	skipnz
  3733  077F  1903               	goto	l1928
  3734  0780  2F5F               	xorlw	97^68	; case 97
  3735  0781  3A25               	skipnz
  3736  0782  1903               	goto	l248
  3737  0783  2F52               	xorlw	98^97	; case 98
  3738  0784  3A03               	skipnz
  3739  0785  1903               	goto	l250
  3740  0786  2F57               	xorlw	99^98	; case 99
  3741  0787  3A01               	skipnz
  3742  0788  1903               	goto	l252
  3743  0789  2F5C               	xorlw	100^99	; case 100
  3744  078A  3A07               	skipnz
  3745  078B  1903               	goto	l254
  3746  078C  2F61               	goto	l1934
  3747  078D  2F8E               	opt asmopt_pop
  3748                           
  3749                           	
  3750                           l247:	
  3751  078E                     	line	298
  3752                           	
  3753                           l1934:	
  3754  078E                     ;main.c: 298:                         clearLCD();
  3755                           	fcall	_clearLCD
  3756  078E  120A  118A  2123  120A  118A  	line	299
  3757                           ;main.c: 299:                         break;
  3758                           	goto	l1942
  3759  0793  2FD6               	line	300
  3760                           ;main.c: 300:                 case '#':
  3761                           	
  3762                           l255:	
  3763  0794                     	line	301
  3764                           	
  3765                           l1936:	
  3766  0794                     ;main.c: 301:                         estado = 10;
  3767                           	movlw	0Ah
  3768  0794  300A               	bcf	status, 5	;RP0=0, select bank0
  3769  0795  1283               	bcf	status, 6	;RP1=0, select bank0
  3770  0796  1303               	movwf	(main@estado)
  3771  0797  00BF               	movlw	0
  3772  0798  3000               	movwf	((main@estado))+1
  3773  0799  00C0               	line	302
  3774                           ;main.c: 302:                         break;
  3775                           	goto	l1942
  3776  079A  2FD6               	line	303
  3777                           	
  3778                           l1938:	
  3779  079B                     ;main.c: 303:             }
  3780                           	goto	l1942
  3781  079B  2FD6               	
  3782                           l220:	
  3783  079C                     	
  3784                           l1940:	
  3785  079C                     	movf	(main@tecla),w
  3786  079C  083E               	movwf	(??_main+0)+0
  3787  079D  00B5               	clrf	(??_main+0)+0+1
  3788  079E  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3789                           ; Switch size 1, requested type "space"
  3790                           ; Number of cases is 1, Range of values is 0 to 0
  3791                           ; switch strategies available:
  3792                           ; Name         Instructions Cycles
  3793                           ; simple_byte            4     3 (average)
  3794                           ; direct_byte           11     8 (fixed)
  3795                           ; jumptable            260     6 (fixed)
  3796                           ;	Chosen strategy is simple_byte
  3797                           
  3798                           	movf 1+(??_main+0)+0,w
  3799  079F  0836               	opt asmopt_push
  3800                           	opt asmopt_off
  3801                           	xorlw	0^0	; case 0
  3802  07A0  3A00               	skipnz
  3803  07A1  1903               	goto	l2094
  3804  07A2  2FA4               	goto	l1942
  3805  07A3  2FD6               	opt asmopt_pop
  3806                           	
  3807                           l2094:	
  3808  07A4                     ; Switch size 1, requested type "space"
  3809                           ; Number of cases is 16, Range of values is 35 to 68
  3810                           ; switch strategies available:
  3811                           ; Name         Instructions Cycles
  3812                           ; simple_byte           49    25 (average)
  3813                           ; direct_byte          113    11 (fixed)
  3814                           ; jumptable            263     9 (fixed)
  3815                           ;	Chosen strategy is simple_byte
  3816                           
  3817                           	movf 0+(??_main+0)+0,w
  3818  07A4  0835               	opt asmopt_push
  3819                           	opt asmopt_off
  3820                           	xorlw	35^0	; case 35
  3821  07A5  3A23               	skipnz
  3822  07A6  1903               	goto	l1936
  3823  07A7  2F94               	xorlw	42^35	; case 42
  3824  07A8  3A09               	skipnz
  3825  07A9  1903               	goto	l1932
  3826  07AA  2F65               	xorlw	48^42	; case 48
  3827  07AB  3A1A               	skipnz
  3828  07AC  1903               	goto	l1914
  3829  07AD  2F2C               	xorlw	49^48	; case 49
  3830  07AE  3A01               	skipnz
  3831  07AF  1903               	goto	l1920
  3832  07B0  2F46               	xorlw	50^49	; case 50
  3833  07B1  3A03               	skipnz
  3834  07B2  1903               	goto	l1920
  3835  07B3  2F46               	xorlw	51^50	; case 51
  3836  07B4  3A01               	skipnz
  3837  07B5  1903               	goto	l1920
  3838  07B6  2F46               	xorlw	52^51	; case 52
  3839  07B7  3A07               	skipnz
  3840  07B8  1903               	goto	l1920
  3841  07B9  2F46               	xorlw	53^52	; case 53
  3842  07BA  3A01               	skipnz
  3843  07BB  1903               	goto	l1920
  3844  07BC  2F46               	xorlw	54^53	; case 54
  3845  07BD  3A03               	skipnz
  3846  07BE  1903               	goto	l1920
  3847  07BF  2F46               	xorlw	55^54	; case 55
  3848  07C0  3A01               	skipnz
  3849  07C1  1903               	goto	l1920
  3850  07C2  2F46               	xorlw	56^55	; case 56
  3851  07C3  3A0F               	skipnz
  3852  07C4  1903               	goto	l1920
  3853  07C5  2F46               	xorlw	57^56	; case 57
  3854  07C6  3A01               	skipnz
  3855  07C7  1903               	goto	l1920
  3856  07C8  2F46               	xorlw	65^57	; case 65
  3857  07C9  3A78               	skipnz
  3858  07CA  1903               	goto	l1882
  3859  07CB  2EBE               	xorlw	66^65	; case 66
  3860  07CC  3A03               	skipnz
  3861  07CD  1903               	goto	l1890
  3862  07CE  2ED8               	xorlw	67^66	; case 67
  3863  07CF  3A01               	skipnz
  3864  07D0  1903               	goto	l1898
  3865  07D1  2EF4               	xorlw	68^67	; case 68
  3866  07D2  3A07               	skipnz
  3867  07D3  1903               	goto	l1906
  3868  07D4  2F10               	goto	l1942
  3869  07D5  2FD6               	opt asmopt_pop
  3870                           
  3871                           	
  3872                           l224:	
  3873  07D6                     	line	304
  3874                           	
  3875                           l1942:	
  3876  07D6                     ;main.c: 304:             writeLCD(0,0, displayFIFO() );
  3877                           	clrf	(writeLCD@y)
  3878  07D6  01F8               	fcall	_displayFIFO
  3879  07D7  120A  118A  2111  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3880  07DC  1283               	bcf	status, 6	;RP1=0, select bank0
  3881  07DD  1303               	movwf	(??_main+0)+0
  3882  07DE  00B5               	movf	(??_main+0)+0,w
  3883  07DF  0835               	movwf	(writeLCD@ptr)
  3884  07E0  00F9               	movlw	low(0)
  3885  07E1  3000               	fcall	_writeLCD
  3886  07E2  120A  118A  21A3  120A  118A  	line	305
  3887                           ;main.c: 305:         }
  3888                           	
  3889                           l219:	
  3890  07E7                     	line	306
  3891                           ;main.c: 306:         serialIOscan();
  3892                           	fcall	_serialIOscan
  3893  07E7  120A  118A  225A  120A  118A  	goto	l1732
  3894  07EC  2BD7               	line	307
  3895                           ;main.c: 307:     }
  3896                           	
  3897                           l256:	
  3898  07ED                     	goto	l1732
  3899  07ED  2BD7               	
  3900                           l257:	
  3901  07EE                     	line	308
  3902                           	
  3903                           l258:	
  3904  07EE                     	global	start
  3905                           	ljmp	start
  3906  07EE  120A  118A  2800   	opt stack 0
  3907                           GLOBAL	__end_of_main
  3908                           	__end_of_main:
  3909  07F1                     	signat	_main,89
  3910                           	global	_writeLCD
  3911                           
  3912 ;; *************** function _writeLCD *****************
  3913 ;; Defined at:
  3914 ;;		line 82 in file "lcd.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  x               1    wreg     unsigned char 
  3917 ;;  y               1    8[COMMON] unsigned char 
  3918 ;;  ptr             1    9[COMMON] PTR const unsigned char 
  3919 ;;		 -> fifo(16), 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  x               1   11[COMMON] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         2       0       0       0       0
  3932 ;;      Locals:         1       0       0       0       0
  3933 ;;      Temps:          1       0       0       0       0
  3934 ;;      Totals:         4       0       0       0       0
  3935 ;;Total ram usage:        4 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		_gotoxy
  3940 ;;		_putLCD
  3941 ;; This function is called by:
  3942 ;;		_main
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3946                           	file	"lcd.c"
  3947                           	line	82
  3948                           global __ptext1
  3949                           __ptext1:	;psect for function _writeLCD
  3950  01A3                     psect	text1
  3951                           	file	"lcd.c"
  3952                           	line	82
  3953                           	global	__size_of_writeLCD
  3954                           	__size_of_writeLCD	equ	__end_of_writeLCD-_writeLCD
  3955  0024                     	
  3956                           _writeLCD:	
  3957  01A3                     ;incstack = 0
  3958                           	opt	stack 5
  3959                           ; Regs used in _writeLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3960                           ;writeLCD@x stored from wreg
  3961                           	movwf	(writeLCD@x)
  3962  01A3  00FB               	line	84
  3963                           	
  3964                           l1668:	
  3965  01A4                     ;lcd.c: 82: void writeLCD( unsigned char x, unsigned char y, const char * ptr );lcd.c: 8
                                 3: {;lcd.c: 84:         gotoxy(x,y);
  3966                           	movf	(writeLCD@y),w
  3967  01A4  0878               	movwf	(??_writeLCD+0)+0
  3968  01A5  00FA               	movf	(??_writeLCD+0)+0,w
  3969  01A6  087A               	movwf	(gotoxy@y)
  3970  01A7  00F4               	movf	(writeLCD@x),w
  3971  01A8  087B               	fcall	_gotoxy
  3972  01A9  120A  118A  216A  120A  118A  	line	85
  3973                           ;lcd.c: 85:         while( *ptr )
  3974                           	goto	l1674
  3975  01AE  29BD               	
  3976                           l95:	
  3977  01AF                     	line	86
  3978                           	
  3979                           l1670:	
  3980  01AF                     ;lcd.c: 86:         putLCD( *ptr++ );
  3981                           	movf	(writeLCD@ptr),w
  3982  01AF  0879               	movwf	fsr0
  3983  01B0  0084               	bcf	status, 7	;select IRP bank0
  3984  01B1  1383               	movf	indf,w
  3985  01B2  0800               	fcall	_putLCD
  3986  01B3  120A  118A  2226  120A  118A  	
  3987                           l1672:	
  3988  01B8                     	movlw	low(01h)
  3989  01B8  3001               	movwf	(??_writeLCD+0)+0
  3990  01B9  00FA               	movf	(??_writeLCD+0)+0,w
  3991  01BA  087A               	addwf	(writeLCD@ptr),f
  3992  01BB  07F9               	goto	l1674
  3993  01BC  29BD               	
  3994                           l94:	
  3995  01BD                     	line	85
  3996                           	
  3997                           l1674:	
  3998  01BD                     ;lcd.c: 85:         while( *ptr )
  3999                           	movf	(writeLCD@ptr),w
  4000  01BD  0879               	movwf	fsr0
  4001  01BE  0084               	bcf	status, 7	;select IRP bank0
  4002  01BF  1383               	movf	(indf),w
  4003  01C0  0800               	btfss	status,2
  4004  01C1  1D03               	goto	u741
  4005  01C2  29C4               	goto	u740
  4006  01C3  29C5               u741:
  4007  01C4                     	goto	l1670
  4008  01C4  29AF               u740:
  4009  01C5                     	goto	l97
  4010  01C5  29C6               	
  4011                           l96:	
  4012  01C6                     	line	87
  4013                           	
  4014                           l97:	
  4015  01C6                     	return
  4016  01C6  0008               	opt stack 0
  4017                           GLOBAL	__end_of_writeLCD
  4018                           	__end_of_writeLCD:
  4019  01C7                     	signat	_writeLCD,12409
  4020                           	global	_putLCD
  4021                           
  4022 ;; *************** function _putLCD *****************
  4023 ;; Defined at:
  4024 ;;		line 61 in file "lcd.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  c               1    wreg     unsigned char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  c               1    2[COMMON] unsigned char 
  4029 ;;  nibble          1    3[COMMON] volatile struct .
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         0       0       0       0       0
  4040 ;;      Locals:         2       0       0       0       0
  4041 ;;      Temps:          2       0       0       0       0
  4042 ;;      Totals:         4       0       0       0       0
  4043 ;;Total ram usage:        4 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_writeLCD
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4052                           	line	61
  4053                           global __ptext2
  4054                           __ptext2:	;psect for function _putLCD
  4055  0226                     psect	text2
  4056                           	file	"lcd.c"
  4057                           	line	61
  4058                           	global	__size_of_putLCD
  4059                           	__size_of_putLCD	equ	__end_of_putLCD-_putLCD
  4060  0034                     	
  4061                           _putLCD:	
  4062  0226                     ;incstack = 0
  4063                           	opt	stack 6
  4064                           ; Regs used in _putLCD: [wreg+status,2+status,0]
  4065                           ;putLCD@c stored from wreg
  4066                           	movwf	(putLCD@c)
  4067  0226  00F2               	line	65
  4068                           	
  4069                           l1516:	
  4070  0227                     ;lcd.c: 61: void putLCD( unsigned char c );lcd.c: 62:  {;lcd.c: 63:         volatile REG
                                 nibble_t nibble;;lcd.c: 65:         nibble.HILO = c;
  4071                           	movf	(putLCD@c),w
  4072  0227  0872               	movwf	(??_putLCD+0)+0
  4073  0228  00F0               	movf	(??_putLCD+0)+0,w
  4074  0229  0870               	movwf	(putLCD@nibble)	;volatile
  4075  022A  00F3               	line	66
  4076                           	
  4077                           l1518:	
  4078  022B                     ;lcd.c: 66:         LCD.RS = 1;
  4079                           	bcf	status, 5	;RP0=0, select bank0
  4080  022B  1283               	bcf	status, 6	;RP1=0, select bank0
  4081  022C  1303               	bsf	(8),4	;volatile
  4082  022D  1608               	line	67
  4083                           	
  4084                           l1520:	
  4085  022E                     ;lcd.c: 67:         LCD.BUS= nibble.HI;
  4086                           	swapf	(putLCD@nibble),w	;volatile
  4087  022E  0E73               	andlw	(1<<4)-1
  4088  022F  390F               	movwf	(??_putLCD+0)+0
  4089  0230  00F0               	movf	(8),w	;volatile
  4090  0231  0808               	xorwf	(??_putLCD+0)+0,w
  4091  0232  0670               	andlw	not ((1<<4)-1)
  4092  0233  39F0               	xorwf	(??_putLCD+0)+0,w
  4093  0234  0670               	movwf	(8)	;volatile
  4094  0235  0088               	line	68
  4095                           	
  4096                           l1522:	
  4097  0236                     ;lcd.c: 68:         LCD.EN = 0;
  4098                           	bcf	(8),5	;volatile
  4099  0236  1288               	line	69
  4100                           	
  4101                           l1524:	
  4102  0237                     ;lcd.c: 69:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4103                           	opt asmopt_push
  4104                           opt asmopt_off
  4105                           movlw	3
  4106  0237  3003               movwf	((??_putLCD+0)+0+1),f
  4107  0238  00F1               	movlw	151
  4108  0239  3097               movwf	((??_putLCD+0)+0),f
  4109  023A  00F0               	u1167:
  4110  023B                     decfsz	((??_putLCD+0)+0),f
  4111  023B  0BF0               	goto	u1167
  4112  023C  2A3B               	decfsz	((??_putLCD+0)+0+1),f
  4113  023D  0BF1               	goto	u1167
  4114  023E  2A3B               	nop2
  4115  023F  2A40               opt asmopt_pop
  4116                           
  4117                           	line	70
  4118                           	
  4119                           l1526:	
  4120  0240                     ;lcd.c: 70:         LCD.EN = 1;
  4121                           	bcf	status, 5	;RP0=0, select bank0
  4122  0240  1283               	bcf	status, 6	;RP1=0, select bank0
  4123  0241  1303               	bsf	(8),5	;volatile
  4124  0242  1688               	line	72
  4125                           	
  4126                           l1528:	
  4127  0243                     ;lcd.c: 72:         LCD.RS = 1;
  4128                           	bsf	(8),4	;volatile
  4129  0243  1608               	line	73
  4130                           ;lcd.c: 73:         LCD.BUS = nibble.LO;
  4131                           	movf	(putLCD@nibble),w	;volatile
  4132  0244  0873               	andlw	(1<<4)-1
  4133  0245  390F               	movwf	(??_putLCD+0)+0
  4134  0246  00F0               	movf	(8),w	;volatile
  4135  0247  0808               	xorwf	(??_putLCD+0)+0,w
  4136  0248  0670               	andlw	not ((1<<4)-1)
  4137  0249  39F0               	xorwf	(??_putLCD+0)+0,w
  4138  024A  0670               	movwf	(8)	;volatile
  4139  024B  0088               	line	74
  4140                           	
  4141                           l1530:	
  4142  024C                     ;lcd.c: 74:         LCD.EN = 0;
  4143                           	bcf	(8),5	;volatile
  4144  024C  1288               	line	75
  4145                           	
  4146                           l1532:	
  4147  024D                     ;lcd.c: 75:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4148                           	opt asmopt_push
  4149                           opt asmopt_off
  4150                           movlw	3
  4151  024D  3003               movwf	((??_putLCD+0)+0+1),f
  4152  024E  00F1               	movlw	151
  4153  024F  3097               movwf	((??_putLCD+0)+0),f
  4154  0250  00F0               	u1177:
  4155  0251                     decfsz	((??_putLCD+0)+0),f
  4156  0251  0BF0               	goto	u1177
  4157  0252  2A51               	decfsz	((??_putLCD+0)+0+1),f
  4158  0253  0BF1               	goto	u1177
  4159  0254  2A51               	nop2
  4160  0255  2A56               opt asmopt_pop
  4161                           
  4162                           	line	76
  4163                           	
  4164                           l1534:	
  4165  0256                     ;lcd.c: 76:         LCD.EN = 1;
  4166                           	bcf	status, 5	;RP0=0, select bank0
  4167  0256  1283               	bcf	status, 6	;RP1=0, select bank0
  4168  0257  1303               	bsf	(8),5	;volatile
  4169  0258  1688               	line	77
  4170                           	
  4171                           l88:	
  4172  0259                     	return
  4173  0259  0008               	opt stack 0
  4174                           GLOBAL	__end_of_putLCD
  4175                           	__end_of_putLCD:
  4176  025A                     	signat	_putLCD,4217
  4177                           	global	_gotoxy
  4178                           
  4179 ;; *************** function _gotoxy *****************
  4180 ;; Defined at:
  4181 ;;		line 78 in file "lcd.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  x               1    wreg     unsigned char 
  4184 ;;  y               1    4[COMMON] unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  x               1    7[COMMON] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         1       0       0       0       0
  4197 ;;      Locals:         1       0       0       0       0
  4198 ;;      Temps:          2       0       0       0       0
  4199 ;;      Totals:         4       0       0       0       0
  4200 ;;Total ram usage:        4 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    1
  4203 ;; This function calls:
  4204 ;;		_cmdLCD
  4205 ;; This function is called by:
  4206 ;;		_writeLCD
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4210                           	line	78
  4211                           global __ptext3
  4212                           __ptext3:	;psect for function _gotoxy
  4213  016A                     psect	text3
  4214                           	file	"lcd.c"
  4215                           	line	78
  4216                           	global	__size_of_gotoxy
  4217                           	__size_of_gotoxy	equ	__end_of_gotoxy-_gotoxy
  4218  0018                     	
  4219                           _gotoxy:	
  4220  016A                     ;incstack = 0
  4221                           	opt	stack 5
  4222                           ; Regs used in _gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4223                           ;gotoxy@x stored from wreg
  4224                           	movwf	(gotoxy@x)
  4225  016A  00F7               	line	80
  4226                           	
  4227                           l1536:	
  4228  016B                     ;lcd.c: 78: void gotoxy( unsigned char x, unsigned char y );lcd.c: 79: {;lcd.c: 80:     
                                     cmdLCD((0x80 | 0xC0 * y) + (x & 0X3F));
  4229                           	movlw	low(03Fh)
  4230  016B  303F               	andwf	(gotoxy@x),w
  4231  016C  0577               	movwf	(??_gotoxy+0)+0
  4232  016D  00F5               	movf	(gotoxy@y),w
  4233  016E  0874               	movwf	(??_gotoxy+1)+0
  4234  016F  00F6               	movlw	(06h)-1
  4235  0170  3005               u595:
  4236  0171                     	clrc
  4237  0171  1003               	rlf	(??_gotoxy+1)+0,f
  4238  0172  0DF6               	addlw	-1
  4239  0173  3EFF               	skipz
  4240  0174  1D03               	goto	u595
  4241  0175  2971               	clrc
  4242  0176  1003               	rlf	(??_gotoxy+1)+0,w
  4243  0177  0D76               	xorlw	0ffh
  4244  0178  3AFF               	addlw	1
  4245  0179  3E01               	iorlw	080h
  4246  017A  3880               	addwf	0+(??_gotoxy+0)+0,w
  4247  017B  0775               	fcall	_cmdLCD
  4248  017C  120A  118A  22D6  120A  118A  	line	81
  4249                           	
  4250                           l91:	
  4251  0181                     	return
  4252  0181  0008               	opt stack 0
  4253                           GLOBAL	__end_of_gotoxy
  4254                           	__end_of_gotoxy:
  4255  0182                     	signat	_gotoxy,8313
  4256                           	global	_serialIOscan
  4257                           
  4258 ;; *************** function _serialIOscan *****************
  4259 ;; Defined at:
  4260 ;;		line 76 in file "serialIO.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  i               1    8[COMMON] unsigned char 
  4265 ;;  j               1    7[COMMON] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      void 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4275 ;;      Params:         0       0       0       0       0
  4276 ;;      Locals:         2       0       0       0       0
  4277 ;;      Temps:          3       0       0       0       0
  4278 ;;      Totals:         5       0       0       0       0
  4279 ;;Total ram usage:        5 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    1
  4282 ;; This function calls:
  4283 ;;		_serialIObyteShift
  4284 ;;		_serialIOload
  4285 ;; This function is called by:
  4286 ;;		_main
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4290                           	file	"serialIO.c"
  4291                           	line	76
  4292                           global __ptext4
  4293                           __ptext4:	;psect for function _serialIOscan
  4294  025A                     psect	text4
  4295                           	file	"serialIO.c"
  4296                           	line	76
  4297                           	global	__size_of_serialIOscan
  4298                           	__size_of_serialIOscan	equ	__end_of_serialIOscan-_serialIOscan
  4299  003D                     	
  4300                           _serialIOscan:	
  4301  025A                     ;incstack = 0
  4302                           	opt	stack 6
  4303                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4304                           	line	79
  4305                           	
  4306                           l1708:	
  4307  025A                     ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  4308                           	bcf	status, 5	;RP0=0, select bank0
  4309  025A  1283               	bcf	status, 6	;RP1=0, select bank0
  4310  025B  1303               	movf	(_lenSerialIO),w
  4311  025C  0820               	addlw	0FFh
  4312  025D  3EFF               	movwf	(??_serialIOscan+0)+0
  4313  025E  00F4               	movf	(??_serialIOscan+0)+0,w
  4314  025F  0874               	movwf	(serialIOscan@j)
  4315  0260  00F7               	line	80
  4316                           	
  4317                           l1710:	
  4318  0261                     ;serialIO.c: 80:     serialIOload();
  4319                           	fcall	_serialIOload
  4320  0261  120A  118A  211E  120A  118A  	line	81
  4321                           	
  4322                           l1712:	
  4323  0266                     ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  4324                           	clrf	(serialIOscan@i)
  4325  0266  01F8               	goto	l1718
  4326  0267  2A88               	
  4327                           l288:	
  4328  0268                     	line	83
  4329                           	
  4330                           l1714:	
  4331  0268                     ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
                                 rialOut[j-i]);
  4332                           	decf	(serialIOscan@i),w
  4333  0268  0378               	xorlw	0ffh
  4334  0269  3AFF               	addwf	(serialIOscan@j),w
  4335  026A  0777               	bcf	status, 5	;RP0=0, select bank0
  4336  026B  1283               	bcf	status, 6	;RP1=0, select bank0
  4337  026C  1303               	addwf	(_ptrSerialOut),w
  4338  026D  0721               	movwf	(??_serialIOscan+0)+0
  4339  026E  00F4               	movf	0+(??_serialIOscan+0)+0,w
  4340  026F  0874               	movwf	fsr0
  4341  0270  0084               	bcf	status, 7	;select IRP bank0
  4342  0271  1383               	movf	indf,w
  4343  0272  0800               	fcall	_serialIObyteShift
  4344  0273  120A  118A  21C7  120A  118A  	movwf	(??_serialIOscan+1)+0
  4345  0278  00F5               	movf	(serialIOscan@i),w
  4346  0279  0878               	bcf	status, 5	;RP0=0, select bank0
  4347  027A  1283               	bcf	status, 6	;RP1=0, select bank0
  4348  027B  1303               	addwf	(_ptrSerialIn),w
  4349  027C  0722               	movwf	(??_serialIOscan+2)+0
  4350  027D  00F6               	movf	0+(??_serialIOscan+2)+0,w
  4351  027E  0876               	movwf	fsr0
  4352  027F  0084               	movf	(??_serialIOscan+1)+0,w
  4353  0280  0875               	bcf	status, 7	;select IRP bank0
  4354  0281  1383               	movwf	indf
  4355  0282  0080               	line	84
  4356                           	
  4357                           l1716:	
  4358  0283                     ;serialIO.c: 84:     }
  4359                           	movlw	low(01h)
  4360  0283  3001               	movwf	(??_serialIOscan+0)+0
  4361  0284  00F4               	movf	(??_serialIOscan+0)+0,w
  4362  0285  0874               	addwf	(serialIOscan@i),f
  4363  0286  07F8               	goto	l1718
  4364  0287  2A88               	
  4365                           l287:	
  4366  0288                     	
  4367                           l1718:	
  4368  0288                     	bcf	status, 5	;RP0=0, select bank0
  4369  0288  1283               	bcf	status, 6	;RP1=0, select bank0
  4370  0289  1303               	movf	(_lenSerialIO),w
  4371  028A  0820               	subwf	(serialIOscan@i),w
  4372  028B  0278               	skipc
  4373  028C  1C03               	goto	u751
  4374  028D  2A8F               	goto	u750
  4375  028E  2A90               u751:
  4376  028F                     	goto	l1714
  4377  028F  2A68               u750:
  4378  0290                     	goto	l1720
  4379  0290  2A91               	
  4380                           l289:	
  4381  0291                     	line	85
  4382                           	
  4383                           l1720:	
  4384  0291                     ;serialIO.c: 85:     serialIOload();
  4385                           	fcall	_serialIOload
  4386  0291  120A  118A  211E  120A  118A  	line	86
  4387                           	
  4388                           l290:	
  4389  0296                     	return
  4390  0296  0008               	opt stack 0
  4391                           GLOBAL	__end_of_serialIOscan
  4392                           	__end_of_serialIOscan:
  4393  0297                     	signat	_serialIOscan,89
  4394                           	global	_serialIOload
  4395                           
  4396 ;; *************** function _serialIOload *****************
  4397 ;; Defined at:
  4398 ;;		line 45 in file "serialIO.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		None
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0
  4415 ;;      Totals:         0       0       0       0       0
  4416 ;;Total ram usage:        0 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_serialIOscan
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4425                           	line	45
  4426                           global __ptext5
  4427                           __ptext5:	;psect for function _serialIOload
  4428  011E                     psect	text5
  4429                           	file	"serialIO.c"
  4430                           	line	45
  4431                           	global	__size_of_serialIOload
  4432                           	__size_of_serialIOload	equ	__end_of_serialIOload-_serialIOload
  4433  0005                     	
  4434                           _serialIOload:	
  4435  011E                     ;incstack = 0
  4436                           	opt	stack 6
  4437                           ; Regs used in _serialIOload: []
  4438                           	line	47
  4439                           	
  4440                           l1538:	
  4441  011E                     ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  4442                           	bcf	status, 5	;RP0=0, select bank0
  4443  011E  1283               	bcf	status, 6	;RP1=0, select bank0
  4444  011F  1303               	bcf	(5),3	;volatile
  4445  0120  1185               	line	48
  4446                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  4447                           	bsf	(5),3	;volatile
  4448  0121  1585               	line	49
  4449                           	
  4450                           l275:	
  4451  0122                     	return
  4452  0122  0008               	opt stack 0
  4453                           GLOBAL	__end_of_serialIOload
  4454                           	__end_of_serialIOload:
  4455  0123                     	signat	_serialIOload,89
  4456                           	global	_serialIObyteShift
  4457                           
  4458 ;; *************** function _serialIObyteShift *****************
  4459 ;; Defined at:
  4460 ;;		line 50 in file "serialIO.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  dataIn          1    wreg     unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  dataIn          1    1[COMMON] unsigned char 
  4465 ;;  dataBit         1    3[COMMON] unsigned char 
  4466 ;;  dataOut         1    2[COMMON] unsigned char 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      unsigned char 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4476 ;;      Params:         0       0       0       0       0
  4477 ;;      Locals:         3       0       0       0       0
  4478 ;;      Temps:          1       0       0       0       0
  4479 ;;      Totals:         4       0       0       0       0
  4480 ;;Total ram usage:        4 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_serialIOscan
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4489                           	line	50
  4490                           global __ptext6
  4491                           __ptext6:	;psect for function _serialIObyteShift
  4492  01C7                     psect	text6
  4493                           	file	"serialIO.c"
  4494                           	line	50
  4495                           	global	__size_of_serialIObyteShift
  4496                           	__size_of_serialIObyteShift	equ	__end_of_serialIObyteShift-_serialIObyteShift
  4497  002B                     	
  4498                           _serialIObyteShift:	
  4499  01C7                     ;incstack = 0
  4500                           	opt	stack 6
  4501                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  4502                           ;serialIObyteShift@dataIn stored from wreg
  4503                           	movwf	(serialIObyteShift@dataIn)
  4504  01C7  00F1               	line	55
  4505                           	
  4506                           l1540:	
  4507  01C8                     ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
                                  {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
                                 ;serialIO.c: 55:     dataBit = 0x80;
  4508                           	movlw	low(080h)
  4509  01C8  3080               	movwf	(??_serialIObyteShift+0)+0
  4510  01C9  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4511  01CA  0870               	movwf	(serialIObyteShift@dataBit)
  4512  01CB  00F3               	line	56
  4513                           	
  4514                           l1542:	
  4515  01CC                     ;serialIO.c: 56:     dataOut = 0;
  4516                           	clrf	(serialIObyteShift@dataOut)
  4517  01CC  01F2               	line	58
  4518                           ;serialIO.c: 58:     while( dataBit )
  4519                           	goto	l1554
  4520  01CD  29E7               	
  4521                           l279:	
  4522  01CE                     	line	60
  4523                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  4524                           	bcf	status, 5	;RP0=0, select bank0
  4525  01CE  1283               	bcf	status, 6	;RP1=0, select bank0
  4526  01CF  1303               	bcf	(5),2	;volatile
  4527  01D0  1105               	line	61
  4528                           	
  4529                           l1544:	
  4530  01D1                     ;serialIO.c: 61:         if( dataIn & dataBit )
  4531                           	movf	(serialIObyteShift@dataIn),w
  4532  01D1  0871               	andwf	(serialIObyteShift@dataBit),w
  4533  01D2  0573               	btfsc	status,2
  4534  01D3  1903               	goto	u601
  4535  01D4  29D6               	goto	u600
  4536  01D5  29D7               u601:
  4537  01D6                     	goto	l280
  4538  01D6  29D9               u600:
  4539  01D7                     	line	62
  4540                           	
  4541                           l1546:	
  4542  01D7                     ;serialIO.c: 62:             SERIALIO.OUT = 1;
  4543                           	bsf	(5),0	;volatile
  4544  01D7  1405               	goto	l281
  4545  01D8  29DA               	line	63
  4546                           ;serialIO.c: 63:         else
  4547                           	
  4548                           l280:	
  4549  01D9                     	line	64
  4550                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  4551                           	bcf	(5),0	;volatile
  4552  01D9  1005               	
  4553                           l281:	
  4554  01DA                     	line	66
  4555                           ;serialIO.c: 66:         if( SERIALIO.IN)
  4556                           	btfss	(5),1	;volatile
  4557  01DA  1C85               	goto	u611
  4558  01DB  29DD               	goto	u610
  4559  01DC  29DE               u611:
  4560  01DD                     	goto	l1550
  4561  01DD  29E3               u610:
  4562  01DE                     	line	67
  4563                           	
  4564                           l1548:	
  4565  01DE                     ;serialIO.c: 67:             dataOut |= dataBit;
  4566                           	movf	(serialIObyteShift@dataBit),w
  4567  01DE  0873               	movwf	(??_serialIObyteShift+0)+0
  4568  01DF  00F0               	movf	(??_serialIObyteShift+0)+0,w
  4569  01E0  0870               	iorwf	(serialIObyteShift@dataOut),f
  4570  01E1  04F2               	goto	l1550
  4571  01E2  29E3               	
  4572                           l282:	
  4573  01E3                     	line	68
  4574                           	
  4575                           l1550:	
  4576  01E3                     ;serialIO.c: 68:         SERIALIO.CLK = 1;
  4577                           	bsf	(5),2	;volatile
  4578  01E3  1505               	line	69
  4579                           	
  4580                           l1552:	
  4581  01E4                     ;serialIO.c: 69:         dataBit >>= 1;
  4582                           	clrc
  4583  01E4  1003               	rrf	(serialIObyteShift@dataBit),f
  4584  01E5  0CF3               
  4585                           	goto	l1554
  4586  01E6  29E7               	line	70
  4587                           ;serialIO.c: 70:     }
  4588                           	
  4589                           l278:	
  4590  01E7                     	line	58
  4591                           	
  4592                           l1554:	
  4593  01E7                     ;serialIO.c: 58:     while( dataBit )
  4594                           	movf	((serialIObyteShift@dataBit)),w
  4595  01E7  0873               	btfss	status,2
  4596  01E8  1D03               	goto	u621
  4597  01E9  29EB               	goto	u620
  4598  01EA  29EC               u621:
  4599  01EB                     	goto	l279
  4600  01EB  29CE               u620:
  4601  01EC                     	
  4602                           l283:	
  4603  01EC                     	line	71
  4604                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  4605                           	bcf	status, 5	;RP0=0, select bank0
  4606  01EC  1283               	bcf	status, 6	;RP1=0, select bank0
  4607  01ED  1303               	bcf	(5),2	;volatile
  4608  01EE  1105               	line	72
  4609                           	
  4610                           l1556:	
  4611  01EF                     ;serialIO.c: 72:     return( dataOut );
  4612                           	movf	(serialIObyteShift@dataOut),w
  4613  01EF  0872               	goto	l284
  4614  01F0  29F1               	
  4615                           l1558:	
  4616  01F1                     	line	73
  4617                           	
  4618                           l284:	
  4619  01F1                     	return
  4620  01F1  0008               	opt stack 0
  4621                           GLOBAL	__end_of_serialIObyteShift
  4622                           	__end_of_serialIObyteShift:
  4623  01F2                     	signat	_serialIObyteShift,4217
  4624                           	global	_putFIFO
  4625                           
  4626 ;; *************** function _putFIFO *****************
  4627 ;; Defined at:
  4628 ;;		line 17 in file "fifo.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  c               1    wreg     unsigned char 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  c               1    1[COMMON] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       0       0       0       0
  4643 ;;      Locals:         1       0       0       0       0
  4644 ;;      Temps:          1       0       0       0       0
  4645 ;;      Totals:         2       0       0       0       0
  4646 ;;Total ram usage:        2 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4655                           	file	"fifo.c"
  4656                           	line	17
  4657                           global __ptext7
  4658                           __ptext7:	;psect for function _putFIFO
  4659  0132                     psect	text7
  4660                           	file	"fifo.c"
  4661                           	line	17
  4662                           	global	__size_of_putFIFO
  4663                           	__size_of_putFIFO	equ	__end_of_putFIFO-_putFIFO
  4664  000E                     	
  4665                           _putFIFO:	
  4666  0132                     ;incstack = 0
  4667                           	opt	stack 7
  4668                           ; Regs used in _putFIFO: [wreg-fsr0h+status,2+status,0]
  4669                           ;putFIFO@c stored from wreg
  4670                           	movwf	(putFIFO@c)
  4671  0132  00F1               	line	19
  4672                           	
  4673                           l1560:	
  4674  0133                     ;fifo.c: 17: void putFIFO( unsigned char c );fifo.c: 18: {;fifo.c: 19:     fifo[ fifoHea
                                 d ] = c;
  4675                           	movf	(putFIFO@c),w
  4676  0133  0871               	movwf	(??_putFIFO+0)+0
  4677  0134  00F0               	movf	(_fifoHead),w
  4678  0135  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  4679  0136  3E25               	movwf	fsr0
  4680  0137  0084               	movf	(??_putFIFO+0)+0,w
  4681  0138  0870               	bcf	status, 7	;select IRP bank0
  4682  0139  1383               	movwf	indf
  4683  013A  0080               	line	20
  4684                           	
  4685                           l1562:	
  4686  013B                     ;fifo.c: 20:     ++fifoHead;
  4687                           	movlw	low(01h)
  4688  013B  3001               	movwf	(??_putFIFO+0)+0
  4689  013C  00F0               	movf	(??_putFIFO+0)+0,w
  4690  013D  0870               	addwf	(_fifoHead),f
  4691  013E  07FD               	line	21
  4692                           	
  4693                           l9:	
  4694  013F                     	return
  4695  013F  0008               	opt stack 0
  4696                           GLOBAL	__end_of_putFIFO
  4697                           	__end_of_putFIFO:
  4698  0140                     	signat	_putFIFO,4217
  4699                           	global	_previousKey
  4700                           
  4701 ;; *************** function _previousKey *****************
  4702 ;; Defined at:
  4703 ;;		line 55 in file "keyboard.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;		None
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;		None
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      unsigned char 
  4710 ;; Registers used:
  4711 ;;		wreg
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4717 ;;      Params:         0       0       0       0       0
  4718 ;;      Locals:         0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0
  4720 ;;      Totals:         0       0       0       0       0
  4721 ;;Total ram usage:        0 bytes
  4722 ;; Hardware stack levels used:    1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4730                           	file	"keyboard.c"
  4731                           	line	55
  4732                           global __ptext8
  4733                           __ptext8:	;psect for function _previousKey
  4734  0119                     psect	text8
  4735                           	file	"keyboard.c"
  4736                           	line	55
  4737                           	global	__size_of_previousKey
  4738                           	__size_of_previousKey	equ	__end_of_previousKey-_previousKey
  4739  0005                     	
  4740                           _previousKey:	
  4741  0119                     ;incstack = 0
  4742                           	opt	stack 7
  4743                           ; Regs used in _previousKey: [wreg]
  4744                           	line	57
  4745                           	
  4746                           l1594:	
  4747  0119                     ;keyboard.c: 57:     return( prevKey );
  4748                           	bcf	status, 5	;RP0=0, select bank0
  4749  0119  1283               	bcf	status, 6	;RP1=0, select bank0
  4750  011A  1303               	movf	(_prevKey),w
  4751  011B  0824               	goto	l48
  4752  011C  291D               	
  4753                           l1596:	
  4754  011D                     	line	58
  4755                           	
  4756                           l48:	
  4757  011D                     	return
  4758  011D  0008               	opt stack 0
  4759                           GLOBAL	__end_of_previousKey
  4760                           	__end_of_previousKey:
  4761  011E                     	signat	_previousKey,89
  4762                           	global	_keyboardScan
  4763                           
  4764 ;; *************** function _keyboardScan *****************
  4765 ;; Defined at:
  4766 ;;		line 75 in file "keyboard.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  j               1   10[COMMON] unsigned char 
  4771 ;;  i               1    9[COMMON] unsigned char 
  4772 ;;  aux             1    8[COMMON] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      unsigned char 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4782 ;;      Params:         0       0       0       0       0
  4783 ;;      Locals:         3       0       0       0       0
  4784 ;;      Temps:          8       0       0       0       0
  4785 ;;      Totals:        11       0       0       0       0
  4786 ;;Total ram usage:       11 bytes
  4787 ;; Hardware stack levels used:    2
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_main
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4795                           	line	75
  4796                           global __ptext9
  4797                           __ptext9:	;psect for function _keyboardScan
  4798  0335                     psect	text9
  4799                           	file	"keyboard.c"
  4800                           	line	75
  4801                           	global	__size_of_keyboardScan
  4802                           	__size_of_keyboardScan	equ	__end_of_keyboardScan-_keyboardScan
  4803  007F                     	
  4804                           _keyboardScan:	
  4805  0335                     ;incstack = 0
  4806                           	opt	stack 6
  4807                           ; Regs used in _keyboardScan: [wreg-fsr0h+status,2+status,0+pclath]
  4808                           	line	78
  4809                           	
  4810                           l1602:	
  4811  0335                     ;keyboard.c: 77:     unsigned char i, j;;keyboard.c: 78:     unsigned char aux = 0;
  4812                           	clrf	(keyboardScan@aux)
  4813  0335  01F8               	line	80
  4814                           ;keyboard.c: 80:     for( j=0; j<4; j++ )
  4815                           	clrf	(keyboardScan@j)
  4816  0336  01FA               	
  4817                           l1604:	
  4818  0337                     	movlw	low(04h)
  4819  0337  3004               	subwf	(keyboardScan@j),w
  4820  0338  027A               	skipc
  4821  0339  1C03               	goto	u661
  4822  033A  2B3C               	goto	u660
  4823  033B  2B3D               u661:
  4824  033C                     	goto	l1608
  4825  033C  2B3F               u660:
  4826  033D                     	goto	l1628
  4827  033D  2BA8               	
  4828                           l1606:	
  4829  033E                     	goto	l1628
  4830  033E  2BA8               	
  4831                           l54:	
  4832  033F                     	line	82
  4833                           	
  4834                           l1608:	
  4835  033F                     ;keyboard.c: 81:     {;keyboard.c: 82:         KEYBOARDbits.cols = ~(0x01<<j);
  4836                           	movlw	low(01h)
  4837  033F  3001               	movwf	(??_keyboardScan+0)+0
  4838  0340  00F0               	incf	(keyboardScan@j),w
  4839  0341  0A7A               	goto	u674
  4840  0342  2B45               u675:
  4841  0343                     	clrc
  4842  0343  1003               	rlf	(??_keyboardScan+0)+0,f
  4843  0344  0DF0               u674:
  4844  0345                     	addlw	-1
  4845  0345  3EFF               	skipz
  4846  0346  1D03               	goto	u675
  4847  0347  2B43               	movf	0+(??_keyboardScan+0)+0,w
  4848  0348  0870               	xorlw	0ffh
  4849  0349  3AFF               	movwf	(??_keyboardScan+1)+0
  4850  034A  00F1               	swapf	(??_keyboardScan+1)+0,f
  4851  034B  0EF1               	bcf	status, 5	;RP0=0, select bank0
  4852  034C  1283               	bcf	status, 6	;RP1=0, select bank0
  4853  034D  1303               	movf	(6),w	;volatile
  4854  034E  0806               	xorwf	(??_keyboardScan+1)+0,w
  4855  034F  0671               	andlw	not (((1<<4)-1)<<4)
  4856  0350  390F               	xorwf	(??_keyboardScan+1)+0,w
  4857  0351  0671               	movwf	(6)	;volatile
  4858  0352  0086               	line	83
  4859                           	
  4860                           l1610:	
  4861  0353                     ;keyboard.c: 83:         for( i=0; i<4; i++ )
  4862                           	clrf	(keyboardScan@i)
  4863  0353  01F9               	
  4864                           l1612:	
  4865  0354                     	movlw	low(04h)
  4866  0354  3004               	subwf	(keyboardScan@i),w
  4867  0355  0279               	skipc
  4868  0356  1C03               	goto	u681
  4869  0357  2B59               	goto	u680
  4870  0358  2B5A               u681:
  4871  0359                     	goto	l1616
  4872  0359  2B5C               u680:
  4873  035A                     	goto	l1624
  4874  035A  2B9D               	
  4875                           l1614:	
  4876  035B                     	goto	l1624
  4877  035B  2B9D               	
  4878                           l56:	
  4879  035C                     	line	85
  4880                           	
  4881                           l1616:	
  4882  035C                     ;keyboard.c: 84:         {;keyboard.c: 85:             if( ~KEYBOARDbits.rows & (0x01<<i
                                 ) )
  4883                           	movf	(6),w	;volatile
  4884  035C  0806               	andlw	(1<<4)-1
  4885  035D  390F               	movwf	(??_keyboardScan+0)+0
  4886  035E  00F0               	comf	(??_keyboardScan+0)+0,w
  4887  035F  0970               	movwf	(??_keyboardScan+1)+0
  4888  0360  00F1               	clrf	(??_keyboardScan+1)+0+1
  4889  0361  01F2               	comf	(??_keyboardScan+1)+0+1
  4890  0362  09F2               	incf	(keyboardScan@i),w
  4891  0363  0A79               	movwf	(??_keyboardScan+3)+0
  4892  0364  00F3               	movlw	01h
  4893  0365  3001               	movwf	(??_keyboardScan+4)+0
  4894  0366  00F4               	movlw	0
  4895  0367  3000               	movwf	(??_keyboardScan+4)+0+1
  4896  0368  00F5               	goto	u694
  4897  0369  2B6D               u695:
  4898  036A                     	clrc
  4899  036A  1003               	rlf	(??_keyboardScan+4)+0,f
  4900  036B  0DF4               	rlf	(??_keyboardScan+4)+1,f
  4901  036C  0DF5               u694:
  4902  036D                     	decfsz	(??_keyboardScan+3)+0,f
  4903  036D  0BF3               	goto	u695
  4904  036E  2B6A               	
  4905                           	movf	0+(??_keyboardScan+1)+0,w
  4906  036F  0871               	andwf	0+(??_keyboardScan+4)+0,w
  4907  0370  0574               	movwf	(??_keyboardScan+6)+0
  4908  0371  00F6               	movf	1+(??_keyboardScan+1)+0,w
  4909  0372  0872               	andwf	1+(??_keyboardScan+4)+0,w
  4910  0373  0575               	movwf	1+(??_keyboardScan+6)+0
  4911  0374  00F7               	movf	((??_keyboardScan+6)+0),w
  4912  0375  0876               iorwf	((??_keyboardScan+6)+1),w
  4913  0376  0477               	btfsc	status,2
  4914  0377  1903               	goto	u701
  4915  0378  2B7A               	goto	u700
  4916  0379  2B7B               u701:
  4917  037A                     	goto	l1620
  4918  037A  2B92               u700:
  4919  037B                     	line	86
  4920                           	
  4921                           l1618:	
  4922  037B                     ;keyboard.c: 86:                 aux = keyboardMatrix[i][j];
  4923                           	movf	(keyboardScan@i),w
  4924  037B  0879               	movwf	(??_keyboardScan+0)+0
  4925  037C  00F0               	movlw	02h
  4926  037D  3002               u715:
  4927  037E                     	clrc
  4928  037E  1003               	rlf	(??_keyboardScan+0)+0,f
  4929  037F  0DF0               	addlw	-1
  4930  0380  3EFF               	skipz
  4931  0381  1D03               	goto	u715
  4932  0382  2B7E               	movlw	(low((((_keyboardMatrix)-__stringbase)|8000h)))&0ffh
  4933  0383  3001               	addwf	0+(??_keyboardScan+0)+0,w
  4934  0384  0770               	movwf	(??_keyboardScan+1)+0
  4935  0385  00F1               	movf	(keyboardScan@j),w
  4936  0386  087A               	addwf	0+(??_keyboardScan+1)+0,w
  4937  0387  0771               	movwf	fsr0
  4938  0388  0084               	fcall	stringdir
  4939  0389  120A  118A  2003  120A  118A  	movwf	(??_keyboardScan+2)+0
  4940  038E  00F2               	movf	(??_keyboardScan+2)+0,w
  4941  038F  0872               	movwf	(keyboardScan@aux)
  4942  0390  00F8               	goto	l1620
  4943  0391  2B92               	
  4944                           l58:	
  4945  0392                     	line	87
  4946                           	
  4947                           l1620:	
  4948  0392                     ;keyboard.c: 87:         }
  4949                           	movlw	low(01h)
  4950  0392  3001               	movwf	(??_keyboardScan+0)+0
  4951  0393  00F0               	movf	(??_keyboardScan+0)+0,w
  4952  0394  0870               	addwf	(keyboardScan@i),f
  4953  0395  07F9               	
  4954                           l1622:	
  4955  0396                     	movlw	low(04h)
  4956  0396  3004               	subwf	(keyboardScan@i),w
  4957  0397  0279               	skipc
  4958  0398  1C03               	goto	u721
  4959  0399  2B9B               	goto	u720
  4960  039A  2B9C               u721:
  4961  039B                     	goto	l1616
  4962  039B  2B5C               u720:
  4963  039C                     	goto	l1624
  4964  039C  2B9D               	
  4965                           l57:	
  4966  039D                     	line	88
  4967                           	
  4968                           l1624:	
  4969  039D                     ;keyboard.c: 88:     }
  4970                           	movlw	low(01h)
  4971  039D  3001               	movwf	(??_keyboardScan+0)+0
  4972  039E  00F0               	movf	(??_keyboardScan+0)+0,w
  4973  039F  0870               	addwf	(keyboardScan@j),f
  4974  03A0  07FA               	
  4975                           l1626:	
  4976  03A1                     	movlw	low(04h)
  4977  03A1  3004               	subwf	(keyboardScan@j),w
  4978  03A2  027A               	skipc
  4979  03A3  1C03               	goto	u731
  4980  03A4  2BA6               	goto	u730
  4981  03A5  2BA7               u731:
  4982  03A6                     	goto	l1608
  4983  03A6  2B3F               u730:
  4984  03A7                     	goto	l1628
  4985  03A7  2BA8               	
  4986                           l55:	
  4987  03A8                     	line	90
  4988                           	
  4989                           l1628:	
  4990  03A8                     ;keyboard.c: 90:     prevKey = currKey;
  4991                           	bcf	status, 5	;RP0=0, select bank0
  4992  03A8  1283               	bcf	status, 6	;RP1=0, select bank0
  4993  03A9  1303               	movf	(_currKey),w
  4994  03AA  0823               	movwf	(??_keyboardScan+0)+0
  4995  03AB  00F0               	movf	(??_keyboardScan+0)+0,w
  4996  03AC  0870               	movwf	(_prevKey)
  4997  03AD  00A4               	line	91
  4998                           ;keyboard.c: 91:     currKey = aux;
  4999                           	movf	(keyboardScan@aux),w
  5000  03AE  0878               	movwf	(??_keyboardScan+0)+0
  5001  03AF  00F0               	movf	(??_keyboardScan+0)+0,w
  5002  03B0  0870               	movwf	(_currKey)
  5003  03B1  00A3               	goto	l59
  5004  03B2  2BB3               	line	93
  5005                           	
  5006                           l1630:	
  5007  03B3                     	line	94
  5008                           ;keyboard.c: 93:     return( aux );;	Return value of _keyboardScan is never used
  5009                           	
  5010                           l59:	
  5011  03B3                     	return
  5012  03B3  0008               	opt stack 0
  5013                           GLOBAL	__end_of_keyboardScan
  5014                           	__end_of_keyboardScan:
  5015  03B4                     	signat	_keyboardScan,89
  5016                           	global	_initSerialIO
  5017                           
  5018 ;; *************** function _initSerialIO *****************
  5019 ;; Defined at:
  5020 ;;		line 89 in file "serialIO.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  ptrIn           1    wreg     PTR unsigned char 
  5023 ;;		 -> main@sensor(1), 
  5024 ;;  ptrOut          1    0[COMMON] PTR unsigned char 
  5025 ;;		 -> main@atuador(1), 
  5026 ;;  length          1    1[COMMON] unsigned char 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;  ptrIn           1    3[COMMON] PTR unsigned char 
  5029 ;;		 -> main@sensor(1), 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5039 ;;      Params:         2       0       0       0       0
  5040 ;;      Locals:         1       0       0       0       0
  5041 ;;      Temps:          1       0       0       0       0
  5042 ;;      Totals:         4       0       0       0       0
  5043 ;;Total ram usage:        4 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_main
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5052                           	file	"serialIO.c"
  5053                           	line	89
  5054                           global __ptext10
  5055                           __ptext10:	;psect for function _initSerialIO
  5056  01F2                     psect	text10
  5057                           	file	"serialIO.c"
  5058                           	line	89
  5059                           	global	__size_of_initSerialIO
  5060                           	__size_of_initSerialIO	equ	__end_of_initSerialIO-_initSerialIO
  5061  0034                     	
  5062                           _initSerialIO:	
  5063  01F2                     ;incstack = 0
  5064                           	opt	stack 7
  5065                           ; Regs used in _initSerialIO: [wreg]
  5066                           ;initSerialIO@ptrIn stored from wreg
  5067                           	movwf	(initSerialIO@ptrIn)
  5068  01F2  00F3               	line	91
  5069                           	
  5070                           l1678:	
  5071  01F3                     ;serialIO.c: 89: void initSerialIO( unsigned char * ptrIn, unsigned char * ptrOut, unsig
                                 ned char length );serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  5072                           	movf	(initSerialIO@ptrIn),w
  5073  01F3  0873               	movwf	(??_initSerialIO+0)+0
  5074  01F4  00F2               	movf	(??_initSerialIO+0)+0,w
  5075  01F5  0872               	bcf	status, 5	;RP0=0, select bank0
  5076  01F6  1283               	bcf	status, 6	;RP1=0, select bank0
  5077  01F7  1303               	movwf	(_ptrSerialIn)
  5078  01F8  00A2               	line	92
  5079                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  5080                           	movf	(initSerialIO@ptrOut),w
  5081  01F9  0870               	movwf	(??_initSerialIO+0)+0
  5082  01FA  00F2               	movf	(??_initSerialIO+0)+0,w
  5083  01FB  0872               	movwf	(_ptrSerialOut)
  5084  01FC  00A1               	line	93
  5085                           ;serialIO.c: 93:     lenSerialIO = length;
  5086                           	movf	(initSerialIO@length),w
  5087  01FD  0871               	movwf	(??_initSerialIO+0)+0
  5088  01FE  00F2               	movf	(??_initSerialIO+0)+0,w
  5089  01FF  0872               	movwf	(_lenSerialIO)
  5090  0200  00A0               	line	95
  5091                           	
  5092                           l1680:	
  5093  0201                     ;serialIO.c: 95:     PORTAbits.RA3 = 0;
  5094                           	bcf	(5),3	;volatile
  5095  0201  1185               	line	96
  5096                           	
  5097                           l1682:	
  5098  0202                     ;serialIO.c: 96:     ANSELbits.ANS3 = 0;
  5099                           	bsf	status, 5	;RP0=1, select bank3
  5100  0202  1683               	bsf	status, 6	;RP1=1, select bank3
  5101  0203  1703               	bcf	(392)^0180h,3	;volatile
  5102  0204  1188               	line	97
  5103                           	
  5104                           l1684:	
  5105  0205                     ;serialIO.c: 97:     TRISAbits.TRISA3 = 0;
  5106                           	bsf	status, 5	;RP0=1, select bank1
  5107  0205  1683               	bcf	status, 6	;RP1=0, select bank1
  5108  0206  1303               	bcf	(133)^080h,3	;volatile
  5109  0207  1185               	line	100
  5110                           	
  5111                           l1686:	
  5112  0208                     ;serialIO.c: 100:     PORTAbits.RA2 = 0;
  5113                           	bcf	status, 5	;RP0=0, select bank0
  5114  0208  1283               	bcf	status, 6	;RP1=0, select bank0
  5115  0209  1303               	bcf	(5),2	;volatile
  5116  020A  1105               	line	101
  5117                           	
  5118                           l1688:	
  5119  020B                     ;serialIO.c: 101:     ANSELbits.ANS2 = 0;
  5120                           	bsf	status, 5	;RP0=1, select bank3
  5121  020B  1683               	bsf	status, 6	;RP1=1, select bank3
  5122  020C  1703               	bcf	(392)^0180h,2	;volatile
  5123  020D  1108               	line	102
  5124                           	
  5125                           l1690:	
  5126  020E                     ;serialIO.c: 102:     TRISAbits.TRISA2 = 0;
  5127                           	bsf	status, 5	;RP0=1, select bank1
  5128  020E  1683               	bcf	status, 6	;RP1=0, select bank1
  5129  020F  1303               	bcf	(133)^080h,2	;volatile
  5130  0210  1105               	line	105
  5131                           	
  5132                           l1692:	
  5133  0211                     ;serialIO.c: 105:     PORTAbits.RA0 = 0;
  5134                           	bcf	status, 5	;RP0=0, select bank0
  5135  0211  1283               	bcf	status, 6	;RP1=0, select bank0
  5136  0212  1303               	bcf	(5),0	;volatile
  5137  0213  1005               	line	106
  5138                           	
  5139                           l1694:	
  5140  0214                     ;serialIO.c: 106:     ANSELbits.ANS0 = 0;
  5141                           	bsf	status, 5	;RP0=1, select bank3
  5142  0214  1683               	bsf	status, 6	;RP1=1, select bank3
  5143  0215  1703               	bcf	(392)^0180h,0	;volatile
  5144  0216  1008               	line	107
  5145                           	
  5146                           l1696:	
  5147  0217                     ;serialIO.c: 107:     TRISAbits.TRISA0 = 0;
  5148                           	bsf	status, 5	;RP0=1, select bank1
  5149  0217  1683               	bcf	status, 6	;RP1=0, select bank1
  5150  0218  1303               	bcf	(133)^080h,0	;volatile
  5151  0219  1005               	line	110
  5152                           	
  5153                           l1698:	
  5154  021A                     ;serialIO.c: 110:     ANSELbits.ANS1 = 0;
  5155                           	bsf	status, 5	;RP0=1, select bank3
  5156  021A  1683               	bsf	status, 6	;RP1=1, select bank3
  5157  021B  1703               	bcf	(392)^0180h,1	;volatile
  5158  021C  1088               	line	111
  5159                           	
  5160                           l1700:	
  5161  021D                     ;serialIO.c: 111:     TRISAbits.TRISA1 = 1;
  5162                           	bsf	status, 5	;RP0=1, select bank1
  5163  021D  1683               	bcf	status, 6	;RP1=0, select bank1
  5164  021E  1303               	bsf	(133)^080h,1	;volatile
  5165  021F  1485               	line	115
  5166                           	
  5167                           l1702:	
  5168  0220                     ;serialIO.c: 115:     SERIALIO.CLK = 0;
  5169                           	bcf	status, 5	;RP0=0, select bank0
  5170  0220  1283               	bcf	status, 6	;RP1=0, select bank0
  5171  0221  1303               	bcf	(5),2	;volatile
  5172  0222  1105               	line	116
  5173                           	
  5174                           l1704:	
  5175  0223                     ;serialIO.c: 116:     SERIALIO.OUT = 0;
  5176                           	bcf	(5),0	;volatile
  5177  0223  1005               	line	117
  5178                           	
  5179                           l1706:	
  5180  0224                     ;serialIO.c: 117:     SERIALIO.SHLD = 1;
  5181                           	bsf	(5),3	;volatile
  5182  0224  1585               	line	120
  5183                           	
  5184                           l293:	
  5185  0225                     	return
  5186  0225  0008               	opt stack 0
  5187                           GLOBAL	__end_of_initSerialIO
  5188                           	__end_of_initSerialIO:
  5189  0226                     	signat	_initSerialIO,12409
  5190                           	global	_initLCD
  5191                           
  5192 ;; *************** function _initLCD *****************
  5193 ;; Defined at:
  5194 ;;		line 15 in file "lcd.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, status,0, pclath, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5208 ;;      Params:         0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0
  5210 ;;      Temps:          2       0       0       0       0
  5211 ;;      Totals:         2       0       0       0       0
  5212 ;;Total ram usage:        2 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    1
  5215 ;; This function calls:
  5216 ;;		_cmdLCD
  5217 ;; This function is called by:
  5218 ;;		_main
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5222                           	file	"lcd.c"
  5223                           	line	15
  5224                           global __ptext11
  5225                           __ptext11:	;psect for function _initLCD
  5226  0297                     psect	text11
  5227                           	file	"lcd.c"
  5228                           	line	15
  5229                           	global	__size_of_initLCD
  5230                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5231  003F                     	
  5232                           _initLCD:	
  5233  0297                     ;incstack = 0
  5234                           	opt	stack 6
  5235                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5236                           	line	17
  5237                           	
  5238                           l1646:	
  5239  0297                     ;lcd.c: 17:         LCD.B0 = 0;
  5240                           	bcf	status, 5	;RP0=0, select bank0
  5241  0297  1283               	bcf	status, 6	;RP1=0, select bank0
  5242  0298  1303               	bcf	(8),6	;volatile
  5243  0299  1308               	line	18
  5244                           ;lcd.c: 18:         LCD.B1 = 0;
  5245                           	bcf	(8),7	;volatile
  5246  029A  1388               	line	19
  5247                           ;lcd.c: 19:         LCD.RS = 0;
  5248                           	bcf	(8),4	;volatile
  5249  029B  1208               	line	20
  5250                           	
  5251                           l1648:	
  5252  029C                     ;lcd.c: 20:         LCD.BUS = 0x3;
  5253                           	movf	(8),w	;volatile
  5254  029C  0808               	andlw	not (((1<<4)-1)<<0)
  5255  029D  39F0               	iorlw	(03h & ((1<<4)-1))<<0
  5256  029E  3803               	movwf	(8)	;volatile
  5257  029F  0088               	line	21
  5258                           	
  5259                           l1650:	
  5260  02A0                     ;lcd.c: 21:         LCD.EN = 1;
  5261                           	bsf	(8),5	;volatile
  5262  02A0  1688               	line	22
  5263                           	
  5264                           l1652:	
  5265  02A1                     ;lcd.c: 22:         TRISD = 0xC0;
  5266                           	movlw	low(0C0h)
  5267  02A1  30C0               	bsf	status, 5	;RP0=1, select bank1
  5268  02A2  1683               	bcf	status, 6	;RP1=0, select bank1
  5269  02A3  1303               	movwf	(136)^080h	;volatile
  5270  02A4  0088               	line	24
  5271                           	
  5272                           l1654:	
  5273  02A5                     ;lcd.c: 24:         _delay((unsigned long)((100)*(4000000/4000.0)));
  5274                           	opt asmopt_push
  5275                           opt asmopt_off
  5276                           movlw	130
  5277  02A5  3082               movwf	((??_initLCD+0)+0+1),f
  5278  02A6  00F5               	movlw	221
  5279  02A7  30DD               movwf	((??_initLCD+0)+0),f
  5280  02A8  00F4               	u1187:
  5281  02A9                     decfsz	((??_initLCD+0)+0),f
  5282  02A9  0BF4               	goto	u1187
  5283  02AA  2AA9               	decfsz	((??_initLCD+0)+0+1),f
  5284  02AB  0BF5               	goto	u1187
  5285  02AC  2AA9               	nop2
  5286  02AD  2AAE               opt asmopt_pop
  5287                           
  5288                           	line	26
  5289                           	
  5290                           l1656:	
  5291  02AE                     ;lcd.c: 26:         cmdLCD(0x20);
  5292                           	movlw	low(020h)
  5293  02AE  3020               	fcall	_cmdLCD
  5294  02AF  120A  118A  22D6  120A  118A  	line	27
  5295                           	
  5296                           l1658:	
  5297  02B4                     ;lcd.c: 27:         cmdLCD(0x28);
  5298                           	movlw	low(028h)
  5299  02B4  3028               	fcall	_cmdLCD
  5300  02B5  120A  118A  22D6  120A  118A  	line	28
  5301                           	
  5302                           l1660:	
  5303  02BA                     ;lcd.c: 28:         cmdLCD(0x0C);
  5304                           	movlw	low(0Ch)
  5305  02BA  300C               	fcall	_cmdLCD
  5306  02BB  120A  118A  22D6  120A  118A  	line	29
  5307                           	
  5308                           l1662:	
  5309  02C0                     ;lcd.c: 29:         cmdLCD(0x01);
  5310                           	movlw	low(01h)
  5311  02C0  3001               	fcall	_cmdLCD
  5312  02C1  120A  118A  22D6  120A  118A  	line	30
  5313                           	
  5314                           l1664:	
  5315  02C6                     ;lcd.c: 30:         cmdLCD(0x02);
  5316                           	movlw	low(02h)
  5317  02C6  3002               	fcall	_cmdLCD
  5318  02C7  120A  118A  22D6  120A  118A  	line	32
  5319                           	
  5320                           l1666:	
  5321  02CC                     ;lcd.c: 32:         _delay((unsigned long)((100)*(4000000/4000.0)));
  5322                           	opt asmopt_push
  5323                           opt asmopt_off
  5324                           movlw	130
  5325  02CC  3082               movwf	((??_initLCD+0)+0+1),f
  5326  02CD  00F5               	movlw	221
  5327  02CE  30DD               movwf	((??_initLCD+0)+0),f
  5328  02CF  00F4               	u1197:
  5329  02D0                     decfsz	((??_initLCD+0)+0),f
  5330  02D0  0BF4               	goto	u1197
  5331  02D1  2AD0               	decfsz	((??_initLCD+0)+0+1),f
  5332  02D2  0BF5               	goto	u1197
  5333  02D3  2AD0               	nop2
  5334  02D4  2AD5               opt asmopt_pop
  5335                           
  5336                           	line	33
  5337                           	
  5338                           l73:	
  5339  02D5                     	return
  5340  02D5  0008               	opt stack 0
  5341                           GLOBAL	__end_of_initLCD
  5342                           	__end_of_initLCD:
  5343  02D6                     	signat	_initLCD,89
  5344                           	global	_initKeyboard
  5345                           
  5346 ;; *************** function _initKeyboard *****************
  5347 ;; Defined at:
  5348 ;;		line 103 in file "keyboard.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;		None
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         0       0       0       0       0
  5363 ;;      Locals:         0       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0
  5365 ;;      Totals:         0       0       0       0       0
  5366 ;;Total ram usage:        0 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; This function calls:
  5369 ;;		Nothing
  5370 ;; This function is called by:
  5371 ;;		_main
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5375                           	file	"keyboard.c"
  5376                           	line	103
  5377                           global __ptext12
  5378                           __ptext12:	;psect for function _initKeyboard
  5379  0140                     psect	text12
  5380                           	file	"keyboard.c"
  5381                           	line	103
  5382                           	global	__size_of_initKeyboard
  5383                           	__size_of_initKeyboard	equ	__end_of_initKeyboard-_initKeyboard
  5384  0013                     	
  5385                           _initKeyboard:	
  5386  0140                     ;incstack = 0
  5387                           	opt	stack 7
  5388                           ; Regs used in _initKeyboard: [wreg+status,2]
  5389                           	line	105
  5390                           	
  5391                           l1632:	
  5392  0140                     ;keyboard.c: 105:     PORTB = 0xFF;
  5393                           	movlw	low(0FFh)
  5394  0140  30FF               	bcf	status, 5	;RP0=0, select bank0
  5395  0141  1283               	bcf	status, 6	;RP1=0, select bank0
  5396  0142  1303               	movwf	(6)	;volatile
  5397  0143  0086               	line	106
  5398                           	
  5399                           l1634:	
  5400  0144                     ;keyboard.c: 106:     ANSELH = 0;
  5401                           	bsf	status, 5	;RP0=1, select bank3
  5402  0144  1683               	bsf	status, 6	;RP1=1, select bank3
  5403  0145  1703               	clrf	(393)^0180h	;volatile
  5404  0146  0189               	line	107
  5405                           	
  5406                           l1636:	
  5407  0147                     ;keyboard.c: 107:     TRISB = 0x0F;
  5408                           	movlw	low(0Fh)
  5409  0147  300F               	bsf	status, 5	;RP0=1, select bank1
  5410  0148  1683               	bcf	status, 6	;RP1=0, select bank1
  5411  0149  1303               	movwf	(134)^080h	;volatile
  5412  014A  0086               	line	108
  5413                           	
  5414                           l1638:	
  5415  014B                     ;keyboard.c: 108:     WPUB = 0xFF;
  5416                           	movlw	low(0FFh)
  5417  014B  30FF               	movwf	(149)^080h	;volatile
  5418  014C  0095               	line	109
  5419                           	
  5420                           l1640:	
  5421  014D                     ;keyboard.c: 109:     OPTION_REGbits.nRBPU = 0;
  5422                           	bcf	(129)^080h,7	;volatile
  5423  014D  1381               	line	111
  5424                           	
  5425                           l1642:	
  5426  014E                     ;keyboard.c: 111:     prevKey = 0;
  5427                           	bcf	status, 5	;RP0=0, select bank0
  5428  014E  1283               	bcf	status, 6	;RP1=0, select bank0
  5429  014F  1303               	clrf	(_prevKey)
  5430  0150  01A4               	line	112
  5431                           	
  5432                           l1644:	
  5433  0151                     ;keyboard.c: 112:     currKey = 0;
  5434                           	clrf	(_currKey)
  5435  0151  01A3               	line	113
  5436                           	
  5437                           l62:	
  5438  0152                     	return
  5439  0152  0008               	opt stack 0
  5440                           GLOBAL	__end_of_initKeyboard
  5441                           	__end_of_initKeyboard:
  5442  0153                     	signat	_initKeyboard,89
  5443                           	global	_getFIFO
  5444                           
  5445 ;; *************** function _getFIFO *****************
  5446 ;; Defined at:
  5447 ;;		line 23 in file "fifo.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  aux             1    1[COMMON] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      unsigned char 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         1       0       0       0       0
  5463 ;;      Temps:          1       0       0       0       0
  5464 ;;      Totals:         2       0       0       0       0
  5465 ;;Total ram usage:        2 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_main
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5474                           	file	"fifo.c"
  5475                           	line	23
  5476                           global __ptext13
  5477                           __ptext13:	;psect for function _getFIFO
  5478  0153                     psect	text13
  5479                           	file	"fifo.c"
  5480                           	line	23
  5481                           	global	__size_of_getFIFO
  5482                           	__size_of_getFIFO	equ	__end_of_getFIFO-_getFIFO
  5483  0017                     	
  5484                           _getFIFO:	
  5485  0153                     ;incstack = 0
  5486                           	opt	stack 7
  5487                           ; Regs used in _getFIFO: [wreg-fsr0h+status,2+status,0]
  5488                           	line	25
  5489                           	
  5490                           l1564:	
  5491  0153                     ;fifo.c: 25:     unsigned char aux = 0;
  5492                           	clrf	(getFIFO@aux)
  5493  0153  01F1               	line	27
  5494                           	
  5495                           l1566:	
  5496  0154                     ;fifo.c: 27:     if( fifoTail != fifoHead )
  5497                           	movf	(_fifoTail),w
  5498  0154  087C               	xorwf	(_fifoHead),w
  5499  0155  067D               	skipnz
  5500  0156  1903               	goto	u631
  5501  0157  2959               	goto	u630
  5502  0158  295A               u631:
  5503  0159                     	goto	l1572
  5504  0159  2967               u630:
  5505  015A                     	line	29
  5506                           	
  5507                           l1568:	
  5508  015A                     ;fifo.c: 28:     {;fifo.c: 29:         aux = fifo[ fifoTail ];
  5509                           	movf	(_fifoTail),w
  5510  015A  087C               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5511  015B  3E25               	movwf	fsr0
  5512  015C  0084               	bcf	status, 7	;select IRP bank0
  5513  015D  1383               	movf	indf,w
  5514  015E  0800               	movwf	(??_getFIFO+0)+0
  5515  015F  00F0               	movf	(??_getFIFO+0)+0,w
  5516  0160  0870               	movwf	(getFIFO@aux)
  5517  0161  00F1               	line	30
  5518                           	
  5519                           l1570:	
  5520  0162                     ;fifo.c: 30:         ++fifoTail;
  5521                           	movlw	low(01h)
  5522  0162  3001               	movwf	(??_getFIFO+0)+0
  5523  0163  00F0               	movf	(??_getFIFO+0)+0,w
  5524  0164  0870               	addwf	(_fifoTail),f
  5525  0165  07FC               	goto	l1572
  5526  0166  2967               	line	31
  5527                           ;fifo.c: 31:     }
  5528                           	
  5529                           l12:	
  5530  0167                     	line	32
  5531                           	
  5532                           l1572:	
  5533  0167                     ;fifo.c: 32:     return( aux );
  5534                           	movf	(getFIFO@aux),w
  5535  0167  0871               	goto	l13
  5536  0168  2969               	
  5537                           l1574:	
  5538  0169                     	line	33
  5539                           	
  5540                           l13:	
  5541  0169                     	return
  5542  0169  0008               	opt stack 0
  5543                           GLOBAL	__end_of_getFIFO
  5544                           	__end_of_getFIFO:
  5545  016A                     	signat	_getFIFO,89
  5546                           	global	_displayFIFO
  5547                           
  5548 ;; *************** function _displayFIFO *****************
  5549 ;; Defined at:
  5550 ;;		line 40 in file "fifo.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      PTR void 
  5557 ;; Registers used:
  5558 ;;		wreg
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5564 ;;      Params:         0       0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0
  5567 ;;      Totals:         0       0       0       0       0
  5568 ;;Total ram usage:        0 bytes
  5569 ;; Hardware stack levels used:    1
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5577                           	line	40
  5578                           global __ptext14
  5579                           __ptext14:	;psect for function _displayFIFO
  5580  0111                     psect	text14
  5581                           	file	"fifo.c"
  5582                           	line	40
  5583                           	global	__size_of_displayFIFO
  5584                           	__size_of_displayFIFO	equ	__end_of_displayFIFO-_displayFIFO
  5585  0003                     	
  5586                           _displayFIFO:	
  5587  0111                     ;incstack = 0
  5588                           	opt	stack 7
  5589                           ; Regs used in _displayFIFO: [wreg]
  5590                           	line	42
  5591                           	
  5592                           l1576:	
  5593  0111                     ;fifo.c: 42:     return( fifo );
  5594                           	movlw	(low(_fifo|((0x0)<<8)))&0ffh
  5595  0111  3025               	goto	l19
  5596  0112  2913               	
  5597                           l1578:	
  5598  0113                     	line	43
  5599                           	
  5600                           l19:	
  5601  0113                     	return
  5602  0113  0008               	opt stack 0
  5603                           GLOBAL	__end_of_displayFIFO
  5604                           	__end_of_displayFIFO:
  5605  0114                     	signat	_displayFIFO,89
  5606                           	global	_delFIFO
  5607                           
  5608 ;; *************** function _delFIFO *****************
  5609 ;; Defined at:
  5610 ;;		line 45 in file "fifo.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  n               1    wreg     unsigned char 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  n               1    1[COMMON] unsigned char 
  5615 ;;  ret             1    2[COMMON] unsigned char 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      unsigned char 
  5618 ;; Registers used:
  5619 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5625 ;;      Params:         0       0       0       0       0
  5626 ;;      Locals:         2       0       0       0       0
  5627 ;;      Temps:          1       0       0       0       0
  5628 ;;      Totals:         3       0       0       0       0
  5629 ;;Total ram usage:        3 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_main
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5638                           	line	45
  5639                           global __ptext15
  5640                           __ptext15:	;psect for function _delFIFO
  5641  0182                     psect	text15
  5642                           	file	"fifo.c"
  5643                           	line	45
  5644                           	global	__size_of_delFIFO
  5645                           	__size_of_delFIFO	equ	__end_of_delFIFO-_delFIFO
  5646  0021                     	
  5647                           _delFIFO:	
  5648  0182                     ;incstack = 0
  5649                           	opt	stack 7
  5650                           ; Regs used in _delFIFO: [wreg-fsr0h+status,2+status,0]
  5651                           ;delFIFO@n stored from wreg
  5652                           	movwf	(delFIFO@n)
  5653  0182  00F1               	line	48
  5654                           	
  5655                           l1580:	
  5656  0183                     ;fifo.c: 45: unsigned char delFIFO( unsigned char n );fifo.c: 46: {;fifo.c: 47:     unsi
                                 gned char ret;;fifo.c: 48:     while( n && fifoHead )
  5657                           	goto	l22
  5658  0183  2994               	
  5659                           l23:	
  5660  0184                     	line	50
  5661                           	
  5662                           l1582:	
  5663  0184                     ;fifo.c: 49:     {;fifo.c: 50:         --fifoHead;
  5664                           	movlw	01h
  5665  0184  3001               	subwf	(_fifoHead),f
  5666  0185  02FD               	line	51
  5667                           	
  5668                           l1584:	
  5669  0186                     ;fifo.c: 51:         ret = fifo[fifoHead];
  5670                           	movf	(_fifoHead),w
  5671  0186  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5672  0187  3E25               	movwf	fsr0
  5673  0188  0084               	bcf	status, 7	;select IRP bank0
  5674  0189  1383               	movf	indf,w
  5675  018A  0800               	movwf	(??_delFIFO+0)+0
  5676  018B  00F0               	movf	(??_delFIFO+0)+0,w
  5677  018C  0870               	movwf	(delFIFO@ret)
  5678  018D  00F2               	line	52
  5679                           	
  5680                           l1586:	
  5681  018E                     ;fifo.c: 52:         fifo[ fifoHead ] = 0;
  5682                           	movf	(_fifoHead),w
  5683  018E  087D               	addlw	low(_fifo|((0x0)<<8))&0ffh
  5684  018F  3E25               	movwf	fsr0
  5685  0190  0084               	clrf	indf
  5686  0191  0180               	line	53
  5687                           ;fifo.c: 53:         --n;
  5688                           	movlw	01h
  5689  0192  3001               	subwf	(delFIFO@n),f
  5690  0193  02F1               	line	54
  5691                           ;fifo.c: 54:     }
  5692                           	
  5693                           l22:	
  5694  0194                     	line	48
  5695                           ;fifo.c: 48:     while( n && fifoHead )
  5696                           	movf	((delFIFO@n)),w
  5697  0194  0871               	btfsc	status,2
  5698  0195  1903               	goto	u641
  5699  0196  2998               	goto	u640
  5700  0197  2999               u641:
  5701  0198                     	goto	l1590
  5702  0198  29A0               u640:
  5703  0199                     	
  5704                           l1588:	
  5705  0199                     	movf	((_fifoHead)),w
  5706  0199  087D               	btfss	status,2
  5707  019A  1D03               	goto	u651
  5708  019B  299D               	goto	u650
  5709  019C  299E               u651:
  5710  019D                     	goto	l1582
  5711  019D  2984               u650:
  5712  019E                     	goto	l1590
  5713  019E  29A0               	
  5714                           l25:	
  5715  019F                     	goto	l1590
  5716  019F  29A0               	
  5717                           l26:	
  5718  01A0                     	line	55
  5719                           	
  5720                           l1590:	
  5721  01A0                     ;fifo.c: 55:     return( ret );
  5722                           	movf	(delFIFO@ret),w
  5723  01A0  0872               	goto	l27
  5724  01A1  29A2               	
  5725                           l1592:	
  5726  01A2                     	line	56
  5727                           	
  5728                           l27:	
  5729  01A2                     	return
  5730  01A2  0008               	opt stack 0
  5731                           GLOBAL	__end_of_delFIFO
  5732                           	__end_of_delFIFO:
  5733  01A3                     	signat	_delFIFO,4217
  5734                           	global	_currentKey
  5735                           
  5736 ;; *************** function _currentKey *****************
  5737 ;; Defined at:
  5738 ;;		line 65 in file "keyboard.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      unsigned char 
  5745 ;; Registers used:
  5746 ;;		wreg
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5752 ;;      Params:         0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0
  5755 ;;      Totals:         0       0       0       0       0
  5756 ;;Total ram usage:        0 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_main
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5765                           	file	"keyboard.c"
  5766                           	line	65
  5767                           global __ptext16
  5768                           __ptext16:	;psect for function _currentKey
  5769  0114                     psect	text16
  5770                           	file	"keyboard.c"
  5771                           	line	65
  5772                           	global	__size_of_currentKey
  5773                           	__size_of_currentKey	equ	__end_of_currentKey-_currentKey
  5774  0005                     	
  5775                           _currentKey:	
  5776  0114                     ;incstack = 0
  5777                           	opt	stack 7
  5778                           ; Regs used in _currentKey: [wreg]
  5779                           	line	67
  5780                           	
  5781                           l1598:	
  5782  0114                     ;keyboard.c: 67:     return( currKey );
  5783                           	bcf	status, 5	;RP0=0, select bank0
  5784  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  5785  0115  1303               	movf	(_currKey),w
  5786  0116  0823               	goto	l51
  5787  0117  2918               	
  5788                           l1600:	
  5789  0118                     	line	68
  5790                           	
  5791                           l51:	
  5792  0118                     	return
  5793  0118  0008               	opt stack 0
  5794                           GLOBAL	__end_of_currentKey
  5795                           	__end_of_currentKey:
  5796  0119                     	signat	_currentKey,89
  5797                           	global	_clearLCD
  5798                           
  5799 ;; *************** function _clearLCD *****************
  5800 ;; Defined at:
  5801 ;;		line 98 in file "lcd.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;		None
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, pclath, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5815 ;;      Params:         0       0       0       0       0
  5816 ;;      Locals:         0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0
  5818 ;;      Totals:         0       0       0       0       0
  5819 ;;Total ram usage:        0 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    1
  5822 ;; This function calls:
  5823 ;;		_cmdLCD
  5824 ;; This function is called by:
  5825 ;;		_main
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5829                           	file	"lcd.c"
  5830                           	line	98
  5831                           global __ptext17
  5832                           __ptext17:	;psect for function _clearLCD
  5833  0123                     psect	text17
  5834                           	file	"lcd.c"
  5835                           	line	98
  5836                           	global	__size_of_clearLCD
  5837                           	__size_of_clearLCD	equ	__end_of_clearLCD-_clearLCD
  5838  0007                     	
  5839                           _clearLCD:	
  5840  0123                     ;incstack = 0
  5841                           	opt	stack 6
  5842                           ; Regs used in _clearLCD: [wreg+status,2+status,0+pclath+cstack]
  5843                           	line	100
  5844                           	
  5845                           l1676:	
  5846  0123                     ;lcd.c: 100:     cmdLCD(0x01);
  5847                           	movlw	low(01h)
  5848  0123  3001               	fcall	_cmdLCD
  5849  0124  120A  118A  22D6  120A  118A  	line	101
  5850                           	
  5851                           l106:	
  5852  0129                     	return
  5853  0129  0008               	opt stack 0
  5854                           GLOBAL	__end_of_clearLCD
  5855                           	__end_of_clearLCD:
  5856  012A                     	signat	_clearLCD,89
  5857                           	global	_cmdLCD
  5858                           
  5859 ;; *************** function _cmdLCD *****************
  5860 ;; Defined at:
  5861 ;;		line 35 in file "lcd.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;  cmd             1    wreg     unsigned char 
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  cmd             1    2[COMMON] unsigned char 
  5866 ;;  nibble          1    3[COMMON] volatile struct .
  5867 ;; Return value:  Size  Location     Type
  5868 ;;                  1    wreg      void 
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5876 ;;      Params:         0       0       0       0       0
  5877 ;;      Locals:         2       0       0       0       0
  5878 ;;      Temps:          2       0       0       0       0
  5879 ;;      Totals:         4       0       0       0       0
  5880 ;;Total ram usage:        4 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_initLCD
  5886 ;;		_gotoxy
  5887 ;;		_clearLCD
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5891                           	line	35
  5892                           global __ptext18
  5893                           __ptext18:	;psect for function _cmdLCD
  5894  02D6                     psect	text18
  5895                           	file	"lcd.c"
  5896                           	line	35
  5897                           	global	__size_of_cmdLCD
  5898                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  5899  005F                     	
  5900                           _cmdLCD:	
  5901  02D6                     ;incstack = 0
  5902                           	opt	stack 5
  5903                           ; Regs used in _cmdLCD: [wreg+status,2+status,0]
  5904                           ;cmdLCD@cmd stored from wreg
  5905                           	movwf	(cmdLCD@cmd)
  5906  02D6  00F2               	line	39
  5907                           	
  5908                           l1482:	
  5909  02D7                     ;lcd.c: 35: void cmdLCD( unsigned char cmd );lcd.c: 36: {;lcd.c: 37:         volatile RE
                                 Gnibble_t nibble;;lcd.c: 39:         nibble.HILO = cmd;
  5910                           	movf	(cmdLCD@cmd),w
  5911  02D7  0872               	movwf	(??_cmdLCD+0)+0
  5912  02D8  00F0               	movf	(??_cmdLCD+0)+0,w
  5913  02D9  0870               	movwf	(cmdLCD@nibble)	;volatile
  5914  02DA  00F3               	line	40
  5915                           	
  5916                           l1484:	
  5917  02DB                     ;lcd.c: 40:         LCD.RS = 0;
  5918                           	bcf	status, 5	;RP0=0, select bank0
  5919  02DB  1283               	bcf	status, 6	;RP1=0, select bank0
  5920  02DC  1303               	bcf	(8),4	;volatile
  5921  02DD  1208               	line	41
  5922                           	
  5923                           l1486:	
  5924  02DE                     ;lcd.c: 41:         LCD.BUS = nibble.HI ;
  5925                           	swapf	(cmdLCD@nibble),w	;volatile
  5926  02DE  0E73               	andlw	(1<<4)-1
  5927  02DF  390F               	movwf	(??_cmdLCD+0)+0
  5928  02E0  00F0               	movf	(8),w	;volatile
  5929  02E1  0808               	xorwf	(??_cmdLCD+0)+0,w
  5930  02E2  0670               	andlw	not ((1<<4)-1)
  5931  02E3  39F0               	xorwf	(??_cmdLCD+0)+0,w
  5932  02E4  0670               	movwf	(8)	;volatile
  5933  02E5  0088               	line	42
  5934                           	
  5935                           l1488:	
  5936  02E6                     ;lcd.c: 42:          LCD.EN = 0;
  5937                           	bcf	(8),5	;volatile
  5938  02E6  1288               	line	43
  5939                           	
  5940                           l1490:	
  5941  02E7                     ;lcd.c: 43:         if( cmd == 0x01 || cmd == 0x02 )
  5942                           		decf	((cmdLCD@cmd)),w
  5943  02E7  0372               	btfsc	status,2
  5944  02E8  1903               	goto	u541
  5945  02E9  2AEB               	goto	u540
  5946  02EA  2AEC               u541:
  5947  02EB                     	goto	l1494
  5948  02EB  2AF3               u540:
  5949  02EC                     	
  5950                           l1492:	
  5951  02EC                     		movlw	2
  5952  02EC  3002               	xorwf	((cmdLCD@cmd)),w
  5953  02ED  0672               	btfss	status,2
  5954  02EE  1D03               	goto	u551
  5955  02EF  2AF1               	goto	u550
  5956  02F0  2AF2               u551:
  5957  02F1                     	goto	l1496
  5958  02F1  2AFD               u550:
  5959  02F2                     	goto	l1494
  5960  02F2  2AF3               	
  5961                           l78:	
  5962  02F3                     	line	44
  5963                           	
  5964                           l1494:	
  5965  02F3                     ;lcd.c: 44:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5966                           	opt asmopt_push
  5967                           opt asmopt_off
  5968                           movlw	3
  5969  02F3  3003               movwf	((??_cmdLCD+0)+0+1),f
  5970  02F4  00F1               	movlw	151
  5971  02F5  3097               movwf	((??_cmdLCD+0)+0),f
  5972  02F6  00F0               	u1207:
  5973  02F7                     decfsz	((??_cmdLCD+0)+0),f
  5974  02F7  0BF0               	goto	u1207
  5975  02F8  2AF7               	decfsz	((??_cmdLCD+0)+0+1),f
  5976  02F9  0BF1               	goto	u1207
  5977  02FA  2AF7               	nop2
  5978  02FB  2AFC               opt asmopt_pop
  5979                           
  5980                           	goto	l1498
  5981  02FC  2B02               	line	45
  5982                           ;lcd.c: 45:         else
  5983                           	
  5984                           l76:	
  5985  02FD                     	line	46
  5986                           	
  5987                           l1496:	
  5988  02FD                     ;lcd.c: 46:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5989                           	opt asmopt_push
  5990                           opt asmopt_off
  5991                           	movlw	13
  5992  02FD  300D               movwf	((??_cmdLCD+0)+0),f
  5993  02FE  00F0               	u1217:
  5994  02FF                     decfsz	(??_cmdLCD+0)+0,f
  5995  02FF  0BF0               	goto	u1217
  5996  0300  2AFF               opt asmopt_pop
  5997                           
  5998                           	goto	l1498
  5999  0301  2B02               	
  6000                           l79:	
  6001  0302                     	line	47
  6002                           	
  6003                           l1498:	
  6004  0302                     ;lcd.c: 47:         LCD.EN = 1;
  6005                           	bcf	status, 5	;RP0=0, select bank0
  6006  0302  1283               	bcf	status, 6	;RP1=0, select bank0
  6007  0303  1303               	bsf	(8),5	;volatile
  6008  0304  1688               	line	49
  6009                           	
  6010                           l1500:	
  6011  0305                     ;lcd.c: 49:         if( cmd != (0x20) )
  6012                           		movlw	32
  6013  0305  3020               	xorwf	((cmdLCD@cmd)),w
  6014  0306  0672               	btfsc	status,2
  6015  0307  1903               	goto	u561
  6016  0308  2B0A               	goto	u560
  6017  0309  2B0B               u561:
  6018  030A                     	goto	l85
  6019  030A  2B34               u560:
  6020  030B                     	line	51
  6021                           	
  6022                           l1502:	
  6023  030B                     ;lcd.c: 50:     {;lcd.c: 51:        LCD.RS = 0;
  6024                           	bcf	(8),4	;volatile
  6025  030B  1208               	line	52
  6026                           	
  6027                           l1504:	
  6028  030C                     ;lcd.c: 52:        LCD.BUS = nibble.LO;
  6029                           	movf	(cmdLCD@nibble),w	;volatile
  6030  030C  0873               	andlw	(1<<4)-1
  6031  030D  390F               	movwf	(??_cmdLCD+0)+0
  6032  030E  00F0               	movf	(8),w	;volatile
  6033  030F  0808               	xorwf	(??_cmdLCD+0)+0,w
  6034  0310  0670               	andlw	not ((1<<4)-1)
  6035  0311  39F0               	xorwf	(??_cmdLCD+0)+0,w
  6036  0312  0670               	movwf	(8)	;volatile
  6037  0313  0088               	line	53
  6038                           	
  6039                           l1506:	
  6040  0314                     ;lcd.c: 53:        LCD.EN = 0;
  6041                           	bcf	(8),5	;volatile
  6042  0314  1288               	line	54
  6043                           ;lcd.c: 54:        if( cmd == 0x01 || cmd == 0x02 )
  6044                           		decf	((cmdLCD@cmd)),w
  6045  0315  0372               	btfsc	status,2
  6046  0316  1903               	goto	u571
  6047  0317  2B19               	goto	u570
  6048  0318  2B1A               u571:
  6049  0319                     	goto	l1510
  6050  0319  2B21               u570:
  6051  031A                     	
  6052                           l1508:	
  6053  031A                     		movlw	2
  6054  031A  3002               	xorwf	((cmdLCD@cmd)),w
  6055  031B  0672               	btfss	status,2
  6056  031C  1D03               	goto	u581
  6057  031D  2B1F               	goto	u580
  6058  031E  2B20               u581:
  6059  031F                     	goto	l1512
  6060  031F  2B2B               u580:
  6061  0320                     	goto	l1510
  6062  0320  2B21               	
  6063                           l83:	
  6064  0321                     	line	55
  6065                           	
  6066                           l1510:	
  6067  0321                     ;lcd.c: 55:             _delay((unsigned long)((2)*(4000000/4000.0)));
  6068                           	opt asmopt_push
  6069                           opt asmopt_off
  6070                           movlw	3
  6071  0321  3003               movwf	((??_cmdLCD+0)+0+1),f
  6072  0322  00F1               	movlw	151
  6073  0323  3097               movwf	((??_cmdLCD+0)+0),f
  6074  0324  00F0               	u1227:
  6075  0325                     decfsz	((??_cmdLCD+0)+0),f
  6076  0325  0BF0               	goto	u1227
  6077  0326  2B25               	decfsz	((??_cmdLCD+0)+0+1),f
  6078  0327  0BF1               	goto	u1227
  6079  0328  2B25               	nop2
  6080  0329  2B2A               opt asmopt_pop
  6081                           
  6082                           	goto	l1514
  6083  032A  2B30               	line	56
  6084                           ;lcd.c: 56:        else
  6085                           	
  6086                           l81:	
  6087  032B                     	line	57
  6088                           	
  6089                           l1512:	
  6090  032B                     ;lcd.c: 57:             _delay((unsigned long)((40)*(4000000/4000000.0)));
  6091                           	opt asmopt_push
  6092                           opt asmopt_off
  6093                           	movlw	13
  6094  032B  300D               movwf	((??_cmdLCD+0)+0),f
  6095  032C  00F0               	u1237:
  6096  032D                     decfsz	(??_cmdLCD+0)+0,f
  6097  032D  0BF0               	goto	u1237
  6098  032E  2B2D               opt asmopt_pop
  6099                           
  6100                           	goto	l1514
  6101  032F  2B30               	
  6102                           l84:	
  6103  0330                     	line	58
  6104                           	
  6105                           l1514:	
  6106  0330                     ;lcd.c: 58:        LCD.EN = 1;
  6107                           	bcf	status, 5	;RP0=0, select bank0
  6108  0330  1283               	bcf	status, 6	;RP1=0, select bank0
  6109  0331  1303               	bsf	(8),5	;volatile
  6110  0332  1688               	goto	l85
  6111  0333  2B34               	line	59
  6112                           ;lcd.c: 59:     }
  6113                           	
  6114                           l80:	
  6115  0334                     	line	60
  6116                           	
  6117                           l85:	
  6118  0334                     	return
  6119  0334  0008               	opt stack 0
  6120                           GLOBAL	__end_of_cmdLCD
  6121                           	__end_of_cmdLCD:
  6122  0335                     	signat	_cmdLCD,4217
  6123                           global	___latbits
  6124                           ___latbits	equ	2
  6125  0002                     	global	btemp
  6126                           	btemp set 07Eh
  6127  007E                     
  6128                           	DABS	1,126,2	;btemp
  6129                           	global	wtemp0
  6130                           	wtemp0 set btemp+0
  6131  007E                     	end


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     13      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@atuador(BANK0[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@sensor(BANK0[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@atuador(BANK0[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@sensor(BANK0[1]), 

    writeLCD@ptr	PTR const unsigned char  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 

    sp__displayFIFO	PTR void  size(1) Largest target is 16
		 -> fifo(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_writeLCD
    _writeLCD->_gotoxy
    _gotoxy->_cmdLCD
    _serialIOscan->_serialIObyteShift
    _initLCD->_cmdLCD
    _clearLCD->_cmdLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    2727
                                              0 BANK0     13    13      0
                           _clearLCD
                         _currentKey
                            _delFIFO
                        _displayFIFO
                            _getFIFO
                       _initKeyboard
                            _initLCD
                       _initSerialIO
                       _keyboardScan
                        _previousKey
                            _putFIFO
                       _serialIOscan
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             4     2      2     605
                                              8 COMMON     4     2      2
                        _displayFIFO (ARG)
                             _gotoxy
                             _putLCD
 ---------------------------------------------------------------------------------
 (2) _putLCD                                               4     4      0      67
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _gotoxy                                               4     3      1     297
                                              4 COMMON     4     3      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         5     5      0     205
                                              4 COMMON     5     5      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     114
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _putFIFO                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _previousKey                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _keyboardScan                                        11    11      0     210
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     251
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0     177
                                              4 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (1) _initKeyboard                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getFIFO                                              2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayFIFO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delFIFO                                              3     3      0      46
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _currentKey                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearLCD                                             0     0      0     177
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               4     4      0     177
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clearLCD
     _cmdLCD
   _currentKey
   _delFIFO
   _displayFIFO
   _getFIFO
   _initKeyboard
   _initLCD
     _cmdLCD
   _initSerialIO
   _keyboardScan
   _previousKey
   _putFIFO
   _serialIOscan
     _serialIObyteShift
     _serialIOload
   _writeLCD
     _displayFIFO (ARG)
     _gotoxy (ARG)
       _cmdLCD
     _putLCD (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Nov 11 17:23:15 2019

              ?_displayFIFO 0070                           l9 013F                           pc 0002  
                        l12 0167                          l13 0169                          l22 0194  
                        l23 0184                          l25 019F                          l26 01A0  
                        l51 0118                          l27 01A2                          l19 0113  
                        l62 0152                          l54 033F                          l55 03A8  
                        l80 0334                          l56 035C                          l48 011D  
                        l81 032B                          l73 02D5                          l57 039D  
                        l58 0392                          l83 0321                          l59 03B3  
                        l91 0181                          l84 0330                          l76 02FD  
                        l85 0334                          l78 02F3                          l94 01BD  
                        l79 0302                          l95 01AF                          l88 0259  
                        l96 01C6                          l97 01C6                          fsr 0004  
                       l200 058E                         l201 0593                         l106 0129  
                       l210 05F4                         l202 05A9                         l211 05FA  
                       l203 05AE                         l220 079C                         l140 0625  
                       l212 0603                         l204 05C4                         l221 06BE  
                       l213 0604                         l205 05C9                         l141 03DD  
                       l230 070F                         l222 06CD                         l142 069F  
                       l214 060A                         l206 05DF                         l150 0414  
                       l231 0710                         l223 06D7                         l215 0613  
                       l207 05E4                         l151 04B0                         l143 03DE  
                       l224 07D6                         l240 0743                         l232 0721  
                       l216 0614                         l208 05EA                         l160 044B  
                       l152 041F                         l144 03F3                         l241 0744  
                       l233 072B                         l225 06D8                         l217 061A  
                       l209 05F3                         l145 04B3                         l153 04AF  
                       l161 04AB                         l250 0757                         l242 0745  
                       l234 072C                         l226 06E9                         l218 0623  
                       l170 0482                         l162 0456                         l154 042A  
                       l146 03FE                         l251 075A                         l243 0746  
                       l235 073E                         l227 06F3                         l219 07E7  
                       l147 04B2                         l155 04AE                         l163 04AA  
                       l171 04A6                         l139 03D7                         l252 075C  
                       l244 074D                         l236 073F                         l228 06F4  
                       l180 04C4                         l172 048D                         l164 0461  
                       l156 0435                         l148 0409                         l245 0765  
                       l253 075F                         l237 0740                         l229 0705  
                       l181 04CA                         l149 04B1                         l157 04AD  
                       l165 04A9                         l173 04A5                         l254 0761  
                       l246 074E                         l238 0741                         l190 0509  
                       l182 04D3                         l174 0498                         l166 046C  
                       l158 0440                         l255 0794                         l247 078E  
                       l239 0742                         l191 050E                         l183 04D4  
                       l159 04AC                         l167 04A8                         l175 04A4  
                       l280 01D9                         l256 07ED                         l248 0752  
                       l192 0523                         l184 04DA                         l176 04A3  
                       l168 0477                         l281 01DA                         l257 07EE  
                       l249 0755                         l193 0528                         l185 04E3  
                       l177 04B4                         l169 04A7                         l282 01E3  
                       l290 0296                         l258 07EE                         l194 053D  
                       l186 04E4                         l178 04BA                         l283 01EC  
                       l275 0122                         l195 0542                         l187 04EA  
                       l179 04C3                         l284 01F1                         l196 0558  
                       l188 04F3                         l293 0225                         l197 055D  
                       l189 04F4                         l278 01E7                         l198 0573  
                       l279 01CE                         l287 0288                         l199 0578  
                       l288 0268                         l289 0291                         _LCD 0008  
                       u600 01D7                         u601 01D6                         u610 01DE  
                       u611 01DD                         u540 02EC                         u700 037B  
                       u620 01EC                         u541 02EB                         u701 037A  
                       u621 01EB                         u550 02F2                         u630 015A  
                       u551 02F1                         u631 0159                         u560 030B  
                       u640 0199                         u720 039C                         u800 041A  
                       u561 030A                         u641 0198                         u721 039B  
                       u801 0419                         u570 031A                         u650 019E  
                       u730 03A7                         u810 0425                         u571 0319  
                       u651 019D                         u731 03A6                         u715 037E  
                       u811 0424                         u580 0320                         u660 033D  
                       u740 01C5                         u900 0488                         u820 0430  
                       u581 031F                         u661 033C                         u741 01C4  
                       u901 0487                         u821 042F                         u750 0290  
                       u910 0493                         u830 043B                         u751 028F  
                       u911 0492                         u831 043A                         u680 035A  
                       u920 049E                         u840 0446                         u760 03EE  
                       u681 0359                         u921 049D                         u841 0445  
                       u761 03ED                         u674 0345                         u930 04BE  
                       u850 0451                         u770 03F9                         u675 0343  
                       u595 0171                         u931 04BD                         u851 0450  
                       u771 03F8                         u940 04CE                         u860 045C  
                       u780 0404                         u941 04CD                         u861 045B  
                       u781 0403                         u694 036D                         u950 04DE  
                       u870 0467                         u790 040F                         u695 036A  
                       u951 04DD                         u871 0466                         u791 040E  
                       u960 04EE                         u880 0472                         u961 04ED  
                       u881 0471                         u970 05EE                         u890 047D  
                       u971 05ED                         u891 047C                         u980 05FE  
                       u981 05FD                         u990 060E                         u991 060D  
                       fsr0 0004                         indf 0000                __CFG_LVP$OFF 0000  
                      l1500 0305                        l1510 0321                        l1502 030B  
                      l1512 032B                        l1504 030C                        l1600 0118  
                      l1520 022E                        l1514 0330                        l1506 0314  
                      l1610 0353                        l1602 0335                        l1530 024C  
                      l1522 0236                        l2090 0697                        l1508 031A  
                      l1700 021D                        l1620 0392                        l1612 0354  
                      l1604 0337                        l1540 01C8                        l1532 024D  
                      l1524 0237                        l1516 0227                        l2092 0774  
                      l1702 0220                        l1630 03B3                        l1622 0396  
                      l1614 035B                        l1606 033E                        l1550 01E3  
                      l1542 01CC                        l1710 0261                        l1534 0256  
                      l1526 0240                        l1518 022B                        l2094 07A4  
                      l1640 014D                        l1632 0140                        l1704 0223  
                      l1624 039D                        l1616 035C                        l1608 033F  
                      l1560 0133                        l1552 01E4                        l1544 01D1  
                      l1720 0291                        l1712 0266                        l1536 016B  
                      l1528 0243                        l2088 062F                        l1800 0498  
                      l1490 02E7                        l1482 02D7                        l1570 0162  
                      l1642 014E                        l1634 0144                        l1650 02A0  
                      l1706 0224                        l1626 03A1                        l1618 037B  
                      l1562 013B                        l1546 01D7                        l1554 01E7  
                      l1538 011E                        l1714 0268                        l1810 04CE  
                      l1802 049E                        l1730 03D3                        l1722 03B4  
                      l1492 02EC                        l1484 02DB                        l1580 0183  
                      l1572 0167                        l1564 0153                        l1644 0151  
                      l1636 0147                        l1660 02BA                        l1652 02A1  
                      l1628 03A8                        l1556 01EF                        l1548 01DE  
                      l1716 0283                        l1708 025A                        l1900 06FA  
                      l1820 04F4                        l1812 04D5                        l1804 04B5  
                      l1740 03F3                        l1732 03D7                        l1724 03BB  
                      l1494 02F3                        l1486 02DE                        l1590 01A0  
                      l1582 0184                        l1574 0169                        l1566 0154  
                      l1638 014B                        l1662 02C0                        l1654 02A5  
                      l1646 0297                        l1558 01F1                        l1718 0288  
                      l1670 01AF                        l1910 071A                        l1902 06FE  
                      l1830 053D                        l1822 0509                        l1814 04DE  
                      l1806 04BE                        l1750 040F                        l1742 03F9  
                      l1734 03DE                        l1726 03C0                        l1496 02FD  
                      l1488 02E6                        l1592 01A2                        l1584 0186  
                      l1576 0111                        l1568 015A                        l1664 02C6  
                      l1656 02AE                        l1648 029C                        l1680 0201  
                      l1672 01B8                        l1920 0746                        l1912 0721  
                      l1904 0705                        l1840 0578                        l1832 0542  
                      l1824 050E                        l1816 04E5                        l1808 04C5  
                      l1760 042A                        l1752 0414                        l1744 03FE  
                      l1736 03E8                        l1728 03C5                        l1498 0302  
                      l1586 018E                        l1578 0113                        l1666 02CC  
                      l1658 02B4                        l1690 020E                        l1682 0202  
                      l1594 0119                        l1674 01BD                        l1930 0764  
                      l1922 074E                        l1914 072C                        l1906 0710  
                      l1850 05C4                        l1842 058E                        l1834 0558  
                      l1826 0523                        l1818 04EE                        l1770 0446  
                      l1762 0430                        l1754 041A                        l1746 0404  
                      l1738 03EE                        l1676 0123                        l1588 0199  
                      l1692 0211                        l1684 0205                        l1596 011D  
                      l1668 01A4                        l1924 0755                        l1932 0765  
                      l1916 0732                        l1908 0716                        l1940 079C  
                      l1860 05F5                        l1852 05C9                        l1844 0593  
                      l1836 055D                        l1828 0528                        l1780 0461  
                      l1772 044B                        l1764 0435                        l1756 041F  
                      l1748 0409                        l1598 0114                        l1694 0214  
                      l1686 0208                        l1678 01F3                        l1926 075A  
                      l1934 078E                        l1918 0737                        l1942 07D6  
                      l1870 061E                        l1862 05FE                        l1854 05DF  
                      l1846 05A9                        l1838 0573                        l1790 047D  
                      l1782 0467                        l1774 0451                        l1766 043B  
                      l1758 0425                        l1696 0217                        l1688 020B  
                      l1936 0794                        l1928 075F                        l1880 06B3  
                      l1872 0624                        l1864 0605                        l1856 05E5  
                      l1848 05AE                        l1792 0482                        l1784 046C  
                      l1776 0456                        l1768 0440                        l1698 021A  
                      l1938 079B                        l1890 06D8                        l1882 06BE  
                      l1866 060E                        l1858 05EE                        l1794 0488  
                      l1786 0472                        l1778 045C                        l1874 0625  
                      l1892 06DE                        l1884 06C2                        l1868 0615  
                      l1796 048D                        l1788 0477                        l1876 069F  
                      l1894 06E2                        l1886 06C6                        l1878 06A9  
                      l1798 0493                        l1896 06E9                        l1888 06CD  
                      l1898 06F4                 main@atuador 003C                        u1000 061E  
                      u1001 061D                        u1010 06A9                        u1011 06A8  
                      u1020 06B3                        u1021 06B2                        u1030 06C6  
                      u1031 06C5                        u1040 06E2                        u1041 06E1  
                      u1050 06FE                        u1051 06FD                        u1107 054A  
                      u1060 071A                        u1061 0719                        u1117 0565  
                      u1207 02F7                        u1127 0580                        u1217 02FF  
                      u1137 059B                        u1227 0325                        u1147 05B6  
                      u1237 032D                        u1157 05D1                        u1077 04FC  
                      u1167 023B                        u1087 0516                        u1177 0251  
                      u1097 0530                        u1187 02A9                        u1197 02D0  
                      _WPUB 0095                        _fifo 0025                        _main 03B4  
                      btemp 007E                        start 0000                       ?_main 0070  
             __CFG_WDTE$OFF 0000             __end_of_delFIFO 01A3                       _PORTB 0006  
           __end_of_getFIFO 016A                       _TRISB 0086                       _TRISD 0088  
           __end_of_initLCD 02D6                       main@a 0038                       main@b 0039  
                     main@c 003A                       main@d 003B             __end_of_putFIFO 0140  
                     pclath 000A                       status 0003                       wtemp0 007E  
            __CFG_MCLRE$OFF 0000             __initialization 07F1                __end_of_main 07F1  
             ?_initKeyboard 0070                      ??_main 0035               ?_initSerialIO 0070  
                    _ANSELH 0189               ?_keyboardScan 0070            __end_of_clearLCD 012A  
                    _cmdLCD 02D6              ??_initKeyboard 0070                   ??_delFIFO 0070  
                 ??_getFIFO 0070        __size_of_displayFIFO 0003                      _gotoxy 016A  
                    _putLCD 0226              ??_initSerialIO 0072                   ??_initLCD 0074  
                 ??_putFIFO 0070            __end_of_writeLCD 01C7              ??_keyboardScan 0070  
              ?_previousKey 0070     __end_of__initialization 07FC           _serialIObyteShift 01C7  
        ?_serialIObyteShift 0070              __pcstackCOMMON 0070         ??_serialIObyteShift 0070  
            _OPTION_REGbits 0081           initSerialIO@ptrIn 0073                  delFIFO@ret 0072  
                __pbssBANK0 0020   __end_of_serialIObyteShift 01F2                  __pmaintext 03B4  
              cmdLCD@nibble 0073                     ?_cmdLCD 0070                     ?_gotoxy 0074  
                   ?_putLCD 0070     serialIObyteShift@dataIn 0071                   ?_clearLCD 0070  
      __end_of_initKeyboard 0153                  __stringtab 0003               ?_serialIOload 0070  
             ?_serialIOscan 0070        __end_of_initSerialIO 0226                  getFIFO@aux 0071  
           __size_of_cmdLCD 005F                     _delFIFO 0182                  _currentKey 0114  
                   _getFIFO 0153                   _ANSELbits 0188        __end_of_keyboardScan 03B4  
           __size_of_gotoxy 0018                   ?_writeLCD 0078             __size_of_putLCD 0034  
                   __ptext1 01A3                     __ptext2 0226                     __ptext3 016A  
                   __ptext4 025A                     __ptext5 011E                     __ptext6 01C7  
                   __ptext7 0132                     __ptext8 0119                     __ptext9 0335  
                   _initLCD 0297                     _currKey 0023                  ??_clearLCD 0074  
                   _putFIFO 0132                     _prevKey 0024                     clrloop0 012B  
      end_of_initialization 07FC              ??_serialIOload 0070              ??_serialIOscan 0074  
__size_of_serialIObyteShift 002B                     gotoxy@x 0077                     gotoxy@y 0074  
      __size_of_previousKey 0005                     putLCD@c 0072                  ??_writeLCD 007A  
                 _PORTAbits 0005                _KEYBOARDbits 0006                   _TRISAbits 0085  
           keyboardScan@aux 0078                  main@estado 003F                  main@sensor 003D  
             ??_displayFIFO 0070              __end_of_cmdLCD 0335                 ?_currentKey 0070  
            __end_of_gotoxy 0182              __end_of_putLCD 025A         start_initialization 07F1  
     __size_of_initKeyboard 0013       __size_of_initSerialIO 0034          initSerialIO@length 0071  
        initSerialIO@ptrOut 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000       __size_of_keyboardScan 007F  
                  ??_cmdLCD 0070              _keyboardMatrix 0009                _initKeyboard 0140  
                  ??_gotoxy 0075                    ??_putLCD 0070        __end_of_serialIOload 0123  
      __end_of_serialIOscan 0297         __end_of_displayFIFO 0114                _initSerialIO 01F2  
               __pbssCOMMON 007C                   ___latbits 0002               __pcstackBANK0 0035  
         __size_of_clearLCD 0007         __size_of_currentKey 0005                _keyboardScan 0335  
    __end_of_keyboardMatrix 0019                   cmdLCD@cmd 0072                    ?_delFIFO 0070  
             serialIOscan@i 0078               serialIOscan@j 0077                    ?_getFIFO 0070  
                 __pstrings 0003                    ?_initLCD 0070           __size_of_writeLCD 0024  
                  ?_putFIFO 0070    serialIObyteShift@dataBit 0073    serialIObyteShift@dataOut 0072  
               writeLCD@ptr 0079                   clear_ram0 012A                    _SERIALIO 0005  
               _displayFIFO 0111                 __stringbase 0008                putLCD@nibble 0073  
               _lenSerialIO 0020                   main@tecla 003E               ??_previousKey 0070  
     __size_of_serialIOload 0005       __size_of_serialIOscan 003D                ??_currentKey 0070  
          __size_of_delFIFO 0021            __size_of_getFIFO 0017          __end_of__stringtab 0009  
                  delFIFO@n 0071            __size_of_initLCD 003F                    _clearLCD 0123  
                  _fifoHead 007D            __size_of_putFIFO 000E                    _fifoTail 007C  
                  __ptext10 01F2                    __ptext11 0297                    __ptext12 0140  
                  __ptext13 0153                    __ptext14 0111                    __ptext15 0182  
                  __ptext16 0114                    __ptext17 0123                    __ptext18 02D6  
              _serialIOload 011E                _serialIOscan 025A               __size_of_main 043D  
        __end_of_currentKey 0119         __end_of_previousKey 011E               keyboardScan@i 0079  
             keyboardScan@j 007A                    main@rest 0041                    _writeLCD 01A3  
                  putFIFO@c 0071                   writeLCD@x 007B                   writeLCD@y 0078  
                 stringcode 0003                _ptrSerialOut 0021                    stringdir 0003  
                  stringtab 0003                 _ptrSerialIn 0022                 _previousKey 0119  
