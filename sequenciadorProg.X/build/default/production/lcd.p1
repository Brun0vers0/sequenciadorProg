Version 4.0 HI-TECH Software Intermediate Code
"25 ./lcd.h
[; ;./lcd.h: 25:     {
[s S141 :4 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S141 . BUS RS EN B0 B1 ]
"23
[; ;./lcd.h: 23: {
[u S140 `S141 1 ]
[n S140 . . ]
"1602 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1602: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
[v F1256 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic.h
[v __delay `JF1256 ~T0 @X0 0 e ]
[p i __delay ]
"73 ./lcd.h
[; ;./lcd.h: 73: void cmdLCD( unsigned char cmd );
[v _cmdLCD `(v ~T0 @X0 0 ef1`uc ]
"14
[; ;./lcd.h: 14:     {
[s S139 :4 `uc 1 :4 `uc 1 ]
[n S139 . LO HI ]
"12
[; ;./lcd.h: 12: {
[u S138 `S139 1 `uc 1 ]
[n S138 . . HILO ]
"5 ./fifo.h
[; ;./fifo.h: 5: unsigned char getFIFO( void );
[v _getFIFO `(uc ~T0 @X0 0 ef ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"61 ./config.h
[p x FOSC  = INTRC_NOCLKOUT ]
"62
[p x WDTE  = OFF ]
"63
[p x MCLRE = OFF ]
"64
[p x LVP   = OFF ]
"14 lcd.c
[; ;lcd.c: 14: volatile LCDbits_t LCD __attribute__((address(0x008)));
[v _LCD `VS140 ~T0 @X0 1 e@8 ]
"16
[; ;lcd.c: 16: const char indPassosSize = 5;
[v _indPassosSize `Cuc ~T0 @X0 1 e ]
[i _indPassosSize
-> -> 5 `i `uc
]
"17
[; ;lcd.c: 17: const char indicePassos[] = {0,3,7,11,14};
[v _indicePassos `Cuc ~T0 @X0 -> 5 `i e ]
[i _indicePassos
:U ..
-> -> 0 `i `uc
-> -> 3 `i `uc
-> -> 7 `i `uc
-> -> 11 `i `uc
-> -> 14 `i `uc
..
]
"20
[; ;lcd.c: 20: void initLCD( void )
[v _initLCD `(v ~T0 @X0 1 ef ]
"21
[; ;lcd.c: 21:     {
{
[e :U _initLCD ]
[f ]
"22
[; ;lcd.c: 22:         LCD.B0 = 0;
[e = . . _LCD 0 3 -> -> 0 `i `uc ]
"23
[; ;lcd.c: 23:         LCD.B1 = 0;
[e = . . _LCD 0 4 -> -> 0 `i `uc ]
"24
[; ;lcd.c: 24:         LCD.RS = 0;
[e = . . _LCD 0 1 -> -> 0 `i `uc ]
"25
[; ;lcd.c: 25:         LCD.BUS = 0x3;
[e = . . _LCD 0 0 -> -> 3 `i `uc ]
"26
[; ;lcd.c: 26:         LCD.EN = 1;
[e = . . _LCD 0 2 -> -> 1 `i `uc ]
"27
[; ;lcd.c: 27:         TRISD = 0xC0;
[e = _TRISD -> -> 192 `i `uc ]
"29
[; ;lcd.c: 29:         _delay((unsigned long)((100)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"31
[; ;lcd.c: 31:         cmdLCD(0x20);
[e ( _cmdLCD (1 -> -> 32 `i `uc ]
"32
[; ;lcd.c: 32:         cmdLCD(0x28);
[e ( _cmdLCD (1 -> -> 40 `i `uc ]
"33
[; ;lcd.c: 33:         cmdLCD(0x0C);
[e ( _cmdLCD (1 -> -> 12 `i `uc ]
"34
[; ;lcd.c: 34:         cmdLCD(0x01);
[e ( _cmdLCD (1 -> -> 1 `i `uc ]
"35
[; ;lcd.c: 35:         cmdLCD(0x02);
[e ( _cmdLCD (1 -> -> 2 `i `uc ]
"37
[; ;lcd.c: 37:         _delay((unsigned long)((100)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"38
[; ;lcd.c: 38:     }
[e :UE 142 ]
}
"40
[; ;lcd.c: 40: void cmdLCD( unsigned char cmd )
[v _cmdLCD `(v ~T0 @X0 1 ef1`uc ]
"41
[; ;lcd.c: 41: {
{
[e :U _cmdLCD ]
"40
[; ;lcd.c: 40: void cmdLCD( unsigned char cmd )
[v _cmd `uc ~T0 @X0 1 r1 ]
"41
[; ;lcd.c: 41: {
[f ]
"42
[; ;lcd.c: 42:         volatile REGnibble_t nibble;
[v _nibble `VS138 ~T0 @X0 1 a ]
"44
[; ;lcd.c: 44:         nibble.HILO = cmd;
[e = . _nibble 1 _cmd ]
"45
[; ;lcd.c: 45:         LCD.RS = 0;
[e = . . _LCD 0 1 -> -> 0 `i `uc ]
"46
[; ;lcd.c: 46:         LCD.BUS = nibble.HI ;
[e = . . _LCD 0 0 . . _nibble 0 1 ]
"47
[; ;lcd.c: 47:          LCD.EN = 0;
[e = . . _LCD 0 2 -> -> 0 `i `uc ]
"48
[; ;lcd.c: 48:         if( cmd == 0x01 || cmd == 0x02 )
[e $ ! || == -> _cmd `i -> 1 `i == -> _cmd `i -> 2 `i 144  ]
"49
[; ;lcd.c: 49:         _delay((unsigned long)((2)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[e $U 145  ]
"50
[; ;lcd.c: 50:         else
[e :U 144 ]
"51
[; ;lcd.c: 51:         _delay((unsigned long)((40)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[e :U 145 ]
"52
[; ;lcd.c: 52:         LCD.EN = 1;
[e = . . _LCD 0 2 -> -> 1 `i `uc ]
"54
[; ;lcd.c: 54:         if( cmd != (0x20) )
[e $ ! != -> _cmd `i -> 32 `i 146  ]
"55
[; ;lcd.c: 55:     {
{
"56
[; ;lcd.c: 56:        LCD.RS = 0;
[e = . . _LCD 0 1 -> -> 0 `i `uc ]
"57
[; ;lcd.c: 57:        LCD.BUS = nibble.LO;
[e = . . _LCD 0 0 . . _nibble 0 0 ]
"58
[; ;lcd.c: 58:        LCD.EN = 0;
[e = . . _LCD 0 2 -> -> 0 `i `uc ]
"59
[; ;lcd.c: 59:        if( cmd == 0x01 || cmd == 0x02 )
[e $ ! || == -> _cmd `i -> 1 `i == -> _cmd `i -> 2 `i 147  ]
"60
[; ;lcd.c: 60:             _delay((unsigned long)((2)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
[e $U 148  ]
"61
[; ;lcd.c: 61:        else
[e :U 147 ]
"62
[; ;lcd.c: 62:             _delay((unsigned long)((40)*(4000000/4000000.0)));
[e ( __delay (1 -> * -> -> 40 `i `d / -> -> 4000000 `l `d .4000000.0 `ul ]
[e :U 148 ]
"63
[; ;lcd.c: 63:        LCD.EN = 1;
[e = . . _LCD 0 2 -> -> 1 `i `uc ]
"64
[; ;lcd.c: 64:     }
}
[e :U 146 ]
"65
[; ;lcd.c: 65: }
[e :UE 143 ]
}
"66
[; ;lcd.c: 66: void putLCD( unsigned char c )
[v _putLCD `(v ~T0 @X0 1 ef1`uc ]
"67
[; ;lcd.c: 67:  {
{
[e :U _putLCD ]
"66
[; ;lcd.c: 66: void putLCD( unsigned char c )
[v _c `uc ~T0 @X0 1 r1 ]
"67
[; ;lcd.c: 67:  {
[f ]
"68
[; ;lcd.c: 68:         volatile REGnibble_t nibble;
[v _nibble `VS138 ~T0 @X0 1 a ]
"70
[; ;lcd.c: 70:         nibble.HILO = c;
[e = . _nibble 1 _c ]
"71
[; ;lcd.c: 71:         LCD.RS = 1;
[e = . . _LCD 0 1 -> -> 1 `i `uc ]
"72
[; ;lcd.c: 72:         LCD.BUS= nibble.HI;
[e = . . _LCD 0 0 . . _nibble 0 1 ]
"73
[; ;lcd.c: 73:         LCD.EN = 0;
[e = . . _LCD 0 2 -> -> 0 `i `uc ]
"74
[; ;lcd.c: 74:         _delay((unsigned long)((2)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"75
[; ;lcd.c: 75:         LCD.EN = 1;
[e = . . _LCD 0 2 -> -> 1 `i `uc ]
"77
[; ;lcd.c: 77:         LCD.RS = 1;
[e = . . _LCD 0 1 -> -> 1 `i `uc ]
"78
[; ;lcd.c: 78:         LCD.BUS = nibble.LO;
[e = . . _LCD 0 0 . . _nibble 0 0 ]
"79
[; ;lcd.c: 79:         LCD.EN = 0;
[e = . . _LCD 0 2 -> -> 0 `i `uc ]
"80
[; ;lcd.c: 80:         _delay((unsigned long)((2)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"81
[; ;lcd.c: 81:         LCD.EN = 1;
[e = . . _LCD 0 2 -> -> 1 `i `uc ]
"82
[; ;lcd.c: 82: }
[e :UE 149 ]
}
"83
[; ;lcd.c: 83: void gotoxy( unsigned char x, unsigned char y )
[v _gotoxy `(v ~T0 @X0 1 ef2`uc`uc ]
"84
[; ;lcd.c: 84: {
{
[e :U _gotoxy ]
"83
[; ;lcd.c: 83: void gotoxy( unsigned char x, unsigned char y )
[v _x `uc ~T0 @X0 1 r1 ]
[v _y `uc ~T0 @X0 1 r2 ]
"84
[; ;lcd.c: 84: {
[f ]
"85
[; ;lcd.c: 85:         cmdLCD((0x80 | 0xC0 * y) + (x & 0X3F));
[e ( _cmdLCD (1 -> + | -> 128 `i * -> 192 `i -> _y `i & -> _x `i -> 63 `i `uc ]
"86
[; ;lcd.c: 86: }
[e :UE 150 ]
}
"87
[; ;lcd.c: 87: void writeLCD( unsigned char x, unsigned char y, const char * ptr )
[v _writeLCD `(v ~T0 @X0 1 ef3`uc`uc`*Cuc ]
"88
[; ;lcd.c: 88: {
{
[e :U _writeLCD ]
"87
[; ;lcd.c: 87: void writeLCD( unsigned char x, unsigned char y, const char * ptr )
[v _x `uc ~T0 @X0 1 r1 ]
[v _y `uc ~T0 @X0 1 r2 ]
[v _ptr `*Cuc ~T0 @X0 1 r3 ]
"88
[; ;lcd.c: 88: {
[f ]
"89
[; ;lcd.c: 89:         gotoxy(x,y);
[e ( _gotoxy (2 , _x _y ]
"90
[; ;lcd.c: 90:         while( *ptr )
[e $U 152  ]
[e :U 153 ]
"91
[; ;lcd.c: 91:         putLCD( *ptr++ );
[e ( _putLCD (1 -> *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x `uc ]
[e :U 152 ]
"90
[; ;lcd.c: 90:         while( *ptr )
[e $ != -> *U _ptr `i -> 0 `i 153  ]
[e :U 154 ]
"92
[; ;lcd.c: 92: }
[e :UE 151 ]
}
"94
[; ;lcd.c: 94: char lcdb0(void)
[v _lcdb0 `(uc ~T0 @X0 1 ef ]
"95
[; ;lcd.c: 95: {
{
[e :U _lcdb0 ]
[f ]
"96
[; ;lcd.c: 96:     return(LCD.B0);
[e ) -> . . _LCD 0 3 `uc ]
[e $UE 155  ]
"97
[; ;lcd.c: 97: }
[e :UE 155 ]
}
"98
[; ;lcd.c: 98: char lcdb1(void)
[v _lcdb1 `(uc ~T0 @X0 1 ef ]
"99
[; ;lcd.c: 99: {
{
[e :U _lcdb1 ]
[f ]
"100
[; ;lcd.c: 100:     return(LCD.B1);
[e ) -> . . _LCD 0 4 `uc ]
[e $UE 156  ]
"101
[; ;lcd.c: 101: }
[e :UE 156 ]
}
"103
[; ;lcd.c: 103: void clearLCD( void )
[v _clearLCD `(v ~T0 @X0 1 ef ]
"104
[; ;lcd.c: 104: {
{
[e :U _clearLCD ]
[f ]
"105
[; ;lcd.c: 105:     cmdLCD(0x01);
[e ( _cmdLCD (1 -> -> 1 `i `uc ]
"106
[; ;lcd.c: 106: }
[e :UE 157 ]
}
"109
[; ;lcd.c: 109: int checktecla (void)
[v _checktecla `(i ~T0 @X0 1 ef ]
"110
[; ;lcd.c: 110: {
{
[e :U _checktecla ]
[f ]
[v F1328 `uc ~T0 @X0 -> 17 `i s ]
[i F1328
:U ..
"111
[; ;lcd.c: 111:     char linha2[17] = "      [  ]      ";
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 91 `c
-> 32 `c
-> 32 `c
-> 93 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 32 `c
-> 0 `c
..
]
[v _linha2 `uc ~T0 @X0 -> 17 `i a ]
[e = _linha2 F1328 ]
"112
[; ;lcd.c: 112:     char aux;
[v _aux `uc ~T0 @X0 1 a ]
"113
[; ;lcd.c: 113:             for( char i=0; i<indPassosSize; i++ )
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> _indPassosSize `i 159  ]
[e $U 160  ]
[e :U 159 ]
"114
[; ;lcd.c: 114:     {
{
"115
[; ;lcd.c: 115:         aux = getFIFO();
[e = _aux -> ( _getFIFO ..  `uc ]
"116
[; ;lcd.c: 116:         if(aux>= '0' && aux<= '9')
[e $ ! && >= -> _aux `ui -> 48 `ui <= -> _aux `ui -> 57 `ui 162  ]
"117
[; ;lcd.c: 117:         {
{
"118
[; ;lcd.c: 118:             linha2[i] = aux;
[e = *U + &U _linha2 * -> _i `ux -> -> # *U &U _linha2 `ui `ux _aux ]
"119
[; ;lcd.c: 119:             linha2[i+1] = 's';
[e = *U + &U _linha2 * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _linha2 `ui `ux -> -> 115 `ui `uc ]
"120
[; ;lcd.c: 120:         }
}
[e $U 163  ]
"121
[; ;lcd.c: 121:         else if( aux & 0x20 )
[e :U 162 ]
[e $ ! != & -> _aux `i -> 32 `i -> 0 `i 164  ]
"122
[; ;lcd.c: 122:         {
{
"123
[; ;lcd.c: 123:             linha2[i] = aux & ~0x20;
[e = *U + &U _linha2 * -> _i `ux -> -> # *U &U _linha2 `ui `ux -> & -> _aux `i ~ -> 32 `i `uc ]
"124
[; ;lcd.c: 124:             linha2[i+1] = '-';
[e = *U + &U _linha2 * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _linha2 `ui `ux -> -> 45 `ui `uc ]
"125
[; ;lcd.c: 125:         }
}
[e $U 165  ]
"126
[; ;lcd.c: 126:         else if ( aux )
[e :U 164 ]
[e $ ! != -> _aux `i -> 0 `i 166  ]
"127
[; ;lcd.c: 127:         {
{
"128
[; ;lcd.c: 128:             linha2[i] = aux;
[e = *U + &U _linha2 * -> _i `ux -> -> # *U &U _linha2 `ui `ux _aux ]
"129
[; ;lcd.c: 129:             linha2[i+1] = '+';
[e = *U + &U _linha2 * -> -> + -> _i `i -> 1 `i `ui `ux -> -> # *U &U _linha2 `ui `ux -> -> 43 `ui `uc ]
"130
[; ;lcd.c: 130:         }
}
[e :U 166 ]
[e :U 165 ]
[e :U 163 ]
"131
[; ;lcd.c: 131:             writeLCD(0,1,linha2);
[e ( _writeLCD (3 , , -> -> 0 `i `uc -> -> 1 `i `uc -> &U _linha2 `*Cuc ]
"132
[; ;lcd.c: 132:     }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> _indPassosSize `i 159  ]
[e :U 160 ]
}
"133
[; ;lcd.c: 133: }
[e :UE 158 ]
}
"135
[; ;lcd.c: 135: void screen_car (void)
[v _screen_car `(v ~T0 @X0 1 ef ]
"136
[; ;lcd.c: 136: {
{
[e :U _screen_car ]
[f ]
"137
[; ;lcd.c: 137:     writeLCD(2,0,"SEQUENCIADOR");
[e ( _writeLCD (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 1C ]
"138
[; ;lcd.c: 138:     _delay((unsigned long)((200)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"139
[; ;lcd.c: 139:     writeLCD(2,1,"PROGRAMAVEL");
[e ( _writeLCD (3 , , -> -> 2 `i `uc -> -> 1 `i `uc :s 2C ]
"140
[; ;lcd.c: 140:     _delay((unsigned long)((2000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"141
[; ;lcd.c: 141:     clearLCD();
[e ( _clearLCD ..  ]
"142
[; ;lcd.c: 142: }
[e :UE 167 ]
}
"144
[; ;lcd.c: 144: void screen_menu (void)
[v _screen_menu `(v ~T0 @X0 1 ef ]
"145
[; ;lcd.c: 145: {
{
[e :U _screen_menu ]
[f ]
"146
[; ;lcd.c: 146:     writeLCD(0,0,"INSIRA A SEQUEN.");
[e ( _writeLCD (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 3C ]
"147
[; ;lcd.c: 147: }
[e :UE 168 ]
}
[a 1C 83 69 81 85 69 78 67 73 65 68 79 82 0 ]
[a 2C 80 82 79 71 82 65 77 65 86 69 76 0 ]
[a 3C 73 78 83 73 82 65 32 65 32 83 69 81 85 69 78 46 0 ]
