Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
"27 ./atuadores.h
[; ;./atuadores.h: 27:     {
[s S145 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S145 . A0 A1 B0 B1 C0 C1 D0 D1 ]
"25
[; ;./atuadores.h: 25: {
[u S144 `S145 1 ]
[n S144 . . ]
"14
[; ;./atuadores.h: 14:     {
[s S143 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :4 `uc 1 ]
[n S143 . A B C D . ]
"12
[; ;./atuadores.h: 12: {
[u S142 `S143 1 `uc 1 ]
[n S142 . . ABCD ]
"77 ./lcd.h
[; ;./lcd.h: 77: void initLCD( void );
[v _initLCD `(v ~T0 @X0 0 ef ]
"82
[; ;./lcd.h: 82: void screen_car (void);
[v _screen_car `(v ~T0 @X0 0 ef ]
"7 ./keyboard.h
[; ;./keyboard.h: 7: void initKeyboard( void );
[v _initKeyboard `(v ~T0 @X0 0 ef ]
"11 ./serialIO.h
[; ;./serialIO.h: 11: void initSerialIO( unsigned char * ptrIn, unsigned char * ptrOut, unsigned char length );
[v _initSerialIO `(v ~T0 @X0 0 ef3`*uc`*uc`uc ]
"6 ./keyboard.h
[; ;./keyboard.h: 6: unsigned char keyboardScan( void );
[v _keyboardScan `(uc ~T0 @X0 0 ef ]
"83 ./lcd.h
[; ;./lcd.h: 83: void screen_menu (void);
[v _screen_menu `(v ~T0 @X0 0 ef ]
"5 ./fifo.h
[; ;./fifo.h: 5: unsigned char getFIFO( void );
[v _getFIFO `(uc ~T0 @X0 0 ef ]
[v F1256 `(v ~T0 @X0 1 tf1`ul ]
"92 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic.h
[v __delay `JF1256 ~T0 @X0 0 e ]
[p i __delay ]
"5 ./keyboard.h
[; ;./keyboard.h: 5: unsigned char currentKey( void );
[v _currentKey `(uc ~T0 @X0 0 ef ]
"4
[; ;./keyboard.h: 4: unsigned char previousKey( void );
[v _previousKey `(uc ~T0 @X0 0 ef ]
"4 ./fifo.h
[; ;./fifo.h: 4: void putFIFO( unsigned char c );
[v _putFIFO `(v ~T0 @X0 0 ef1`uc ]
"80 ./lcd.h
[; ;./lcd.h: 80: void clearLCD( void );
[v _clearLCD `(v ~T0 @X0 0 ef ]
"9 ./fifo.h
[; ;./fifo.h: 9: void resetFIFO (void);
[v _resetFIFO `(v ~T0 @X0 0 ef ]
"8
[; ;./fifo.h: 8: unsigned char delFIFO( unsigned char n );
[v _delFIFO `(uc ~T0 @X0 0 ef1`uc ]
"10
[; ;./fifo.h: 10: void restartFIFO (void);
[v _restartFIFO `(v ~T0 @X0 0 ef ]
"76 ./lcd.h
[; ;./lcd.h: 76: void writeLCD( unsigned char x, unsigned char y, const char * ptr );
[v _writeLCD `(v ~T0 @X0 0 ef3`uc`uc`*Cuc ]
"7 ./fifo.h
[; ;./fifo.h: 7: void * displayFIFO( void );
[v _displayFIFO `(*v ~T0 @X0 0 ef ]
"12 ./serialIO.h
[; ;./serialIO.h: 12: void serialIOscan( void );
[v _serialIOscan `(v ~T0 @X0 0 ef ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"61 ./config.h
[p x FOSC  = INTRC_NOCLKOUT ]
"62
[p x WDTE  = OFF ]
"63
[p x MCLRE = OFF ]
"64
[p x LVP   = OFF ]
[v $root$_main `(v ~T0 @X0 0 e ]
"48 main.c
[; ;main.c: 48: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"49
[; ;main.c: 49: {
{
[e :U _main ]
[f ]
"50
[; ;main.c: 50:     unsigned char tecla = 0;
[v _tecla `uc ~T0 @X0 1 a ]
[e = _tecla -> -> 0 `i `uc ]
"51
[; ;main.c: 51:     unsigned char a,b,c,d = 0;
[v _a `uc ~T0 @X0 1 a ]
[v _b `uc ~T0 @X0 1 a ]
[v _c `uc ~T0 @X0 1 a ]
[v _d `uc ~T0 @X0 1 a ]
[e = _d -> -> 0 `i `uc ]
"52
[; ;main.c: 52:     unsigned char rest = 0;
[v _rest `uc ~T0 @X0 1 a ]
[e = _rest -> -> 0 `i `uc ]
"53
[; ;main.c: 53:     SENSORESbits_t sensor;
[v _sensor `S144 ~T0 @X0 1 a ]
"54
[; ;main.c: 54:     ATUADORESbits_t atuador;
[v _atuador `S142 ~T0 @X0 1 a ]
"55
[; ;main.c: 55:     int estado = 0;
[v _estado `i ~T0 @X0 1 a ]
[e = _estado -> 0 `i ]
"56
[; ;main.c: 56:     initLCD();
[e ( _initLCD ..  ]
"57
[; ;main.c: 57:     screen_car();
[e ( _screen_car ..  ]
"58
[; ;main.c: 58:     initKeyboard();
[e ( _initKeyboard ..  ]
"59
[; ;main.c: 59:     initSerialIO( &sensor, &atuador, 1 );
[e ( _initSerialIO (3 , , -> &U _sensor `*uc -> &U _atuador `*uc -> -> 1 `i `uc ]
"60
[; ;main.c: 60:     atuador.ABCD = 0x00;
[e = . _atuador 1 -> -> 0 `i `uc ]
"65
[; ;main.c: 65:     while( 1 )
[e :U 148 ]
"66
[; ;main.c: 66:     {
{
"71
[; ;main.c: 71:         keyboardScan();
[e ( _keyboardScan ..  ]
"72
[; ;main.c: 72:         screen_menu ();
[e ( _screen_menu ..  ]
"73
[; ;main.c: 73:         switch( estado )
[e $U 151  ]
"74
[; ;main.c: 74:         {
{
"75
[; ;main.c: 75:             case 0:
[e :U 152 ]
"76
[; ;main.c: 76:                     break;
[e $U 150  ]
"77
[; ;main.c: 77:             case 10:
[e :U 153 ]
"78
[; ;main.c: 78:                     rest = getFIFO();
[e = _rest ( _getFIFO ..  ]
"79
[; ;main.c: 79:                     if( rest == 'A' )
[e $ ! == -> _rest `ui -> 65 `ui 154  ]
"80
[; ;main.c: 80:                         estado = 100;
[e = _estado -> 100 `i ]
[e $U 155  ]
"81
[; ;main.c: 81:                     else if( rest == 'B' )
[e :U 154 ]
[e $ ! == -> _rest `ui -> 66 `ui 156  ]
"82
[; ;main.c: 82:                         estado = 110;
[e = _estado -> 110 `i ]
[e $U 157  ]
"83
[; ;main.c: 83:                     else if( rest == 'C' )
[e :U 156 ]
[e $ ! == -> _rest `ui -> 67 `ui 158  ]
"84
[; ;main.c: 84:                         estado = 120;
[e = _estado -> 120 `i ]
[e $U 159  ]
"85
[; ;main.c: 85:                     else if( rest == 'D' )
[e :U 158 ]
[e $ ! == -> _rest `ui -> 68 `ui 160  ]
"86
[; ;main.c: 86:                         estado = 130;
[e = _estado -> 130 `i ]
[e $U 161  ]
"87
[; ;main.c: 87:                     else if( rest == '1' )
[e :U 160 ]
[e $ ! == -> _rest `ui -> 49 `ui 162  ]
"88
[; ;main.c: 88:                         estado = 140;
[e = _estado -> 140 `i ]
[e $U 163  ]
"89
[; ;main.c: 89:                     else if( rest == '2' )
[e :U 162 ]
[e $ ! == -> _rest `ui -> 50 `ui 164  ]
"90
[; ;main.c: 90:                         estado = 150;
[e = _estado -> 150 `i ]
[e $U 165  ]
"91
[; ;main.c: 91:                     else if( rest == '3' )
[e :U 164 ]
[e $ ! == -> _rest `ui -> 51 `ui 166  ]
"92
[; ;main.c: 92:                         estado = 160;
[e = _estado -> 160 `i ]
[e $U 167  ]
"93
[; ;main.c: 93:                     else if( rest == '4' )
[e :U 166 ]
[e $ ! == -> _rest `ui -> 52 `ui 168  ]
"94
[; ;main.c: 94:                         estado = 170;
[e = _estado -> 170 `i ]
[e $U 169  ]
"95
[; ;main.c: 95:                     else if( rest == '5' )
[e :U 168 ]
[e $ ! == -> _rest `ui -> 53 `ui 170  ]
"96
[; ;main.c: 96:                         estado = 180;
[e = _estado -> 180 `i ]
[e $U 171  ]
"97
[; ;main.c: 97:                     else if( rest == '6' )
[e :U 170 ]
[e $ ! == -> _rest `ui -> 54 `ui 172  ]
"98
[; ;main.c: 98:                         estado = 190;
[e = _estado -> 190 `i ]
[e $U 173  ]
"99
[; ;main.c: 99:                     else if( rest == '7' )
[e :U 172 ]
[e $ ! == -> _rest `ui -> 55 `ui 174  ]
"100
[; ;main.c: 100:                         estado = 200;
[e = _estado -> 200 `i ]
[e $U 175  ]
"101
[; ;main.c: 101:                     else if( rest == '8' )
[e :U 174 ]
[e $ ! == -> _rest `ui -> 56 `ui 176  ]
"102
[; ;main.c: 102:                         estado = 210;
[e = _estado -> 210 `i ]
[e $U 177  ]
"103
[; ;main.c: 103:                     else if( rest == '9' )
[e :U 176 ]
[e $ ! == -> _rest `ui -> 57 `ui 178  ]
"104
[; ;main.c: 104:                         estado = 220;
[e = _estado -> 220 `i ]
[e $U 179  ]
"105
[; ;main.c: 105:                     else if( rest == 'a' )
[e :U 178 ]
[e $ ! == -> _rest `ui -> 97 `ui 180  ]
"106
[; ;main.c: 106:                         estado = 230;
[e = _estado -> 230 `i ]
[e $U 181  ]
"107
[; ;main.c: 107:                     else if( rest == 'b' )
[e :U 180 ]
[e $ ! == -> _rest `ui -> 98 `ui 182  ]
"108
[; ;main.c: 108:                         estado = 240;
[e = _estado -> 240 `i ]
[e $U 183  ]
"109
[; ;main.c: 109:                     else if( rest == 'c' )
[e :U 182 ]
[e $ ! == -> _rest `ui -> 99 `ui 184  ]
"110
[; ;main.c: 110:                         estado = 250;
[e = _estado -> 250 `i ]
[e $U 185  ]
"111
[; ;main.c: 111:                     else if( rest == 'd' )
[e :U 184 ]
[e $ ! == -> _rest `ui -> 100 `ui 186  ]
"112
[; ;main.c: 112:                         estado = 260;
[e = _estado -> 260 `i ]
[e :U 186 ]
[e :U 185 ]
[e :U 183 ]
[e :U 181 ]
[e :U 179 ]
[e :U 177 ]
[e :U 175 ]
[e :U 173 ]
[e :U 171 ]
[e :U 169 ]
[e :U 167 ]
[e :U 165 ]
[e :U 163 ]
[e :U 161 ]
[e :U 159 ]
[e :U 157 ]
[e :U 155 ]
"113
[; ;main.c: 113:                     break;
[e $U 150  ]
"114
[; ;main.c: 114:             case 100:
[e :U 187 ]
"115
[; ;main.c: 115:                     atuador.A = 1;
[e = . . _atuador 0 0 -> -> 1 `i `uc ]
"116
[; ;main.c: 116:                     estado = 101;
[e = _estado -> 101 `i ]
"117
[; ;main.c: 117:                     break;
[e $U 150  ]
"118
[; ;main.c: 118:             case 101:
[e :U 188 ]
"119
[; ;main.c: 119:                     if( sensor.A1 == 1)
[e $ ! == -> . . _sensor 0 1 `i -> 1 `i 189  ]
"120
[; ;main.c: 120:                         estado = 10;
[e = _estado -> 10 `i ]
[e :U 189 ]
"121
[; ;main.c: 121:                     break;
[e $U 150  ]
"122
[; ;main.c: 122:             case 110:
[e :U 190 ]
"123
[; ;main.c: 123:                     atuador.B = 1;
[e = . . _atuador 0 1 -> -> 1 `i `uc ]
"124
[; ;main.c: 124:                     estado = 111;
[e = _estado -> 111 `i ]
"125
[; ;main.c: 125:                     break;
[e $U 150  ]
"126
[; ;main.c: 126:             case 111:
[e :U 191 ]
"127
[; ;main.c: 127:                     if( sensor.B1 == 1)
[e $ ! == -> . . _sensor 0 3 `i -> 1 `i 192  ]
"128
[; ;main.c: 128:                         estado = 10;
[e = _estado -> 10 `i ]
[e :U 192 ]
"129
[; ;main.c: 129:                     break;
[e $U 150  ]
"130
[; ;main.c: 130:             case 120:
[e :U 193 ]
"131
[; ;main.c: 131:                     atuador.C = 1;
[e = . . _atuador 0 2 -> -> 1 `i `uc ]
"132
[; ;main.c: 132:                     estado = 121;
[e = _estado -> 121 `i ]
"133
[; ;main.c: 133:                     break;
[e $U 150  ]
"134
[; ;main.c: 134:             case 121:
[e :U 194 ]
"135
[; ;main.c: 135:                     if( sensor.C1 == 1)
[e $ ! == -> . . _sensor 0 5 `i -> 1 `i 195  ]
"136
[; ;main.c: 136:                         estado = 10;
[e = _estado -> 10 `i ]
[e :U 195 ]
"137
[; ;main.c: 137:                     break;
[e $U 150  ]
"138
[; ;main.c: 138:             case 130:
[e :U 196 ]
"139
[; ;main.c: 139:                     atuador.D = 1;
[e = . . _atuador 0 3 -> -> 1 `i `uc ]
"140
[; ;main.c: 140:                     estado = 131;
[e = _estado -> 131 `i ]
"141
[; ;main.c: 141:                     break;
[e $U 150  ]
"142
[; ;main.c: 142:             case 131:
[e :U 197 ]
"143
[; ;main.c: 143:                     estado = 10;
[e = _estado -> 10 `i ]
"144
[; ;main.c: 144:                     break;
[e $U 150  ]
"145
[; ;main.c: 145:             case 140:
[e :U 198 ]
"146
[; ;main.c: 146:                     _delay((unsigned long)((1000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"147
[; ;main.c: 147:                     estado = 141;
[e = _estado -> 141 `i ]
"148
[; ;main.c: 148:                     break;
[e $U 150  ]
"149
[; ;main.c: 149:             case 141:
[e :U 199 ]
"150
[; ;main.c: 150:                     estado = 10;
[e = _estado -> 10 `i ]
"151
[; ;main.c: 151:                     break;
[e $U 150  ]
"152
[; ;main.c: 152:             case 150:
[e :U 200 ]
"153
[; ;main.c: 153:                     _delay((unsigned long)((2000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"154
[; ;main.c: 154:                     estado = 151;
[e = _estado -> 151 `i ]
"155
[; ;main.c: 155:                     break;
[e $U 150  ]
"156
[; ;main.c: 156:             case 151:
[e :U 201 ]
"157
[; ;main.c: 157:                     estado = 10;
[e = _estado -> 10 `i ]
"158
[; ;main.c: 158:                     break;
[e $U 150  ]
"159
[; ;main.c: 159:             case 160:
[e :U 202 ]
"160
[; ;main.c: 160:                     _delay((unsigned long)((3000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 3000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"161
[; ;main.c: 161:                     estado = 161;
[e = _estado -> 161 `i ]
"162
[; ;main.c: 162:                     break;
[e $U 150  ]
"163
[; ;main.c: 163:             case 161:
[e :U 203 ]
"164
[; ;main.c: 164:                     estado = 10;
[e = _estado -> 10 `i ]
"165
[; ;main.c: 165:                     break;
[e $U 150  ]
"166
[; ;main.c: 166:             case 170:
[e :U 204 ]
"167
[; ;main.c: 167:                     _delay((unsigned long)((4000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 4000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"168
[; ;main.c: 168:                     estado = 171;
[e = _estado -> 171 `i ]
"169
[; ;main.c: 169:                     break;
[e $U 150  ]
"170
[; ;main.c: 170:             case 171:
[e :U 205 ]
"171
[; ;main.c: 171:                     estado = 10;
[e = _estado -> 10 `i ]
"172
[; ;main.c: 172:                     break;
[e $U 150  ]
"173
[; ;main.c: 173:             case 180:
[e :U 206 ]
"174
[; ;main.c: 174:                     _delay((unsigned long)((5000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 5000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"175
[; ;main.c: 175:                     estado = 181;
[e = _estado -> 181 `i ]
"176
[; ;main.c: 176:                     break;
[e $U 150  ]
"177
[; ;main.c: 177:             case 181:
[e :U 207 ]
"178
[; ;main.c: 178:                     estado = 10;
[e = _estado -> 10 `i ]
"179
[; ;main.c: 179:                     break;
[e $U 150  ]
"180
[; ;main.c: 180:             case 190:
[e :U 208 ]
"181
[; ;main.c: 181:                     _delay((unsigned long)((6000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 6000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"182
[; ;main.c: 182:                     estado = 191;
[e = _estado -> 191 `i ]
"183
[; ;main.c: 183:                     break;
[e $U 150  ]
"184
[; ;main.c: 184:             case 191:
[e :U 209 ]
"185
[; ;main.c: 185:                     estado = 10;
[e = _estado -> 10 `i ]
"186
[; ;main.c: 186:                     break;
[e $U 150  ]
"187
[; ;main.c: 187:             case 200:
[e :U 210 ]
"188
[; ;main.c: 188:                     _delay((unsigned long)((7000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 7000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"189
[; ;main.c: 189:                     estado = 201;
[e = _estado -> 201 `i ]
"190
[; ;main.c: 190:                     break;
[e $U 150  ]
"191
[; ;main.c: 191:             case 201:
[e :U 211 ]
"192
[; ;main.c: 192:                     estado = 10;
[e = _estado -> 10 `i ]
"193
[; ;main.c: 193:                     break;
[e $U 150  ]
"194
[; ;main.c: 194:             case 210:
[e :U 212 ]
"195
[; ;main.c: 195:                     _delay((unsigned long)((8000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 8000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"196
[; ;main.c: 196:                     estado = 211;
[e = _estado -> 211 `i ]
"197
[; ;main.c: 197:                     break;
[e $U 150  ]
"198
[; ;main.c: 198:             case 211:
[e :U 213 ]
"199
[; ;main.c: 199:                     estado = 10;
[e = _estado -> 10 `i ]
"200
[; ;main.c: 200:                     break;
[e $U 150  ]
"201
[; ;main.c: 201:             case 220:
[e :U 214 ]
"202
[; ;main.c: 202:                     _delay((unsigned long)((9000)*(4000000/4000.0)));
[e ( __delay (1 -> * -> -> 9000 `i `d / -> -> 4000000 `l `d .4000.0 `ul ]
"203
[; ;main.c: 203:                     estado = 221;
[e = _estado -> 221 `i ]
"204
[; ;main.c: 204:                     break;
[e $U 150  ]
"205
[; ;main.c: 205:             case 221:
[e :U 215 ]
"206
[; ;main.c: 206:                     estado = 10;
[e = _estado -> 10 `i ]
"207
[; ;main.c: 207:                     break;
[e $U 150  ]
"209
[; ;main.c: 209:             case 230:
[e :U 216 ]
"210
[; ;main.c: 210:                     atuador.A = 0;
[e = . . _atuador 0 0 -> -> 0 `i `uc ]
"211
[; ;main.c: 211:                     estado = 231;
[e = _estado -> 231 `i ]
"212
[; ;main.c: 212:                     break;
[e $U 150  ]
"213
[; ;main.c: 213:             case 231:
[e :U 217 ]
"214
[; ;main.c: 214:                     if( sensor.A0 == 1)
[e $ ! == -> . . _sensor 0 0 `i -> 1 `i 218  ]
"215
[; ;main.c: 215:                         estado = 10;
[e = _estado -> 10 `i ]
[e :U 218 ]
"216
[; ;main.c: 216:                     break;
[e $U 150  ]
"217
[; ;main.c: 217:             case 240:
[e :U 219 ]
"218
[; ;main.c: 218:                     atuador.B = 0;
[e = . . _atuador 0 1 -> -> 0 `i `uc ]
"219
[; ;main.c: 219:                     estado = 241;
[e = _estado -> 241 `i ]
"220
[; ;main.c: 220:                     break;
[e $U 150  ]
"221
[; ;main.c: 221:             case 241:
[e :U 220 ]
"222
[; ;main.c: 222:                     if( sensor.B0 == 1)
[e $ ! == -> . . _sensor 0 2 `i -> 1 `i 221  ]
"223
[; ;main.c: 223:                         estado = 10;
[e = _estado -> 10 `i ]
[e :U 221 ]
"224
[; ;main.c: 224:                     break;
[e $U 150  ]
"225
[; ;main.c: 225:             case 250:
[e :U 222 ]
"226
[; ;main.c: 226:                     atuador.C = 0;
[e = . . _atuador 0 2 -> -> 0 `i `uc ]
"227
[; ;main.c: 227:                     estado = 251;
[e = _estado -> 251 `i ]
"228
[; ;main.c: 228:                     break;
[e $U 150  ]
"229
[; ;main.c: 229:             case 251:
[e :U 223 ]
"230
[; ;main.c: 230:                     if( sensor.C0 == 1)
[e $ ! == -> . . _sensor 0 4 `i -> 1 `i 224  ]
"231
[; ;main.c: 231:                         estado = 10;
[e = _estado -> 10 `i ]
[e :U 224 ]
"232
[; ;main.c: 232:                     break;
[e $U 150  ]
"233
[; ;main.c: 233:             case 260:
[e :U 225 ]
"234
[; ;main.c: 234:                     atuador.D = 0;
[e = . . _atuador 0 3 -> -> 0 `i `uc ]
"235
[; ;main.c: 235:                     estado = 261;
[e = _estado -> 261 `i ]
"236
[; ;main.c: 236:                     break;
[e $U 150  ]
"237
[; ;main.c: 237:             case 261:
[e :U 226 ]
"238
[; ;main.c: 238:                     estado = 10;
[e = _estado -> 10 `i ]
"239
[; ;main.c: 239:                     break;
[e $U 150  ]
"241
[; ;main.c: 241:         }
}
[e $U 150  ]
[e :U 151 ]
[e [\ _estado , $ -> 0 `i 152
 , $ -> 10 `i 153
 , $ -> 100 `i 187
 , $ -> 101 `i 188
 , $ -> 110 `i 190
 , $ -> 111 `i 191
 , $ -> 120 `i 193
 , $ -> 121 `i 194
 , $ -> 130 `i 196
 , $ -> 131 `i 197
 , $ -> 140 `i 198
 , $ -> 141 `i 199
 , $ -> 150 `i 200
 , $ -> 151 `i 201
 , $ -> 160 `i 202
 , $ -> 161 `i 203
 , $ -> 170 `i 204
 , $ -> 171 `i 205
 , $ -> 180 `i 206
 , $ -> 181 `i 207
 , $ -> 190 `i 208
 , $ -> 191 `i 209
 , $ -> 200 `i 210
 , $ -> 201 `i 211
 , $ -> 210 `i 212
 , $ -> 211 `i 213
 , $ -> 220 `i 214
 , $ -> 221 `i 215
 , $ -> 230 `i 216
 , $ -> 231 `i 217
 , $ -> 240 `i 219
 , $ -> 241 `i 220
 , $ -> 250 `i 222
 , $ -> 251 `i 223
 , $ -> 260 `i 225
 , $ -> 261 `i 226
 150 ]
[e :U 150 ]
"242
[; ;main.c: 242:         if( currentKey() && !previousKey() )
[e $ ! && != -> ( _currentKey ..  `i -> 0 `i ! != -> ( _previousKey ..  `i -> 0 `i 227  ]
"243
[; ;main.c: 243:         {
{
"244
[; ;main.c: 244:             tecla = currentKey();
[e = _tecla ( _currentKey ..  ]
"245
[; ;main.c: 245:             switch(tecla)
[e $U 229  ]
"246
[; ;main.c: 246:             {
{
"247
[; ;main.c: 247:                 case 'A':
[e :U 230 ]
"248
[; ;main.c: 248:                         ++a;
[e =+ _a -> -> 1 `i `uc ]
"249
[; ;main.c: 249:                         if( a % 2 )
[e $ ! != % -> _a `i -> 2 `i -> 0 `i 231  ]
"250
[; ;main.c: 250:                             putFIFO( tecla );
[e ( _putFIFO (1 _tecla ]
[e $U 232  ]
"251
[; ;main.c: 251:                         else
[e :U 231 ]
"252
[; ;main.c: 252:                             putFIFO( tecla | 0x20 );
[e ( _putFIFO (1 -> | -> _tecla `i -> 32 `i `uc ]
[e :U 232 ]
"253
[; ;main.c: 253:                         break;
[e $U 228  ]
"254
[; ;main.c: 254:                 case 'B':
[e :U 233 ]
"255
[; ;main.c: 255:                         ++b;
[e =+ _b -> -> 1 `i `uc ]
"256
[; ;main.c: 256:                         if( b % 2 )
[e $ ! != % -> _b `i -> 2 `i -> 0 `i 234  ]
"257
[; ;main.c: 257:                             putFIFO( tecla );
[e ( _putFIFO (1 _tecla ]
[e $U 235  ]
"258
[; ;main.c: 258:                         else
[e :U 234 ]
"259
[; ;main.c: 259:                             putFIFO( tecla | 0x20 );
[e ( _putFIFO (1 -> | -> _tecla `i -> 32 `i `uc ]
[e :U 235 ]
"260
[; ;main.c: 260:                         break;
[e $U 228  ]
"261
[; ;main.c: 261:                 case 'C':
[e :U 236 ]
"262
[; ;main.c: 262:                         ++c;
[e =+ _c -> -> 1 `i `uc ]
"263
[; ;main.c: 263:                         if( c % 2 )
[e $ ! != % -> _c `i -> 2 `i -> 0 `i 237  ]
"264
[; ;main.c: 264:                             putFIFO( tecla );
[e ( _putFIFO (1 _tecla ]
[e $U 238  ]
"265
[; ;main.c: 265:                         else
[e :U 237 ]
"266
[; ;main.c: 266:                             putFIFO( tecla | 0x20 );
[e ( _putFIFO (1 -> | -> _tecla `i -> 32 `i `uc ]
[e :U 238 ]
"267
[; ;main.c: 267:                         break;
[e $U 228  ]
"268
[; ;main.c: 268:                 case 'D':
[e :U 239 ]
"269
[; ;main.c: 269:                         ++d;
[e =+ _d -> -> 1 `i `uc ]
"270
[; ;main.c: 270:                         if( d % 2 )
[e $ ! != % -> _d `i -> 2 `i -> 0 `i 240  ]
"271
[; ;main.c: 271:                             putFIFO( tecla );
[e ( _putFIFO (1 _tecla ]
[e $U 241  ]
"272
[; ;main.c: 272:                         else
[e :U 240 ]
"273
[; ;main.c: 273:                             putFIFO( tecla | 0x20 );
[e ( _putFIFO (1 -> | -> _tecla `i -> 32 `i `uc ]
[e :U 241 ]
"274
[; ;main.c: 274:                         break;
[e $U 228  ]
"275
[; ;main.c: 275:                 case '0':
[e :U 242 ]
"276
[; ;main.c: 276:                         clearLCD();
[e ( _clearLCD ..  ]
"277
[; ;main.c: 277:                         a = b = c = d = 0;
[e = _a = _b = _c = _d -> -> 0 `i `uc ]
"278
[; ;main.c: 278:                         atuador.ABCD = 0;
[e = . _atuador 1 -> -> 0 `i `uc ]
"279
[; ;main.c: 279:                         resetFIFO();
[e ( _resetFIFO ..  ]
"280
[; ;main.c: 280:                         estado = 0;
[e = _estado -> 0 `i ]
"281
[; ;main.c: 281:                         break;
[e $U 228  ]
"282
[; ;main.c: 282:                 case '1':
[e :U 243 ]
"283
[; ;main.c: 283:                 case '2':
[e :U 244 ]
"284
[; ;main.c: 284:                 case '3':
[e :U 245 ]
"285
[; ;main.c: 285:                 case '4':
[e :U 246 ]
"286
[; ;main.c: 286:                 case '5':
[e :U 247 ]
"287
[; ;main.c: 287:                 case '6':
[e :U 248 ]
"288
[; ;main.c: 288:                 case '7':
[e :U 249 ]
"289
[; ;main.c: 289:                 case '8':
[e :U 250 ]
"290
[; ;main.c: 290:                 case '9':
[e :U 251 ]
"291
[; ;main.c: 291:                         putFIFO(tecla);
[e ( _putFIFO (1 _tecla ]
"292
[; ;main.c: 292:                         break;
[e $U 228  ]
"293
[; ;main.c: 293:                 case '*':
[e :U 252 ]
"294
[; ;main.c: 294:                         switch( delFIFO(1) )
[e $U 254  ]
"295
[; ;main.c: 295:                         {
{
"296
[; ;main.c: 296:                             case 'A': a = 0; break;
[e :U 255 ]
[e = _a -> -> 0 `i `uc ]
[e $U 253  ]
"297
[; ;main.c: 297:                             case 'a': a = 1; break;
[e :U 256 ]
[e = _a -> -> 1 `i `uc ]
[e $U 253  ]
"298
[; ;main.c: 298:                             case 'B': b = 0; break;
[e :U 257 ]
[e = _b -> -> 0 `i `uc ]
[e $U 253  ]
"299
[; ;main.c: 299:                             case 'b': b = 1; break;
[e :U 258 ]
[e = _b -> -> 1 `i `uc ]
[e $U 253  ]
"300
[; ;main.c: 300:                             case 'C': c = 0; break;
[e :U 259 ]
[e = _c -> -> 0 `i `uc ]
[e $U 253  ]
"301
[; ;main.c: 301:                             case 'c': c = 1; break;
[e :U 260 ]
[e = _c -> -> 1 `i `uc ]
[e $U 253  ]
"302
[; ;main.c: 302:                             case 'D': d = 0; break;
[e :U 261 ]
[e = _d -> -> 0 `i `uc ]
[e $U 253  ]
"303
[; ;main.c: 303:                             case 'd': d = 1; break;
[e :U 262 ]
[e = _d -> -> 1 `i `uc ]
[e $U 253  ]
"304
[; ;main.c: 304:                         }
}
[e $U 253  ]
[e :U 254 ]
[e [\ -> ( _delFIFO (1 -> -> 1 `i `uc `i , $ -> -> 65 `ui `i 255
 , $ -> -> 97 `ui `i 256
 , $ -> -> 66 `ui `i 257
 , $ -> -> 98 `ui `i 258
 , $ -> -> 67 `ui `i 259
 , $ -> -> 99 `ui `i 260
 , $ -> -> 68 `ui `i 261
 , $ -> -> 100 `ui `i 262
 253 ]
[e :U 253 ]
"305
[; ;main.c: 305:                         clearLCD();
[e ( _clearLCD ..  ]
"306
[; ;main.c: 306:                         break;
[e $U 228  ]
"307
[; ;main.c: 307:                 case '#':
[e :U 263 ]
"308
[; ;main.c: 308:                         restartFIFO();
[e ( _restartFIFO ..  ]
"309
[; ;main.c: 309:                         estado = 10;
[e = _estado -> 10 `i ]
"310
[; ;main.c: 310:                         break;
[e $U 228  ]
"311
[; ;main.c: 311:             }
}
[e $U 228  ]
[e :U 229 ]
[e [\ -> _tecla `i , $ -> -> 65 `ui `i 230
 , $ -> -> 66 `ui `i 233
 , $ -> -> 67 `ui `i 236
 , $ -> -> 68 `ui `i 239
 , $ -> -> 48 `ui `i 242
 , $ -> -> 49 `ui `i 243
 , $ -> -> 50 `ui `i 244
 , $ -> -> 51 `ui `i 245
 , $ -> -> 52 `ui `i 246
 , $ -> -> 53 `ui `i 247
 , $ -> -> 54 `ui `i 248
 , $ -> -> 55 `ui `i 249
 , $ -> -> 56 `ui `i 250
 , $ -> -> 57 `ui `i 251
 , $ -> -> 42 `ui `i 252
 , $ -> -> 35 `ui `i 263
 228 ]
[e :U 228 ]
"312
[; ;main.c: 312:             writeLCD(0,1, displayFIFO() );
[e ( _writeLCD (3 , , -> -> 0 `i `uc -> -> 1 `i `uc -> ( _displayFIFO ..  `*Cuc ]
"313
[; ;main.c: 313:         }
}
[e :U 227 ]
"314
[; ;main.c: 314:         serialIOscan();
[e ( _serialIOscan ..  ]
"315
[; ;main.c: 315:     }
}
[e :U 147 ]
[e $U 148  ]
[e :U 149 ]
"316
[; ;main.c: 316: }
[e :UE 146 ]
}
